{"version":3,"sources":["webpack:///./src/pages/test.tsx"],"names":["Search","index","undefined","state","query","results","getOrCreateIndex","_this","props","Index","load","handleChange","value","console","log","setState","search","expand","map","_ref","ref","score","render","_this2","this","react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","onChange","_","_ref2","React","__webpack_exports__","siteSearchIndex","_public_static_d_612346112_json__WEBPACK_IMPORTED_MODULE_2__","data"],"mappings":"6JAKMA,sJACJC,WAAgBC,IAEhBC,MAAe,CACbC,MAAO,GACPC,QAAS,MAGXC,iBAAmB,WAAM,IACfL,EAAUM,EAAKC,MAAfP,MACR,OAAOM,EAAKN,MAAQM,EAAKN,MAAQQ,QAAMC,KAAKT,MAG9CU,aAAe,SAACC,GACdL,EAAKN,MAAQM,EAAKD,mBAClBO,QAAQC,IAAIF,GACZL,EAAKQ,SAAS,CACZX,MAAOQ,EACPP,QAASE,EAAKN,MAAMe,OAAOJ,EAAO,CAChCK,QAAQ,IACPC,IAAK,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,IAAKC,EAAWF,EAAXE,MAEb,OADAR,QAAQC,IAAIO,GACL,CAACD,MAAKC,aAIjBR,QAAQC,IAAIP,EAAKJ,MAAME,wCAGzBiB,OAAA,WAA0B,IAAAC,EAAAC,KAChBpB,EAAUoB,KAAKrB,MAAfC,MACR,OACEqB,EAAA,yBACEA,EAAA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACC,EAADC,GAAA,IAAKjB,EAALiB,EAAKjB,MAAL,OAAgBW,EAAKZ,aAAaC,IAC5CA,MAAOR,SAnCI0B,aA0CNC,EAAA,mBAAM,IACXC,EADWC,EAAAC,KACXF,gBAMR,OACEP,EAAA,yBACEA,EAAA,cAACzB,EAAD,CAAQC,MAAO+B,EAAgB/B","file":"component---src-pages-test-tsx-dbd7f5ca05d8a03d6d2d.js","sourcesContent":["import * as React from 'react'\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Index } from \"elasticlunr\"\nimport { Input } from \"semantic-ui-react\"\n\nclass Search extends React.Component<Props, State> {\n  index?: Index = undefined\n\n  state: State = {\n    query: '',\n    results: []\n  }\n\n  getOrCreateIndex = () => {\n    const { index } = this.props\n    return this.index ? this.index : Index.load(index)\n  }\n\n  handleChange = (value) => {\n    this.index = this.getOrCreateIndex()\n    console.log(value)\n    this.setState({\n      query: value,\n      results: this.index.search(value, {\n        expand: true\n      }).map( ({ref, score}) => {\n        console.log(score)\n        return {ref, score}\n      })\n    })\n\n    console.log(this.state.results)\n  }\n\n  render(): React.ReactNode {\n    const { query } = this.state\n    return (\n      <div>\n        <Input\n          onChange={(_, {value}) => this.handleChange(value)}\n          value={query}\n        />\n      </div>\n    )\n  }\n}\n\nexport default () => {\n  const { siteSearchIndex } : QueryResult = useStaticQuery(graphql`\n      {\n        siteSearchIndex {\n          index\n        }\n      }`)\n  return (\n    <div>\n      <Search index={siteSearchIndex.index}/>\n    </div>\n  )\n}\n\n\ninterface QueryResult {\n  siteSearchIndex : {\n    index: object\n  }\n}\n\ninterface Props {\n  index?: object\n}\n\ninterface State {\n  query?: string,\n  results: Array<object>\n}"],"sourceRoot":""}