{"version":3,"sources":["webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/seo.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["__webpack_require__","d","__webpack_exports__","formatReadableDate","formatPagePath","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","date","moment","format","index","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","children","_this$props$inverted","inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","style","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","Layout","_ref","_ref$lang","lang","_ref$keywords","keywords","title","_ref$description","description","siteMetadata","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","data","site","metaDescription","defaultMetadata","name","content","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttribute","titleTemplate","meta","concat","length","join","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","padded","vertical","textAlign","href","target","$export","aFunction","toObject","fails","$sort","sort","test","P","F","undefined","comparefn","call","Categories","items","react","List","link","bulleted","map","_ref2","category","count","Item","key","sub_categories","categories","_243471705","totalCount","group","_ref3","fieldValue","sub_categories_Categories","BlogTags","Label","Group","tag","as","sub_tags","_ref3$limit","limit","_84730814","tags","sub_tags_BlogTags","_ref4","_ref5","slice","_ref6","sub_recent_posts","posts","_3672802271","edges","node","fields","slug","frontmatter","Menu","secondary","pointing","fixed","Container","header","fontSize","lineHeight","position","paddingTop","Grid","centered","container","stackable","Column","width","Segment","Header","Subheader","display","float","linked_span","footer","module","exports","method","arg","GridColumn","className","computer","floated","largeScreen","mobile","only","stretched","tablet","verticalAlign","widescreen","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","columns","divided","reversed","Grid_GridRow","celled","doubling","relaxed","Row"],"mappings":"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","file":"4-2486d3750f375a1e0dea.js","sourcesContent":["import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult= useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>; sources are available at <a href={'https://github.com/woohyeok-choi/woohyeok-choi.github.io'} target={'_blank'}><LinkedSpan inverted={true} children={'this repo.'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}