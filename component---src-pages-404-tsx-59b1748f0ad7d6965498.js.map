{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/seo.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_common_seo__WEBPACK_IMPORTED_MODULE_1__","_components_common_layout__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_components_common_linked_span__WEBPACK_IMPORTED_MODULE_5__","title","vertical","padded","style","marginLeft","as","content","href","inverted","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","children","_this$props$inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","Layout","_ref","_ref$lang","lang","_ref$keywords","keywords","_ref$description","description","siteMetadata","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","data","site","metaDescription","defaultMetadata","name","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttribute","link","rel","titleTemplate","meta","concat","length","join"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAMeE,EAAA,0BACbC,EAAA,cAACE,EAAA,EAAD,KACEF,EAAA,cAACC,EAAA,EAAD,CAAKK,MAAM,mBACXN,EAAA,cAACG,EAAA,EAAD,CAASI,UAAQ,EAACC,QAAM,EAACC,MAAO,CAACC,WAAY,QAC3CV,EAAA,cAACI,EAAA,EAAD,CAAQO,GAAI,KAAMC,QAAS,mBAC3BZ,EAAA,cAACI,EAAA,EAAD,CAAQO,GAAI,MACVX,EAAA,mBAAGa,KAAM,KACPb,EAAA,cAACK,EAAA,EAAD,CAAYS,UAAU,GAAtB,oHCXJC,EAAa,CACjBC,SAAU,qBACVC,UAAW,2BAGPC,EAAe,CACnBF,SAAU,yBACVC,UAAW,qBAGPE,EAAqB,CACzBH,SAAU,0BACVC,UAAW,sBAGPG,EAAuB,CAC3BJ,SAAU,yBACVC,UAAW,2BAOQI,sJACnBC,MAAe,CACbC,WAAW,KAGbC,iBAAmB,kBAAMC,EAAKC,SAAS,CAACH,WAAW,OAEnDI,iBAAmB,kBAAMF,EAAKC,SAAS,CAACH,WAAW,mCAEnDK,OAAA,WAA0B,IAAAC,EACeC,KAAKC,MAApCC,EADgBH,EAChBG,SADgBC,EAAAJ,EACNf,gBADM,IAAAmB,KAEhBV,EAAcO,KAAKR,MAAnBC,UAEFW,EAAYpB,EAfM,0BAFR,qBAmBVqB,EAAQrB,EACZS,EAAYJ,EAAqBC,EAEjCG,EAAYR,EAAaG,EAG3B,OACEkB,EAAA,sBAAM3B,MAAO,CAAC4B,gBAAiBF,EAAMnB,SAAUsB,UAAS,wBAA0BJ,EAAaC,MAAOA,EAAMlB,WAAasB,aAAcT,KAAKN,iBAAkBgB,aAAcV,KAAKH,kBAC7KK,OAvB8BS,+CC1BxC,IAAAzC,EAAAH,EAAA,GAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAoBe6C,IAdgC,SAAAC,GAEzC,IADJX,EACIW,EADJX,SAEA,OACEhC,EAAA,yBACIgC,4ECUOjC,EAAA,WAAA4C,GAAmE,IAAAC,EAAAD,EAAhEE,YAAgE,IAAAD,EAAzD,KAAyDA,EAAAE,EAAAH,EAAnDI,gBAAmD,IAAAD,EAAxC,GAAwCA,EAApCxC,EAAoCqC,EAApCrC,MAAoC0C,EAAAL,EAA7BM,mBAA6B,IAAAD,EAAf,GAAeA,EAWxEE,EAXwEC,EAAAC,KACxEC,KAUAH,aAEFI,EAAkBL,GAAeC,EAAaD,YAC9CM,EAAkB,CACtB,CACEC,KAAI,cACJ5C,QAAS0C,GAEX,CACEG,SAAQ,WACR7C,QAASN,GAEX,CACEmD,SAAQ,eACR7C,QAASsC,EAAa5C,OAExB,CACEmD,SAAQ,iBACR7C,QAAS0C,GAEX,CACEG,SAAQ,UACR7C,QAAO,WAET,CACE4C,KAAI,eACJ5C,QAAO,WAET,CACE4C,KAAI,kBACJ5C,QAASsC,EAAaQ,QAExB,CACEF,KAAI,gBACJ5C,QAASN,GAEX,CACEkD,KAAI,sBACJ5C,QAAS0C,IAIb,OACElB,EAAA,cAACuB,EAAAC,EAAD,CACEC,cAAe,CACbhB,QAEFiB,KAAM,CACJ,CACEC,IAAK,aACLlD,KAAM,+EAGVP,MAAOA,EACP0D,cAAa,QAAUd,EAAa5C,MACpC2D,KACEV,EAAgBW,OAAOnB,EAASoB,OAAS,CAAEX,KAAM,WAAY5C,QAASmC,EAASqB,KAAK,OAAU","file":"component---src-pages-404-tsx-59b1748f0ad7d6965498.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../components/common/seo\"\r\nimport Layout from \"../components/common/layout\"\r\nimport { Container, Header, Segment } from \"semantic-ui-react\"\r\nimport LinkedSpan from \"../components/common/linked-span\"\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title=\"Page Not found\"/>\r\n    <Segment vertical padded style={{marginLeft: '1em'}}>\r\n      <Header as={'h1'} content={'Page Not found'}/>\r\n      <Header as={'h3'}>\r\n        <a href={'/'}>\r\n          <LinkedSpan inverted={false}>Return to main</LinkedSpan>\r\n        </a>\r\n      </Header>\r\n    </Segment>\r\n  </Layout>\r\n)\r\n\r\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\nimport '../../layout.css'\r\n\r\nconst Layout: React.FunctionComponent<Props> = ({\r\n  children\r\n}) => {\r\n  return (\r\n    <div>\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport default Layout","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult= useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      link={[\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdn.rawgit.com/jpswalsh/academicons/master/css/academicons.min.css'\r\n        }\r\n      ]}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n"],"sourceRoot":""}