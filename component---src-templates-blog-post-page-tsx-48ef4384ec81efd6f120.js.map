{"version":3,"sources":["webpack:///./src/components/common/disqus.jsx","webpack:///./src/components/blog/main-post-page.tsx","webpack:///./src/templates/blog-post-page.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/seo.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx"],"names":["Disqus","render","shortName","this","props","config","url","identifier","title","react_default","a","createElement","lib","shortname","React","Component","propTypes","PropTypes","string","main_post_page","_ref","data","prevPost","nextPost","address","node","id","frontmatter","html","fields","date","category","tags","siteMetadata","slug","_1497630466","site","react","container","Header","as","dividing","Subheader","href","linked_span","inverted","children","name","formatReadableDate","Segment","vertical","padded","basic","dangerouslySetInnerHTML","__html","style","fontSize","fontWeight","fontStyle","Label","Group","display","map","tag","key","content","disqusShortname","disqus","Grid","columns","stackable","Column","textAlign","__webpack_exports__","pageContext","location","excerpt","lang","layout","seo","keywords","concat","_ref2","description","query","__webpack_require__","d","formatPagePath","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment","format","index","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","_this$props","_this$props$inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","react__WEBPACK_IMPORTED_MODULE_0__","Layout","_ref$lang","_ref$keywords","_ref$description","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","defaultMetadata","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttribute","link","rel","type","charset","titleTemplate","meta","length","join","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","target","Categories","items","List","bulleted","count","Item","sub_categories","categories","_243471705","totalCount","group","_ref3","fieldValue","sub_categories_Categories","BlogTags","sub_tags","_ref3$limit","limit","_84730814","sub_tags_BlogTags","sort","_ref4","_ref5","slice","_ref6","sub_recent_posts","posts","_3672802271","edges","Menu","secondary","pointing","fixed","Container","header","lineHeight","position","paddingTop","centered","width","float","footer"],"mappings":"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","file":"component---src-templates-blog-post-page-tsx-48ef4384ec81efd6f120.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CommentCount, DiscussionEmbed } from \"disqus-react\"\n\nclass Disqus extends React.Component {\n  render() {\n    const { shortName } = this.props\n    const config = {\n      url: this.props.url,\n      identifier: this.props.identifier,\n      title: this.props.title\n    }\n\n    return (\n      <div>\n        <DiscussionEmbed shortname={shortName} config={config}/>\n      </div>\n    )\n  }\n}\n\n\nDisqus.propTypes = {\n  shortName: PropTypes.string,\n  url: PropTypes.string,\n  identifier: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default Disqus","import * as React from \"react\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\nimport { Label, Header, Segment, Grid } from \"semantic-ui-react\"\nimport BlogContainer from './container'\nimport Disqus from '../common/disqus'\nimport { formatReadableDate } from '../../utils'\nimport LinkedSpan from \"../common/linked-span\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nexport default ( { data, prevPost, nextPost, address } : Props) => {\n  const { node } = data\n  const { id, frontmatter, html, fields } = node\n  const { title, date } = frontmatter\n  const { category, tags, slug } = fields\n  const { site }: QueryResult = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          disqusShortname\n        }\n      }\n    }\n  `)\n  const { siteMetadata } = site\n  return (\n    <BlogContainer>\n      <Header as={'h1'} dividing>\n        <Header.Subheader>\n          Category: <a href={category.slug}>\n            <LinkedSpan inverted={false} children={category.name}/>\n          </a>\n        </Header.Subheader>\n        {title}\n        <Header.Subheader>\n          { formatReadableDate(date) }\n        </Header.Subheader>\n      </Header>\n      <Segment vertical padded basic>\n        <div dangerouslySetInnerHTML={{__html: html}}/>\n      </Segment>\n      { tags &&\n      <Segment vertical padded={'very'}>\n        <span style={{fontSize: '16px', fontWeight: 'bold', fontStyle: 'italic'}}>Tagged with </span>\n        <Label.Group style={{display: 'inline'}}>\n          { tags.map(tag => <Label key={tag.name} href={tag.slug} content={tag.name}/>) }\n        </Label.Group>\n      </Segment>\n      }\n      {\n        siteMetadata.disqusShortname &&\n        <Segment vertical padded={'very'}>\n          <Disqus shortName={siteMetadata.disqusShortname}\n                  title={title}\n                  identifier={id}\n                  url={address}\n          />\n        </Segment>\n      }\n      <Grid columns={2} as={Segment} vertical stackable padded>\n        <Grid.Column textAlign={'left'}>\n          { prevPost &&\n            <Header as={'h3'}>\n              Previous post\n              <Header.Subheader style={{fontSize: '16px'}}>\n                <a href={prevPost.slug}>\n                  <LinkedSpan inverted={false} children={prevPost.title}/>\n                </a>\n              </Header.Subheader>\n            </Header>\n          }\n        </Grid.Column>\n        <Grid.Column textAlign={'right'}>\n            { nextPost &&\n              <Header as={'h3'}>\n                Next post\n                <Header.Subheader style={{fontSize: '16px'}}>\n                  <a href={nextPost.slug}>\n                    <LinkedSpan inverted={false} children={nextPost.title}/>\n                  </a>\n                </Header.Subheader>\n              </Header>\n            }\n        </Grid.Column>\n      </Grid>\n    </BlogContainer>\n  )\n}\n\ninterface QueryResult {\n  site: {\n    siteMetadata: {\n      disqusShortname?: string\n    }\n  }\n}\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  address: string\n  prevPost?: {\n    title?: string\n    slug?: string\n  }\n  nextPost?: {\n    title?: string\n    slug?: string\n  }\n}","import * as React from 'react'\nimport Layout from \"../components/common/layout\"\nimport BlogContent from '../components/blog/main-post-page'\nimport { MarkdownRemarkNodeType } from \"../types\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/common/seo\"\n\nexport default ( { data, pageContext, location } : Props) => {\n  const { node } = data\n  const { frontmatter, fields, excerpt } = node\n  const { title, lang } = frontmatter\n  const { category, tags } = fields\n  const { nextPost, prevPost } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={ title }\n           lang={ lang }\n           keywords={[category.name, ...tags.map(({name}) => name)]}\n           description={ excerpt }/>\n      <BlogContent data={data} nextPost={nextPost} prevPost={prevPost} address={location.href}/>\n    </Layout>\n  )\n}\n\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  location?: {\n    href: string\n  }\n  pageContext: {\n    nextPost?: {\n      title?: string\n      slug?: string\n    }\n    prevPost?: {\n      title?: string\n      slug?: string\n    }\n  }\n}\n\nexport const query = graphql`\n  query getPosts($slug: String!) {\n    node: markdownRemark(fields: {\n      slug: {\n        eq: $slug\n      }\n    }) {\n      id\n      html\n      excerpt(pruneLength: 140)\n      frontmatter {\n        title\n        date\n        lang\n      }\n      fields {\n        slug\n        category {\n          name\n          slug\n        }\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }`","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult= useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      link={[\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdn.rawgit.com/jpswalsh/academicons/master/css/academicons.min.css',\r\n          type: \"text/css\"\r\n        },\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css',\r\n          type: \"text/css\",\r\n          charset: 'UTF-8'\r\n        },\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css',\r\n          type: \"text/css\"\r\n        },\r\n        {\r\n          rel: 'stylesheet',\r\n          href: '//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css',\r\n        }\r\n      ]}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>; sources are available at <a href={'https://github.com/woohyeok-choi/woohyeok-choi.github.io'} target={'_blank'}><LinkedSpan inverted={true} children={'this repo.'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}"],"sourceRoot":""}