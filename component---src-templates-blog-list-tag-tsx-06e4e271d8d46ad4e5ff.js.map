{"version":3,"sources":["webpack:///./src/templates/blog-list-tag.tsx","webpack:///./src/utils.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/blog-categories.tsx","webpack:///./src/components/blog-tags.tsx","webpack:///./src/components/blog-list-items.tsx","webpack:///./src/components/blog-pagination.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_blog_categories__WEBPACK_IMPORTED_MODULE_6__","_components_blog_tags__WEBPACK_IMPORTED_MODULE_7__","_components_blog_list_items__WEBPACK_IMPORTED_MODULE_8__","_components_blog_pagination__WEBPACK_IMPORTED_MODULE_9__","_utils__WEBPACK_IMPORTED_MODULE_10__","props","data","pageContext","Row","centered","Column","width","as","param","isAlias","items","posts","edges","textAlign","totalPages","totalPage","activePage","currentPage","onPageChange","page","navigate","formatPagePath","formatReadableDate","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","date","moment","format","index","paramType","basePath","paramPath","changeCase","Layout","_ref","children","BlogCategories","_ref$activeCategory","activeCategory","category","react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","link","bulleted","map","_ref2","count","Item","key","href","active","categories","_public_static_d_243471705_json__WEBPACK_IMPORTED_MODULE_2__","totalCount","group","concat","_ref3","fieldValue","Object","assign","BlogTags","react__WEBPACK_IMPORTED_MODULE_2__","Group","tag","tags","_public_static_d_84730814_json__WEBPACK_IMPORTED_MODULE_1__","BlogListItem","node","id","frontmatter","fields","excerpt","title","slug","react__WEBPACK_IMPORTED_MODULE_1__","Content","Header","alias","origin","Meta","Description","Extra","name","size","_props$isAlias","divided","item","ellipsisItem","undefined","boundaryRange","siblingRange","_","prevItem","nextItem","HeaderSubheader","className","content","classes","classnames_default","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","create","factories","Header_HeaderSubheader","HeaderContent","Header_HeaderContent","attached","block","color","disabled","dividing","floated","icon","image","inverted","sub","subheader","classNameBuilders","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Subheader"],"mappings":"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","file":"component---src-templates-blog-list-tag-tsx-06e4e271d8d46ad4e5ff.js","sourcesContent":["import * as React from 'react'\r\nimport { Container, Grid, Header } from \"semantic-ui-react\"\r\nimport { graphql, navigate } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport BlogCategories from \"../components/blog-categories\"\r\nimport BlogTags from \"../components/blog-tags\"\r\nimport BlogList from \"../components/blog-list-items\"\r\nimport BlogPagination from \"../components/blog-pagination\"\r\nimport { MarkdownRemarkNodeType } from \"../types\"\r\nimport { formatPagePath } from \"../utils\"\r\n\r\nexport default (props ) => {\r\n  const { data, pageContext } : Props = props\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Grid>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={10}>\r\n              <Header as={'h1'}>\r\n                Posts tagged with \"{pageContext.param}\"\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <BlogCategories/>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              <BlogList isAlias={false} items={data.posts.edges}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <BlogTags/>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={10} textAlign={\"center\"}>\r\n              <BlogPagination totalPages={pageContext.totalPage}\r\n                              activePage={pageContext.currentPage}\r\n                              onPageChange={ page => { navigate(formatPagePath(page - 1, 'tag', pageContext.param))} }\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query listBlogPostsByTag($skip: Int!, $limit: Int!, $param: String!) {\r\n    posts: allMarkdownRemark(\r\n      sort: {\r\n        fields: frontmatter___date,\r\n        order: DESC\r\n      }\r\n      limit: $limit\r\n      skip: $skip\r\n      filter: {\r\n        frontmatter: {\r\n          tags: {\r\n            eq: $param\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n          fields {\r\n            slug {\r\n              origin\r\n            }\r\n            category {\r\n              name\r\n              slug\r\n            }\r\n            tags {\r\n              name\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\ninterface PageContext {\r\n  currentPage: number\r\n  totalPage: number\r\n  limit: number\r\n  skip: number\r\n  param: string\r\n}\r\n\r\ninterface QueryResult {\r\n  posts: {\r\n    edges: Array<MarkdownRemarkNodeType>\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  data: QueryResult\r\n  pageContext: PageContext\r\n}","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../utils\"\n\nconst BlogCategories: React.FunctionComponent<Props> = ({ items, activeCategory = items[0].category }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}\n                     active={activeCategory === category}>\n            {category} ({count})\n          </List.Item>,\n        )\n      }\n    </List>\n  )\n}\n\nexport default (props: DefaultProps) => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"none\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <BlogCategories items={items} {...props} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\ninterface DefaultProps {\n  activeCategory?: string\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default () => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n  return (\n    <BlogTags items={\n      tags.group.map(({ fieldValue, totalCount }) => ({\n        tag: fieldValue,\n        count: totalCount,\n        link: formatPagePath(0, \"tag\", fieldValue),\n      }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface Props {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\r\nimport { MarkdownRemarkNodeType } from \"../types\"\r\nimport { Label, Item } from \"semantic-ui-react\"\r\nimport { formatReadableDate } from \"../utils\"\r\n\r\nconst BlogListItem: React.FunctionComponent<ItemProps> = ({ data, isAlias }) => {\r\n  const { node } = data\r\n  const { id, frontmatter, fields, excerpt } = node\r\n  const { title, date } = frontmatter\r\n  const { slug, category, tags } = fields\r\n\r\n  return (\r\n   <Item key={id}>\r\n     <Item.Content>\r\n       <Item.Header as={'a'} href={isAlias ? slug.alias : slug.origin }>\r\n         {title}\r\n       </Item.Header>\r\n       <Item.Meta>\r\n         {formatReadableDate(date)}\r\n       </Item.Meta>\r\n       <Item.Description>\r\n         {excerpt}\r\n       </Item.Description>\r\n       <Item.Extra>\r\n         <p>\r\n           Category: <a href={category.slug}>{category.name}</a>\r\n         </p>\r\n         <p>\r\n           {tags &&\r\n           <Label.Group>\r\n             {tags.map(({slug, name}) => <Label size={\"mini\"} as='a' href={slug}>{name}</Label>)}\r\n           </Label.Group>\r\n           }\r\n         </p>\r\n       </Item.Extra>\r\n     </Item.Content>\r\n   </Item>\r\n  )\r\n}\r\n\r\n\r\nexport default (props : Props) => {\r\n  const { isAlias = false, items } = props\r\n  return (\r\n    <Item.Group divided>\r\n      {\r\n        items.map(item => <BlogListItem data={item} isAlias={isAlias}/>)\r\n      }\r\n    </Item.Group>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  isAlias: boolean\r\n  items: Array<MarkdownRemarkNodeType>\r\n}\r\n\r\ninterface ItemProps {\r\n  isAlias: boolean\r\n  data: MarkdownRemarkNodeType\r\n}","import * as React from 'react'\nimport { Pagination } from \"semantic-ui-react\"\n\ninterface Props {\n  totalPages: number\n  activePage: number\n  onPageChange?: (number) => void\n}\n\nexport default (props: Props) => <Pagination totalPages={props.totalPages}\n                                             activePage={props.activePage}\n                                             ellipsisItem={undefined}\n                                             boundaryRange={0}\n                                             siblingRange={2}\n                                             onPageChange={(_, { activePage }) => props.onPageChange(activePage)}\n                                             prevItem={undefined}\n                                             nextItem={undefined}/>","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Image from '../../elements/Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;"],"sourceRoot":""}