{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","webpack:///./src/pages/test.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./node_modules/elasticlunr/elasticlunr.js"],"names":["_Component","Input","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","props","loading","icon","_this$props2","disabled","tabIndex","inputRef","current","focus","select","e","value","child","defaultProps","ref","c","handleRef","_this$props3","type","computeTabIndex","unhandled","getUnhandledProps","_partitionHTMLProps","_partitionHTMLProps2","htmlInputProps","rest","onChange","handleChange","key","_this2","_this$props4","action","actionPosition","children","className","error","fluid","iconPosition","input","inverted","label","labelPosition","size","transparent","classes","ElementType","getElementType","_this$partitionProps","partitionProps","_this$partitionProps2","isNil","childElements","toArray","handleChildOverrides","createElement","actionElement","Button","create","autoGenerateKey","labelElement","Label","Icon","computeIcon","propTypes","Search","index","undefined","state","query","results","getOrCreateIndex","Index","load","console","log","setState","search","expand","map","score","render","_","React","siteSearchIndex","ButtonContent","content","hidden","visible","handledProps","ButtonGroup","attached","basic","buttons","color","compact","floated","labeled","negative","positive","primary","secondary","toggle","vertical","widths","button","ButtonOr","text","preventDefault","role","active","animated","circular","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","buttonClasses","containerClasses","pointing","onClick","handleClick","Ref","innerRef","hasChildren","computeButtonAriaRole","as","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","pipeline","add","trimmer","stopWordFilter","stemmer","version","lunr","utils","warn","message","toString","obj","EventEmitter","events","prototype","addListener","slice","fn","pop","names","TypeError","forEach","name","hasHandler","push","removeListener","fnIndex","indexOf","splice","emit","tokenizer","str","isArray","arr","filter","token","t","toLowerCase","out","item","tokens","split","seperator","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","getRegisteredFunction","warnIfFunctionNotRegistered","serialised","fnName","Error","fns","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","i","j","reset","get","toJSON","_fields","_ref","documentStore","DocumentStore","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","Object","hasOwnProperty","df","getDocFreq","getFields","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","sort","a","b","booleanType","bool","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","constructor","attr","clone","updateFieldLength","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","root","tokenInfo","hasToken","node","getNode","memo","parse","buildUserConfig","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","element","locationFor","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements"],"mappings":"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","file":"component---src-pages-test-tsx-2afdcbd6305f8a150eca.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport { handleRef } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeIcon\", function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _this.inputRef.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"select\", function () {\n      return _this.inputRef.current.select();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChildOverrides\", function (child, defaultProps) {\n      return _objectSpread({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"partitionProps\", function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_objectSpread({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          actionPosition = _this$props4.actionPosition,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          error = _this$props4.error,\n          fluid = _this$props4.fluid,\n          focus = _this$props4.focus,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          input = _this$props4.input,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          size = _this$props4.size,\n          transparent = _this$props4.transparent,\n          type = _this$props4.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _this$partitionProps = this.partitionProps(),\n          _this$partitionProps2 = _slicedToArray(_this$partitionProps, 2),\n          htmlInputProps = _this$partitionProps2[0],\n          rest = _this$partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action, {\n        autoGenerateKey: false\n      });\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        },\n        autoGenerateKey: false\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps,\n        autoGenerateKey: false\n      }), Icon.create(this.computeIcon(), {\n        autoGenerateKey: false\n      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\n_defineProperty(Input, \"defaultProps\", {\n  type: 'text'\n});\n\n_defineProperty(Input, \"handledProps\", [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"]);\n\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import * as React from 'react'\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Index } from \"elasticlunr\"\nimport { Input } from \"semantic-ui-react\"\n\nclass Search extends React.Component<Props, State> {\n  index?: Index = undefined\n\n  state: State = {\n    query: '',\n    results: []\n  }\n\n  getOrCreateIndex = () => {\n    const { index } = this.props\n    return this.index ? this.index : Index.load(index)\n  }\n\n  handleChange = (value) => {\n    this.index = this.getOrCreateIndex()\n    console.log(value)\n    this.setState({\n      query: value,\n      results: this.index.search(value, {\n        expand: true\n      }).map( ({ref, score}) => {\n        console.log(score)\n        return {ref, score}\n      })\n    })\n\n    console.log(this.state.results)\n  }\n\n  render(): React.ReactNode {\n    const { query } = this.state\n    return (\n      <div>\n        <Input\n          onChange={(_, {value}) => this.handleChange(value)}\n          value={query}\n        />\n      </div>\n    )\n  }\n}\n\nexport default () => {\n  const { siteSearchIndex } : QueryResult = useStaticQuery(graphql`\n      {\n        siteSearchIndex {\n          index\n        }\n      }`)\n  return (\n    <div>\n      <Search index={siteSearchIndex.index}/>\n    </div>\n  )\n}\n\n\ninterface QueryResult {\n  siteSearchIndex : {\n    index: object\n  }\n}\n\ninterface Props {\n  index?: object\n}\n\ninterface State {\n  query?: string,\n  results: Array<object>\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.is-array\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n(function () {\n  /*!\n   * elasticlunr.js\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * Convenience function for instantiating a new elasticlunr index and configuring it\n   * with the default pipeline functions and the passed config function.\n   *\n   * When using this convenience function a new index will be created with the\n   * following functions already in the pipeline:\n   * \n   * 1. elasticlunr.trimmer - trim non-word character\n   * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n   * index\n   * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n   *\n   *\n   * Example:\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.addField('id');\n   *       this.addField('title');\n   *       this.addField('body');\n   *       \n   *       //this.setRef('id'); // default ref is 'id'\n   *\n   *       this.pipeline.add(function () {\n   *         // some custom pipeline function\n   *       });\n   *     });\n   * \n   *    idx.addDoc({\n   *      id: 1, \n   *      title: 'Oracle released database 12g',\n   *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n   *    });\n   * \n   *    idx.addDoc({\n   *      id: 2, \n   *      title: 'Oracle released annual profit report',\n   *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n   *    });\n   * \n   *    # simple search\n   *    idx.search('oracle database');\n   * \n   *    # search with query-time boosting\n   *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   *\n   * @param {Function} config A function that will be called with the new instance\n   * of the elasticlunr.Index as both its context and first parameter. It can be used to\n   * customize the instance of new elasticlunr.Index.\n   * @namespace\n   * @module\n   * @return {elasticlunr.Index}\n   *\n   */\n  var elasticlunr = function elasticlunr(config) {\n    var idx = new elasticlunr.Index();\n    idx.pipeline.add(elasticlunr.trimmer, elasticlunr.stopWordFilter, elasticlunr.stemmer);\n    if (config) config.call(idx, idx);\n    return idx;\n  };\n\n  elasticlunr.version = \"0.9.5\"; // only used this to make elasticlunr.js compatible with lunr-languages\n  // this is a trick to define a global alias of elasticlunr\n\n  lunr = elasticlunr;\n  /*!\n   * elasticlunr.utils\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A namespace containing utils for the rest of the elasticlunr library\n   */\n\n  elasticlunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf Utils\n   */\n\n  elasticlunr.utils.warn = function (global) {\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n  }(this);\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {object} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf Utils\n   */\n\n\n  elasticlunr.utils.toString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    }\n\n    return obj.toString();\n  };\n  /*!\n   * elasticlunr.EventEmitter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n   * It manages adding and removing event handlers and triggering events and their handlers.\n   *\n   * Each event could has multiple corresponding functions,\n   * these functions will be called as the sequence that they are added into the event.\n   * \n   * @constructor\n   */\n\n\n  elasticlunr.EventEmitter = function () {\n    this.events = {};\n  };\n  /**\n   * Binds a handler function to a specific event(s).\n   *\n   * Can bind a single function to many different events in one call.\n   *\n   * @param {String} [eventName] The name(s) of events to bind this function to.\n   * @param {Function} fn The function to call when an event is fired.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.addListener = function () {\n    var args = Array.prototype.slice.call(arguments),\n        fn = args.pop(),\n        names = args;\n    if (typeof fn !== \"function\") throw new TypeError(\"last argument must be a function\");\n    names.forEach(function (name) {\n      if (!this.hasHandler(name)) this.events[name] = [];\n      this.events[name].push(fn);\n    }, this);\n  };\n  /**\n   * Removes a handler function from a specific event.\n   *\n   * @param {String} eventName The name of the event to remove this function from.\n   * @param {Function} fn The function to remove from an event.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n    if (!this.hasHandler(name)) return;\n    var fnIndex = this.events[name].indexOf(fn);\n    if (fnIndex === -1) return;\n    this.events[name].splice(fnIndex, 1);\n    if (this.events[name].length == 0) delete this.events[name];\n  };\n  /**\n   * Call all functions that bounded to the given event.\n   *\n   * Additional data can be passed to the event handler as arguments to `emit`\n   * after the event name.\n   *\n   * @param {String} eventName The name of the event to emit.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.emit = function (name) {\n    if (!this.hasHandler(name)) return;\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[name].forEach(function (fn) {\n      fn.apply(undefined, args);\n    }, this);\n  };\n  /**\n   * Checks whether a handler has ever been stored against an event.\n   *\n   * @param {String} eventName The name of the event to check.\n   * @private\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n    return name in this.events;\n  };\n  /*!\n   * elasticlunr.tokenizer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A function for splitting a string into tokens.\n   * Currently English is supported as default.\n   * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n   * the value of this property to set how you want strings are split into tokens.\n   * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n   * text process, then you'd better not change it.\n   *\n   * @module\n   * @param {String} str The string that you want to tokenize.\n   * @see elasticlunr.tokenizer.seperator\n   * @return {Array}\n   */\n\n\n  elasticlunr.tokenizer = function (str) {\n    if (!arguments.length || str === null || str === undefined) return [];\n\n    if (Array.isArray(str)) {\n      var arr = str.filter(function (token) {\n        if (token === null || token === undefined) {\n          return false;\n        }\n\n        return true;\n      });\n      arr = arr.map(function (t) {\n        return elasticlunr.utils.toString(t).toLowerCase();\n      });\n      var out = [];\n      arr.forEach(function (item) {\n        var tokens = item.split(elasticlunr.tokenizer.seperator);\n        out = out.concat(tokens);\n      }, this);\n      return out;\n    }\n\n    return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n  };\n  /**\n   * Default string seperator.\n   */\n\n\n  elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n  /**\n   * The sperator used to split a string into tokens. Override this property to change the behaviour of\n   * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see elasticlunr.tokenizer\n   */\n\n  elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  /**\n   * Set up customized string seperator\n   *\n   * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n   */\n\n  elasticlunr.tokenizer.setSeperator = function (sep) {\n    if (sep !== null && sep !== undefined && typeof sep === 'object') {\n      elasticlunr.tokenizer.seperator = sep;\n    }\n  };\n  /**\n   * Reset string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.resetSeperator = function () {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  };\n  /**\n   * Get string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.getSeperator = function () {\n    return elasticlunr.tokenizer.seperator;\n  };\n  /*!\n   * elasticlunr.Pipeline\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n   * both documents tokens and query tokens.\n   *\n   * An instance of elasticlunr.Index will contain a pipeline\n   * with a trimmer, a stop word filter, an English stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline, it will call each function in turn.\n   *\n   * The output of the functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Pipeline = function () {\n    this._queue = [];\n  };\n\n  elasticlunr.Pipeline.registeredFunctions = {};\n  /**\n   * Register a function in the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {Function} fn The function to register.\n   * @param {String} label The label to register this function with\n   * @memberOf Pipeline\n   */\n\n  elasticlunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions) {\n      elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    elasticlunr.Pipeline.registeredFunctions[label] = fn;\n  };\n  /**\n   * Get a registered function in the pipeline.\n   *\n   * @param {String} label The label of registered function.\n   * @return {Function}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.getRegisteredFunction = function (label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions !== true) {\n      return null;\n    }\n\n    return elasticlunr.Pipeline.registeredFunctions[label];\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {Function} fn The function to check for.\n   * @private\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised The serialised pipeline to load.\n   * @return {elasticlunr.Pipeline}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.load = function (serialised) {\n    var pipeline = new elasticlunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load un-registered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {Function} functions Any number of functions to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._queue.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos + 1, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {Function} fn The function to remove from the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._queue.indexOf(fn);\n\n    if (pos === -1) {\n      return;\n    }\n\n    this._queue.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.run = function (tokens) {\n    var out = [],\n        tokenLength = tokens.length,\n        pipelineLength = this._queue.length;\n\n    for (var i = 0; i < tokenLength; i++) {\n      var token = tokens[i];\n\n      for (var j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (token === void 0 || token === null) break;\n      }\n\n      ;\n      if (token !== void 0 && token !== null) out.push(token);\n    }\n\n    ;\n    return out;\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.reset = function () {\n    this._queue = [];\n  };\n  /**\n   * Get the pipeline if user want to check the pipeline.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.get = function () {\n    return this._queue;\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   * Only serialize pipeline function's name. Not storing function, so when\n   * loading the archived JSON index file, corresponding pipeline function is \n   * added by registered function of elasticlunr.Pipeline.registeredFunctions\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.toJSON = function () {\n    return this._queue.map(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * elasticlunr.Index\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Index is object that manages a search index.  It contains the indexes\n   * and stores all the tokens and document lookups.  It also provides the main\n   * user facing API for the library.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Index = function () {\n    this._fields = [];\n    this._ref = 'id';\n    this.pipeline = new elasticlunr.Pipeline();\n    this.documentStore = new elasticlunr.DocumentStore();\n    this.index = {};\n    this.eventEmitter = new elasticlunr.EventEmitter();\n    this._idfCache = {};\n    this.on('add', 'remove', 'update', function () {\n      this._idfCache = {};\n    }.bind(this));\n  };\n  /**\n   * Bind a handler to events being emitted by the index.\n   *\n   * The handler can be bound to many events at the same time.\n   *\n   * @param {String} [eventName] The name(s) of events to bind the function to.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.on = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n  };\n  /**\n   * Removes a handler from an event being emitted by the index.\n   *\n   * @param {String} eventName The name of events to remove the function from.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.off = function (name, fn) {\n    return this.eventEmitter.removeListener(name, fn);\n  };\n  /**\n   * Loads a previously serialised index.\n   *\n   * Issues a warning if the index being imported was serialised\n   * by a different version of elasticlunr.\n   *\n   * @param {Object} serialisedData The serialised set to load.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.load = function (serialisedData) {\n    if (serialisedData.version !== elasticlunr.version) {\n      elasticlunr.utils.warn('version mismatch: current ' + elasticlunr.version + ' importing ' + serialisedData.version);\n    }\n\n    var idx = new this();\n    idx._fields = serialisedData.fields;\n    idx._ref = serialisedData.ref;\n    idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n    idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n    idx.index = {};\n\n    for (var field in serialisedData.index) {\n      idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n    }\n\n    return idx;\n  };\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   *\n   * @param {String} fieldName The name of the field within the document that should be indexed\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addField = function (fieldName) {\n    this._fields.push(fieldName);\n\n    this.index[fieldName] = new elasticlunr.InvertedIndex();\n    return this;\n  };\n  /**\n   * Sets the property used to uniquely identify documents added to the index,\n   * by default this property is 'id'.\n   *\n   * This should only be changed before adding documents to the index, changing\n   * the ref property without resetting the index can lead to unexpected results.\n   *\n   * @param {String} refName The property to use to uniquely identify the\n   * documents in the index.\n   * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.setRef = function (refName) {\n    this._ref = refName;\n    return this;\n  };\n  /**\n   *\n   * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n   *\n   * Defaultly save all the original JSON documents.\n   *\n   * @param {Boolean} save Whether to save the original JSON documents.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.saveDocument = function (save) {\n    this.documentStore = new elasticlunr.DocumentStore(save);\n    return this;\n  };\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   *\n   * @param {Object} doc The JSON format document to add to the index.\n   * @param {Boolean} emitEvent Whether or not to emit events, default true.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    this.documentStore.addDoc(docRef, doc);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n      var tokenCount = {};\n      fieldTokens.forEach(function (token) {\n        if (token in tokenCount) tokenCount[token] += 1;else tokenCount[token] = 1;\n      }, this);\n\n      for (var token in tokenCount) {\n        var termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.index[field].addToken(token, {\n          ref: docRef,\n          tf: termFrequency\n        });\n      }\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('add', doc, this);\n  };\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   *\n   * @param {String|Integer} docRef The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n    if (!docRef) return;\n\n    if (this.documentStore.isDocStored() === false) {\n      return;\n    }\n\n    if (!this.documentStore.hasDoc(docRef)) return;\n    var doc = this.documentStore.getDoc(docRef);\n    this.removeDoc(doc, false);\n  };\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   *\n   * @param {Object} doc The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    if (!this.documentStore.hasDoc(docRef)) return;\n    this.documentStore.removeDoc(docRef);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      fieldTokens.forEach(function (token) {\n        this.index[field].removeToken(token, docRef);\n      }, this);\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n  };\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   *\n   * @param {Object} doc The document to update in the index.\n   * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n   * @see Index.prototype.remove\n   * @see Index.prototype.add\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    this.removeDocByRef(doc[this._ref], false);\n    this.addDoc(doc, false);\n    if (emitEvent) this.eventEmitter.emit('update', doc, this);\n  };\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   *\n   * @param {String} token The token to calculate the idf of.\n   * @param {String} field The field to compute idf.\n   * @see Index.prototype.idf\n   * @private\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.idf = function (term, field) {\n    var cacheKey = \"@\" + field + '/' + term;\n    if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n    var df = this.index[field].getDocFreq(term);\n    var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache[cacheKey] = idf;\n    return idf;\n  };\n  /**\n   * get fields of current index instance\n   *\n   * @return {Array}\n   */\n\n\n  elasticlunr.Index.prototype.getFields = function () {\n    return this._fields.slice();\n  };\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields defaultly, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   *\n   * @param {String} query The query to search the index with.\n   * @param {JSON} userConfig The user query config, JSON format.\n   * @return {Object}\n   * @see Index.prototype.idf\n   * @see Index.prototype.documentVector\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.search = function (query, userConfig) {\n    if (!query) return [];\n    var configStr = null;\n\n    if (userConfig != null) {\n      configStr = JSON.stringify(userConfig);\n    }\n\n    var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n    var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n    var queryResults = {};\n\n    for (var field in config) {\n      var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      var fieldBoost = config[field].boost;\n\n      for (var docRef in fieldSearchResults) {\n        fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n      }\n\n      for (var docRef in fieldSearchResults) {\n        if (docRef in queryResults) {\n          queryResults[docRef] += fieldSearchResults[docRef];\n        } else {\n          queryResults[docRef] = fieldSearchResults[docRef];\n        }\n      }\n    }\n\n    var results = [];\n\n    for (var docRef in queryResults) {\n      results.push({\n        ref: docRef,\n        score: queryResults[docRef]\n      });\n    }\n\n    results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  };\n  /**\n   * search queryTokens in specified field.\n   *\n   * @param {Array} queryTokens The query tokens to query in this field.\n   * @param {String} field Field to query in.\n   * @param {elasticlunr.Configuration} config The user query config, JSON format.\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n    var booleanType = config[fieldName].bool;\n    var expand = config[fieldName].expand;\n    var boost = config[fieldName].boost;\n    var scores = null;\n    var docTokens = {}; // Do nothing if the boost is 0\n\n    if (boost === 0) {\n      return;\n    }\n\n    queryTokens.forEach(function (token) {\n      var tokens = [token];\n\n      if (expand == true) {\n        tokens = this.index[fieldName].expandToken(token);\n      } // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the \n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores, \n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator). \n      // If booleanType is AND, accumulate scores only if the document \n      // has previously been scored by another query token (an intersection\n      // operation0. \n      // Furthermore, since when booleanType is AND, additional \n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query \n      // token for efficiency (i.e., incremental intersection).\n\n\n      var queryTokenScores = {};\n      tokens.forEach(function (key) {\n        var docs = this.index[fieldName].getDocs(key);\n        var idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n\n          for (var docRef in scores) {\n            if (docRef in docs) {\n              filteredDocs[docRef] = docs[docRef];\n            }\n          }\n\n          docs = filteredDocs;\n        } // only record appeared token for retrieved documents for the\n        // original token, not for expaned token.\n        // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n\n\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (var docRef in docs) {\n          var tf = this.index[fieldName].getTermFrequency(key, docRef);\n          var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          var fieldLengthNorm = 1;\n\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          var penality = 1;\n\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penality = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          var score = tf * idf * fieldLengthNorm * penality;\n\n          if (docRef in queryTokenScores) {\n            queryTokenScores[docRef] += score;\n          } else {\n            queryTokenScores[docRef] = score;\n          }\n        }\n      }, this);\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }, this);\n    scores = this.coordNorm(scores, docTokens, queryTokens.length);\n    return scores;\n  };\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   *\n   * @param {Object} bool accumulated scores. Should be null on first call.\n   * @param {String} scores new scores to merge into accumScores.\n   * @param {Object} op merge operation (should be 'AND' or 'OR').\n   *\n   */\n\n\n  elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n      return scores;\n    }\n\n    if (op == 'AND') {\n      var intersection = {};\n\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          intersection[docRef] = accumScores[docRef] + scores[docRef];\n        }\n      }\n\n      return intersection;\n    } else {\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          accumScores[docRef] += scores[docRef];\n        } else {\n          accumScores[docRef] = scores[docRef];\n        }\n      }\n\n      return accumScores;\n    }\n  };\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   *\n   * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n   * @param {String} token query token\n   * @param {Object} docs the retrieved documents of the query token\n   *\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n    for (var doc in docs) {\n      if (doc in docTokens) {\n        docTokens[doc].push(token);\n      } else {\n        docTokens[doc] = [token];\n      }\n    }\n  };\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   *\n   * only for inner use.\n   *\n   * @param {Object} results first results\n   * @param {Object} docs field search results of a token\n   * @param {Integer} n query token number\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n    for (var doc in scores) {\n      if (!(doc in docTokens)) continue;\n      var tokens = docTokens[doc].length;\n      scores[doc] = scores[doc] * tokens / n;\n    }\n\n    return scores;\n  };\n  /**\n   * Returns a representation of the index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.toJSON = function () {\n    var indexJson = {};\n\n    this._fields.forEach(function (field) {\n      indexJson[field] = this.index[field].toJSON();\n    }, this);\n\n    return {\n      version: elasticlunr.version,\n      fields: this._fields,\n      ref: this._ref,\n      documentStore: this.documentStore.toJSON(),\n      index: indexJson,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Applies a plugin to the current index.\n   *\n   * A plugin is a function that is called with the index as its context.\n   * Plugins can be used to customise or extend the behaviour the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied to the index.\n   *\n   * The plugin function will be called with the index as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index as its context.\n   *\n   * Example:\n   *\n   *     var myPlugin = function (idx, arg1, arg2) {\n   *       // `this` is the index to be extended\n   *       // apply any extensions etc here.\n   *     }\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.use(myPlugin, 'arg1', 'arg2')\n   *     })\n   *\n   * @param {Function} plugin The plugin to apply.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.use = function (plugin) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    plugin.apply(this, args);\n  };\n  /*!\n   * elasticlunr.DocumentStore\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n   * documents stored in index.\n   *\n   * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n   *\n   * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n   * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n   * could not use JSON document to generate snippets of search results.\n   *\n   * @param {Boolean} save If the original JSON document should be stored.\n   * @constructor\n   * @module\n   */\n\n\n  elasticlunr.DocumentStore = function (save) {\n    if (save === null || save === undefined) {\n      this._save = true;\n    } else {\n      this._save = save;\n    }\n\n    this.docs = {};\n    this.docInfo = {};\n    this.length = 0;\n  };\n  /**\n   * Loads a previously serialised document store\n   *\n   * @param {Object} serialisedData The serialised document store to load.\n   * @return {elasticlunr.DocumentStore}\n   */\n\n\n  elasticlunr.DocumentStore.load = function (serialisedData) {\n    var store = new this();\n    store.length = serialisedData.length;\n    store.docs = serialisedData.docs;\n    store.docInfo = serialisedData.docInfo;\n    store._save = serialisedData.save;\n    return store;\n  };\n  /**\n   * check if current instance store the original doc\n   *\n   * @return {Boolean}\n   */\n\n\n  elasticlunr.DocumentStore.prototype.isDocStored = function () {\n    return this._save;\n  };\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   *\n   * @param {Integer|String} docRef The key used to store the JSON format doc.\n   * @param {Object} doc The JSON format doc.\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n    if (!this.hasDoc(docRef)) this.length++;\n\n    if (this._save === true) {\n      this.docs[docRef] = clone(doc);\n    } else {\n      this.docs[docRef] = null;\n    }\n  };\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   *\n   * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n   * @return {Object}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n    if (this.hasDoc(docRef) === false) return null;\n    return this.docs[docRef];\n  };\n  /**\n   * Checks whether the document store contains a key (docRef).\n   *\n   * @param {Integer|String} docRef The id to look up in the document store.\n   * @return {Boolean}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n    return docRef in this.docs;\n  };\n  /**\n   * Removes the value for a key in the document store.\n   *\n   * @param {Integer|String} docRef The id to remove from the document store.\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n    if (!this.hasDoc(docRef)) return;\n    delete this.docs[docRef];\n    delete this.docInfo[docRef];\n    this.length--;\n  };\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n    this.docInfo[docRef][fieldName] = length;\n  };\n  /**\n   * Update field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    this.addFieldLength(docRef, fieldName, length);\n  };\n  /**\n   * get field length of a document by docRef\n   *\n   * @param {Integer|String} docRef document id or reference\n   * @param {String} fieldName field name\n   * @return {Integer} field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n    if (docRef === null || docRef === undefined) return 0;\n    if (!(docRef in this.docs)) return 0;\n    if (!(fieldName in this.docInfo[docRef])) return 0;\n    return this.docInfo[docRef][fieldName];\n  };\n  /**\n   * Returns a JSON representation of the document store used for serialisation.\n   *\n   * @return {Object} JSON format\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.toJSON = function () {\n    return {\n      docs: this.docs,\n      docInfo: this.docInfo,\n      length: this.length,\n      save: this._save\n    };\n  };\n  /**\n   * Cloning object\n   *\n   * @param {Object} object in JSON format\n   * @return {Object} copied object\n   */\n\n\n  function clone(obj) {\n    if (null === obj || \"object\" !== typeof obj) return obj;\n    var copy = obj.constructor();\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n\n    return copy;\n  }\n  /*!\n   * elasticlunr.stemmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @module\n   * @param {String} str The string to stem\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n\n  elasticlunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return porterStemmer;\n  }();\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n  /*!\n   * elasticlunr.stopWordFilter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.stopWordFilter is an English language stop words filter, any words\n   * contained in the stop word list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.stopWordFilter = function (token) {\n    if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n      return token;\n    }\n  };\n  /**\n   * Remove predefined stop words\n   * if user want to use customized stop words, user could use this function to delete\n   * all predefined stopwords.\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.clearStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = {};\n  };\n  /**\n   * Add customized stop words\n   * user could use this function to add customized stop words\n   * \n   * @params {Array} words customized stop words\n   * @return {null}\n   */\n\n\n  elasticlunr.addStopWords = function (words) {\n    if (words == null || Array.isArray(words) === false) return;\n    words.forEach(function (word) {\n      elasticlunr.stopWordFilter.stopWords[word] = true;\n    }, this);\n  };\n  /**\n   * Reset to default stop words\n   * user could use this function to restore default stop words\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.resetStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  };\n\n  elasticlunr.defaultStopWords = {\n    \"\": true,\n    \"a\": true,\n    \"able\": true,\n    \"about\": true,\n    \"across\": true,\n    \"after\": true,\n    \"all\": true,\n    \"almost\": true,\n    \"also\": true,\n    \"am\": true,\n    \"among\": true,\n    \"an\": true,\n    \"and\": true,\n    \"any\": true,\n    \"are\": true,\n    \"as\": true,\n    \"at\": true,\n    \"be\": true,\n    \"because\": true,\n    \"been\": true,\n    \"but\": true,\n    \"by\": true,\n    \"can\": true,\n    \"cannot\": true,\n    \"could\": true,\n    \"dear\": true,\n    \"did\": true,\n    \"do\": true,\n    \"does\": true,\n    \"either\": true,\n    \"else\": true,\n    \"ever\": true,\n    \"every\": true,\n    \"for\": true,\n    \"from\": true,\n    \"get\": true,\n    \"got\": true,\n    \"had\": true,\n    \"has\": true,\n    \"have\": true,\n    \"he\": true,\n    \"her\": true,\n    \"hers\": true,\n    \"him\": true,\n    \"his\": true,\n    \"how\": true,\n    \"however\": true,\n    \"i\": true,\n    \"if\": true,\n    \"in\": true,\n    \"into\": true,\n    \"is\": true,\n    \"it\": true,\n    \"its\": true,\n    \"just\": true,\n    \"least\": true,\n    \"let\": true,\n    \"like\": true,\n    \"likely\": true,\n    \"may\": true,\n    \"me\": true,\n    \"might\": true,\n    \"most\": true,\n    \"must\": true,\n    \"my\": true,\n    \"neither\": true,\n    \"no\": true,\n    \"nor\": true,\n    \"not\": true,\n    \"of\": true,\n    \"off\": true,\n    \"often\": true,\n    \"on\": true,\n    \"only\": true,\n    \"or\": true,\n    \"other\": true,\n    \"our\": true,\n    \"own\": true,\n    \"rather\": true,\n    \"said\": true,\n    \"say\": true,\n    \"says\": true,\n    \"she\": true,\n    \"should\": true,\n    \"since\": true,\n    \"so\": true,\n    \"some\": true,\n    \"than\": true,\n    \"that\": true,\n    \"the\": true,\n    \"their\": true,\n    \"them\": true,\n    \"then\": true,\n    \"there\": true,\n    \"these\": true,\n    \"they\": true,\n    \"this\": true,\n    \"tis\": true,\n    \"to\": true,\n    \"too\": true,\n    \"twas\": true,\n    \"us\": true,\n    \"wants\": true,\n    \"was\": true,\n    \"we\": true,\n    \"were\": true,\n    \"what\": true,\n    \"when\": true,\n    \"where\": true,\n    \"which\": true,\n    \"while\": true,\n    \"who\": true,\n    \"whom\": true,\n    \"why\": true,\n    \"will\": true,\n    \"with\": true,\n    \"would\": true,\n    \"yet\": true,\n    \"you\": true,\n    \"your\": true\n  };\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * elasticlunr.trimmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.trimmer is a pipeline function for trimming non word\n   * characters from the begining and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.trimmer = function (token) {\n    if (token === null || token === undefined) {\n      throw new Error('token should not be undefined');\n    }\n\n    return token.replace(/^\\W+/, '').replace(/\\W+$/, '');\n  };\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n  /*!\n   * elasticlunr.InvertedIndex\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.InvertedIndex is used for efficiently storing and\n   * lookup of documents that contain a given token.\n   *\n   * @constructor\n   */\n\n  elasticlunr.InvertedIndex = function () {\n    this.root = {\n      docs: {},\n      df: 0\n    };\n  };\n  /**\n   * Loads a previously serialised inverted index.\n   *\n   * @param {Object} serialisedData The serialised inverted index to load.\n   * @return {elasticlunr.InvertedIndex}\n   */\n\n\n  elasticlunr.InvertedIndex.load = function (serialisedData) {\n    var idx = new this();\n    idx.root = serialisedData.root;\n    return idx;\n  };\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   *\n   * @param {String} token \n   * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n   * @param {Object} root An optional node at which to start looking for the\n   * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n   * is used.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n    var root = root || this.root,\n        idx = 0;\n\n    while (idx <= token.length - 1) {\n      var key = token[idx];\n      if (!(key in root)) root[key] = {\n        docs: {},\n        df: 0\n      };\n      idx += 1;\n      root = root[key];\n    }\n\n    var docRef = tokenInfo.ref;\n\n    if (!root.docs[docRef]) {\n      // if this doc not exist, then add this doc\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n    }\n  };\n  /**\n   * Checks whether a token is in this elasticlunr.InvertedIndex.\n   * \n   *\n   * @param {String} token The token to be checked\n   * @return {Boolean}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n    if (!token) return false;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return false;\n      node = node[token[i]];\n    }\n\n    return true;\n  };\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   * \n   *\n   * @param {String} token The token to get the node for.\n   * @return {Object}\n   * @see InvertedIndex.prototype.get\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getNode = function (token) {\n    if (!token) return null;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return null;\n      node = node[token[i]];\n    }\n\n    return node;\n  };\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return {};\n    }\n\n    return node.docs;\n  };\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @param {String|Integer} docRef\n   * @return {Integer}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    if (!(docRef in node.docs)) {\n      return 0;\n    }\n\n    return node.docs[docRef].tf;\n  };\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    return node.df;\n  };\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   *\n   *\n   * @param {String} token Remove the document from which token.\n   * @param {String} ref The ref of the document to remove from given token.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n    if (!token) return;\n    var node = this.getNode(token);\n    if (node == null) return;\n\n    if (ref in node.docs) {\n      delete node.docs[ref];\n      node.df -= 1;\n    }\n  };\n  /**\n   * Find all the possible suffixes of given token using tokens currently in the inverted index.\n   * If token not found, return empty Array.\n   *\n   * @param {String} token The token to expand.\n   * @return {Array}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n    if (token == null || token == '') return [];\n    var memo = memo || [];\n\n    if (root == void 0) {\n      root = this.getNode(token);\n      if (root == null) return memo;\n    }\n\n    if (root.df > 0) memo.push(token);\n\n    for (var key in root) {\n      if (key === 'docs') continue;\n      if (key === 'df') continue;\n      this.expandToken(token + key, memo, root[key]);\n    }\n\n    return memo;\n  };\n  /**\n   * Returns a representation of the inverted index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.toJSON = function () {\n    return {\n      root: this.root\n    };\n  };\n  /*!\n   * elasticlunr.Configuration\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /** \n   * elasticlunr.Configuration is used to analyze the user search configuration.\n   * \n   * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n   * \n   * Currently configuration supports:\n   * 1. query-time boosting, user could set how to boost each field.\n   * 2. boolean model chosing, user could choose which boolean model to use for each field.\n   * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n   * \n   * Query time boosting must be configured by field category, \"boolean\" model could be configured \n   * by both field category or globally as the following example. Field configuration for \"boolean\"\n   * will overwrite global configuration.\n   * Token expand could be configured both by field category or golbally. Local field configuration will\n   * overwrite global configuration.\n   * \n   * configuration example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"bool\" field configuation overwrite global configuation example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"expand\" example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\",\n   *   expand: true\n   * }\n   * \n   * \"expand\" example for field category:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\", expand: true},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * setting the boost to 0 ignores the field (this will only search the title):\n   * {\n   *   fields:{\n   *     title: {boost: 1},\n   *     body: {boost: 0}\n   *   }\n   * }\n   *\n   * then, user could search with configuration to do query-time boosting.\n   * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   * \n   * \n   * @constructor\n   * \n   * @param {String} config user configuration\n   * @param {Array} fields fields of index instance\n   * @module\n   */\n\n\n  elasticlunr.Configuration = function (config, fields) {\n    var config = config || '';\n\n    if (fields == undefined || fields == null) {\n      throw new Error('fields should not be null');\n    }\n\n    this.config = {};\n    var userConfig;\n\n    try {\n      userConfig = JSON.parse(config);\n      this.buildUserConfig(userConfig, fields);\n    } catch (error) {\n      elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n      this.buildDefaultConfig(fields);\n    }\n  };\n  /**\n   * Build default search configuration.\n   * \n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n    this.reset();\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: \"OR\",\n        expand: false\n      };\n    }, this);\n  };\n  /**\n   * Build user configuration.\n   * \n   * @param {JSON} config User JSON configuratoin\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n    var global_bool = \"OR\";\n    var global_expand = false;\n    this.reset();\n\n    if ('bool' in config) {\n      global_bool = config['bool'] || global_bool;\n    }\n\n    if ('expand' in config) {\n      global_expand = config['expand'] || global_expand;\n    }\n\n    if ('fields' in config) {\n      for (var field in config['fields']) {\n        if (fields.indexOf(field) > -1) {\n          var field_config = config['fields'][field];\n          var field_expand = global_expand;\n\n          if (field_config.expand != undefined) {\n            field_expand = field_config.expand;\n          }\n\n          this.config[field] = {\n            boost: field_config.boost || field_config.boost === 0 ? field_config.boost : 1,\n            bool: field_config.bool || global_bool,\n            expand: field_expand\n          };\n        } else {\n          elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n        }\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  };\n  /**\n   * Add all fields to user search configuration.\n   * \n   * @param {String} bool Boolean model\n   * @param {String} expand Expand model\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }, this);\n  };\n  /**\n   * get current user configuration\n   */\n\n\n  elasticlunr.Configuration.prototype.get = function () {\n    return this.config;\n  };\n  /**\n   * reset user search configuration.\n   */\n\n\n  elasticlunr.Configuration.prototype.reset = function () {\n    this.config = {};\n  };\n  /**\n   * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n   * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n   * much bigger that not good for browser usage.\n   *\n   */\n\n  /*!\n   * lunr.SortedSet\n   * Copyright (C) 2016 Oliver Nightingale\n   */\n\n  /**\n   * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n   * order.\n   *\n   * @constructor\n   */\n\n\n  lunr.SortedSet = function () {\n    this.length = 0;\n    this.elements = [];\n  };\n  /**\n   * Loads a previously serialised sorted set.\n   *\n   * @param {Array} serialisedData The serialised set to load.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.load = function (serialisedData) {\n    var set = new this();\n    set.elements = serialisedData;\n    set.length = serialisedData.length;\n    return set;\n  };\n  /**\n   * Inserts new items into the set in the correct position to maintain the\n   * order.\n   *\n   * @param {Object} The objects to add to this set.\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.add = function () {\n    var i, element;\n\n    for (i = 0; i < arguments.length; i++) {\n      element = arguments[i];\n      if (~this.indexOf(element)) continue;\n      this.elements.splice(this.locationFor(element), 0, element);\n    }\n\n    this.length = this.elements.length;\n  };\n  /**\n   * Converts this sorted set into an array.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toArray = function () {\n    return this.elements.slice();\n  };\n  /**\n   * Creates a new array with the results of calling a provided function on every\n   * element in this sorted set.\n   *\n   * Delegates to Array.prototype.map and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * for the function fn.\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.map = function (fn, ctx) {\n    return this.elements.map(fn, ctx);\n  };\n  /**\n   * Executes a provided function once per sorted set element.\n   *\n   * Delegates to Array.prototype.forEach and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * @memberOf SortedSet\n   * for the function fn.\n   */\n\n\n  lunr.SortedSet.prototype.forEach = function (fn, ctx) {\n    return this.elements.forEach(fn, ctx);\n  };\n  /**\n   * Returns the index at which a given element can be found in the\n   * sorted set, or -1 if it is not present.\n   *\n   * @param {Object} elem The object to locate in the sorted set.\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.indexOf = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem === elem) return pivot;\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem === elem) return pivot;\n    return -1;\n  };\n  /**\n   * Returns the position within the sorted set that an element should be\n   * inserted at to maintain the current order of the set.\n   *\n   * This function assumes that the element to search for does not already exist\n   * in the sorted set.\n   *\n   * @param {Object} elem The elem to find the position for in the set\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.locationFor = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem > elem) return pivot;\n    if (pivotElem < elem) return pivot + 1;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the intersection\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.intersect = function (otherSet) {\n    var intersectSet = new lunr.SortedSet(),\n        i = 0,\n        j = 0,\n        a_len = this.length,\n        b_len = otherSet.length,\n        a = this.elements,\n        b = otherSet.elements;\n\n    while (true) {\n      if (i > a_len - 1 || j > b_len - 1) break;\n\n      if (a[i] === b[j]) {\n        intersectSet.add(a[i]);\n        i++, j++;\n        continue;\n      }\n\n      if (a[i] < b[j]) {\n        i++;\n        continue;\n      }\n\n      if (a[i] > b[j]) {\n        j++;\n        continue;\n      }\n    }\n\n    ;\n    return intersectSet;\n  };\n  /**\n   * Makes a copy of this set\n   *\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.clone = function () {\n    var clone = new lunr.SortedSet();\n    clone.elements = this.toArray();\n    clone.length = clone.elements.length;\n    return clone;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the union\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to union with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.union = function (otherSet) {\n    var longSet, shortSet, unionSet;\n\n    if (this.length >= otherSet.length) {\n      longSet = this, shortSet = otherSet;\n    } else {\n      longSet = otherSet, shortSet = this;\n    }\n\n    unionSet = longSet.clone();\n\n    for (var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++) {\n      unionSet.add(shortSetElements[i]);\n    }\n\n    return unionSet;\n  };\n  /**\n   * Returns a representation of the sorted set ready for serialisation.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toJSON = function () {\n    return this.toArray();\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr;\n  });\n})();"],"sourceRoot":""}