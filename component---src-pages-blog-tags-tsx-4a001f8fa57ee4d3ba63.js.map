{"version":3,"sources":["webpack:///./src/components/blog/post-tags.tsx","webpack:///./src/pages/blog/tags.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/common/seo.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./src/components/common/with-screen-size.tsx","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./src/components/blog/sub/categories.tsx","webpack:///./src/components/blog/sub/tags.tsx","webpack:///./src/components/blog/sub/recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["alphabet","split","AlphabeticalTagItem","_ref","items","react","Segment","padded","vertical","basic","Header","as","content","Label","Group","sort","_ref2","_ref3","a","tag","b","localeCompare","map","_ref4","count","link","key","href","Content","group","_84730814","data","tags","dividing","value","filter","_ref5","fieldValue","toLowerCase","startsWith","_ref6","totalCount","formatPagePath","length","post_tags_AlphabeticalTagItem","toUpperCase","withScreenSize","_ref7","screenSize","post_tags_Content","container","children","__webpack_exports__","layout","seo","title","description","post_tags","__webpack_require__","d","formatReadableDate","moment__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","date","moment","format","index","paramType","param","basePath","paramPath","kebabCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","_this$props$inverted","inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","style","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","_ref$lang","lang","_ref$keywords","keywords","_ref$description","siteMetadata","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","site","metaDescription","defaultMetadata","name","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttribute","rel","titleTemplate","meta","concat","join","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","textAlign","target","WrappedComponent","options","defaultOptions","_React$Component","_temp","call","onResize","newSize","getSize","window","innerWidth","_","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_proto","prototype","componentDidMount","addEventListener","componentWillUnmount","cancel","removeEventListener","react__WEBPACK_IMPORTED_MODULE_2__","Object","assign","mobile","tablet","width","option","_option","$export","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","module","exports","method","arg","Categories","List","bulleted","category","Item","sub_categories","categories","_243471705","categories_Categories","BlogTags","sub_tags","_ref3$limit","limit","tags_BlogTags","slice","recent_posts","posts","_3672802271","edges","node","fields","slug","frontmatter","container_DesktopContainer","container_MobileContainer","Grid","centered","stackable","Column","Subheader","display","float","linked_span","DesktopContainer","Menu","secondary","pointing","fixed","Container","header","fontSize","lineHeight","position","paddingTop","container_Content","footer","MobileContainer","icon","GridColumn","className","computer","floated","largeScreen","only","stretched","verticalAlign","widescreen","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","columns","divided","reversed","Grid_GridRow","celled","doubling","relaxed","Row","toLength","context","$startsWith","searchString","that","Math","min","arguments","search","String"],"mappings":"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","file":"component---src-pages-blog-tags-tsx-4a001f8fa57ee4d3ba63.js","sourcesContent":["import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Header, Label, Segment } from \"semantic-ui-react\"\nimport { formatPagePath } from \"../../utils\"\nimport { DesktopContainer, MobileContainer } from \"./container\"\nimport { ScreenSize, withScreenSize } from \"../common/with-screen-size\"\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\n\nconst AlphabeticalTagItem: React.FunctionComponent<ItemProps> = ({ items, alphabet }: ItemProps) => (\n  <Segment padded={\"very\"} vertical basic>\n    <Header as={\"h3\"} content={alphabet}/>\n    <Label.Group>\n      {\n        items.sort(({ tag: a }, { tag: b }) =>\n          (\"\" + a).localeCompare(b),\n        ).map(({ tag, count, link }) =>\n          <Label key={tag} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  </Segment>\n)\n\nconst Content: React.FunctionComponent<{}> = () => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n  const { group } = tags\n\n  return (\n    <div>\n      <Header as={\"h1\"} dividing>Tags</Header>\n      {\n        alphabet.map((value) => {\n          const tags = group.filter(({ fieldValue }) =>\n            fieldValue.toLowerCase().startsWith(value),\n          ).map(({ fieldValue, totalCount }) => ({\n            tag: fieldValue,\n            count: totalCount,\n            link: formatPagePath(0, \"tag\", fieldValue),\n          }))\n          if (tags && tags.length)\n            return (\n              <AlphabeticalTagItem key={value} items={tags} alphabet={value.toUpperCase()}/>\n            )\n        })\n      }\n    </div>\n  )\n}\n\n\nconst ResponsiveContent: React.FunctionComponent<Props> = ({ screenSize }: Props) => {\n  const content = <Content/>\n  return (\n    screenSize === \"mobile\" ?\n      <MobileContainer children={content}/> :\n      <DesktopContainer children={content}/>\n  )\n}\n\nexport default withScreenSize(ResponsiveContent)\n\ninterface ItemProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n  alphabet: string\n}\n\ninterface Props {\n  screenSize?: ScreenSize\n}\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n","import Layout from \"../../components/layout\"\nimport BlogAllTags from \"../../components/blog/post-tags\"\nimport * as React from \"react\"\nimport SEO from \"../../components/common/seo\"\n\nexport default () => {\n  return (\n    <Layout>\n      <SEO title={'All tags'}\n           description={`List of tags used in Choi, Woohyeok's personal blog`}/>\n      <BlogAllTags/>\n    </Layout>\n  )\n}","import * as moment from \"moment\"\nimport { kebabCase } from 'lodash'\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${kebabCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${kebabCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? kebabCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${kebabCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? kebabCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\nimport '../layout.css'\r\n\r\nexport default ({children}: Props) => {\r\n  return (\r\n    <div>\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n}","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult = useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      link={[\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdn.rawgit.com/jpswalsh/academicons/master/css/academicons.min.css'\r\n        }\r\n      ]}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>; sources are available at <a href={'https://github.com/woohyeok-choi/woohyeok-choi.github.io'} target={'_blank'}><LinkedSpan inverted={true} children={'this repo.'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","import * as React from \"react\"\nimport * as _ from \"lodash\"\n\nexport const withScreenSize = <T extends object>(WrappedComponent: React.ComponentType<T>, options: ScreenSizeOption = defaultOptions) =>\n  class extends React.Component<T, State> {\n    constructor(props) {\n      super(props)\n      this.state = {\n        screenSize: \"computer\"\n      }\n\n      this.onResize = _.throttle(this.onResize, 100)\n    }\n\n    componentDidMount() {\n      this.setState({\n        screenSize: getSize(window.innerWidth, options),\n      })\n      window.addEventListener(\"resize\", this.onResize)\n    }\n\n    componentWillUnmount() {\n      this.onResize.cancel()\n      window.removeEventListener(\"resize\", this.onResize)\n    }\n\n    onResize: any = () => {\n      const newSize = getSize(window.innerWidth, options)\n      const { screenSize } = this.state\n\n      if (newSize !== screenSize) {\n        this.setState({\n          screenSize: newSize,\n        })\n      }\n    }\n\n    render(): React.ReactNode {\n      return (\n        <WrappedComponent {...this.props} screenSize={this.state.screenSize}/>\n      )\n    }\n  }\n\nexport type ScreenSize = \"mobile\" | \"tablet\" | \"computer\"\n\nexport type DetailedScreenSize = 'mobile-s'\ninterface State {\n  screenSize: ScreenSize\n}\n\nexport interface ScreenSizeOption {\n  mobile?: number\n  tablet?: number\n}\n\nconst defaultOptions: ScreenSizeOption = {\n  mobile: 767,\n  tablet: 991\n}\n\nconst getSize = (width: number, option: ScreenSizeOption = defaultOptions): ScreenSize => {\n  const { mobile, tablet } = option\n\n  if (width < mobile) {\n    return \"mobile\"\n  } else if (width < tablet) {\n    return \"tablet\"\n  } else {\n    return \"computer\"\n  }\n}","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\r\nimport { Label } from \"semantic-ui-react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { formatPagePath } from \"../../../utils\"\r\n\r\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\r\n  return (\r\n    <Label.Group>\r\n      {\r\n        items.map(({ tag, link, count }) =>\r\n          <Label key={tag} as={\"a\"} href={link}>\r\n            {tag} ({count})\r\n          </Label>\r\n        )\r\n      }\r\n    </Label.Group>\r\n  )\r\n}\r\n\r\nexport default ({ limit = 10 }: DefaultProps) => {\r\n  const { tags }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      tags: allMarkdownRemark {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }`,\r\n  )\r\n\r\n  const { group } = tags\r\n\r\n  return (\r\n    <BlogTags items={\r\n      group\r\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\r\n        .slice(0, limit)\r\n        .map(({ fieldValue, totalCount }) => ({\r\n          tag: fieldValue,\r\n          count: totalCount,\r\n          link: formatPagePath(0, \"tag\", fieldValue),\r\n        }))\r\n    }/>\r\n  )\r\n}\r\n\r\n\r\ninterface QueryResult {\r\n  tags: {\r\n    group: Array<{\r\n      fieldValue: string\r\n      totalCount: number\r\n    }>\r\n  }\r\n}\r\n\r\ninterface DefaultProps {\r\n  limit?: number\r\n}\r\n\r\ninterface Props extends DefaultProps {\r\n  items: Array<{\r\n    tag: string\r\n    count: number\r\n    link?: string\r\n  }>\r\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub/categories\"\nimport BlogTags from \"./sub/tags\"\nimport BlogRecentPosts from \"./sub/recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nconst Content: React.FunctionComponent<Props> = ({ children }: Props) => (\n  <Grid centered container stackable>\n    <Grid.Column width={12}>\n      {children}\n    </Grid.Column>\n    <Grid.Column width={4}>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"} content={\"Categories\"}/>\n        <BlogCategories/>\n      </Segment>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"}>\n          Tags\n          <Header.Subheader style={{ display: \"inline\", float: \"right\" }} as={\"a\"} href={\"/blog/tags\"}>\n            <LinkedSpan inverted={false} children={\"View all tags...\"}/>\n          </Header.Subheader>\n        </Header>\n        <BlogTags limit={10}/>\n      </Segment>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"} content={\"Recent Posts\"}/>\n        <BlogRecentPosts/>\n      </Segment>\n    </Grid.Column>\n  </Grid>\n)\n\nconst DesktopContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\n  (\n    <div>\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n        <Container>\n          <Menu.Item header\n                     key={\"header\"}\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\n                     href={\"/blog\"}\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}\n          />\n          <Menu.Item key={\"main\"}\n                     content={\"Go to main page\"}\n                     position={\"right\"}\n                     href={\"/\"}/>\n        </Container>\n      </Menu>\n      <div style={{ paddingTop: \"7.0em\" }}>\n        <Content children={children}/>\n        <Footer/>\n      </div>\n    </div>\n  )\n\n\nconst MobileContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\n  (\n    <div>\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n        <Container>\n          <Menu.Item key={\"home\"}\n                     href={\"/\"}\n                     icon={\"home\"}/>\n          <Menu.Item key={\"header\"}\n                     header\n                     href={\"/blog\"}\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\n                     position={\"right\"}\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        </Container>\n      </Menu>\n      <div style={{ paddingTop: \"7.0em\" }}>\n        <Content children={children}/>\n        <Footer/>\n      </div>\n    </div>\n  )\n\nexport {\n  DesktopContainer, MobileContainer\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}