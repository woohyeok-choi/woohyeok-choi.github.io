{"version":3,"sources":["webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/elasticlunr/elasticlunr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Input/Input.js"],"names":["arrayMap","__webpack_require__","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","baseEach","isArrayLike","index","result","Array","length","value","key","i","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","Index","pipeline","add","trimmer","stopWordFilter","stemmer","version","lunr","utils","warn","this","message","console","obj","EventEmitter","events","addListener","args","slice","arguments","fn","pop","names","forEach","name","hasHandler","push","removeListener","fnIndex","indexOf","splice","emit","apply","undefined","tokenizer","str","filter","token","map","t","toLowerCase","out","item","tokens","split","seperator","concat","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","load","serialised","fnName","Error","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","j","reset","get","toJSON","_fields","_ref","documentStore","DocumentStore","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","ref","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","hasOwnProperty","df","getDocFreq","log","getFields","search","query","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","results","score","sort","a","b","booleanType","bool","expand","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","constructor","attr","clone","updateFieldLength","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","","able","about","across","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","got","had","has","have","he","her","hers","him","his","how","however","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","often","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your","root","tokenInfo","hasToken","node","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","element","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements","ButtonContent","props","children","className","content","hidden","visible","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","lib","isNil","handledProps","propTypes","Button_ButtonContent","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","isNil_default","map_default","button","elements_Button_Button","create","Button_ButtonGroup","ButtonOr","text","data-text","Button_ButtonOr","Button_Button","_Component","Button","_getPrototypeOf2","_this","classCallCheck_default","_len","_key","possibleConstructorReturn_default","getPrototypeOf_default","defineProperty_default","assertThisInitialized_default","_this$props","_this$props2","disabled","tabIndex","invoke_default","e","preventDefault","_this$props3","labelPosition","inherits_default","createClass_default","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","aria-pressed","handleRef","Icon","hasChildren","computeButtonAriaRole","react","factories","__webpack_exports__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default","lodash_includes__WEBPACK_IMPORTED_MODULE_10__","lodash_includes__WEBPACK_IMPORTED_MODULE_10___default","lodash_map__WEBPACK_IMPORTED_MODULE_11__","lodash_map__WEBPACK_IMPORTED_MODULE_11___default","lodash_invoke__WEBPACK_IMPORTED_MODULE_12__","lodash_invoke__WEBPACK_IMPORTED_MODULE_12___default","lodash_get__WEBPACK_IMPORTED_MODULE_13__","lodash_get__WEBPACK_IMPORTED_MODULE_13___default","lodash_isNil__WEBPACK_IMPORTED_MODULE_14__","lodash_isNil__WEBPACK_IMPORTED_MODULE_14___default","classnames__WEBPACK_IMPORTED_MODULE_15__","classnames__WEBPACK_IMPORTED_MODULE_15___default","react__WEBPACK_IMPORTED_MODULE_17__","react__WEBPACK_IMPORTED_MODULE_17___default","_lib__WEBPACK_IMPORTED_MODULE_18__","_lib__WEBPACK_IMPORTED_MODULE_19__","_lib__WEBPACK_IMPORTED_MODULE_20__","_lib__WEBPACK_IMPORTED_MODULE_21__","_lib__WEBPACK_IMPORTED_MODULE_22__","_lib__WEBPACK_IMPORTED_MODULE_23__","_lib__WEBPACK_IMPORTED_MODULE_24__","_elements_Button__WEBPACK_IMPORTED_MODULE_25__","_elements_Icon__WEBPACK_IMPORTED_MODULE_26__","_elements_Label__WEBPACK_IMPORTED_MODULE_27__","Input","inputRef","focus","select","child","handleInputRef","type","unhandled","_partitionHTMLProps","_partitionHTMLProps2","htmlInputProps","onChange","handleChange","_this2","action","actionPosition","iconPosition","input","transparent","_this$partitionProps","partitionProps","_this$partitionProps2","childElements","handleChildOverrides","actionElement","computeIcon"],"mappings":"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","file":"14-8b34d5f30c865f6107da.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n\n(function(){\n\n/*!\n * elasticlunr.js\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * Convenience function for instantiating a new elasticlunr index and configuring it\n * with the default pipeline functions and the passed config function.\n *\n * When using this convenience function a new index will be created with the\n * following functions already in the pipeline:\n * \n * 1. elasticlunr.trimmer - trim non-word character\n * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n * index\n * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n *\n *\n * Example:\n *\n *     var idx = elasticlunr(function () {\n *       this.addField('id');\n *       this.addField('title');\n *       this.addField('body');\n *       \n *       //this.setRef('id'); // default ref is 'id'\n *\n *       this.pipeline.add(function () {\n *         // some custom pipeline function\n *       });\n *     });\n * \n *    idx.addDoc({\n *      id: 1, \n *      title: 'Oracle released database 12g',\n *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n *    });\n * \n *    idx.addDoc({\n *      id: 2, \n *      title: 'Oracle released annual profit report',\n *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n *    });\n * \n *    # simple search\n *    idx.search('oracle database');\n * \n *    # search with query-time boosting\n *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n *\n * @param {Function} config A function that will be called with the new instance\n * of the elasticlunr.Index as both its context and first parameter. It can be used to\n * customize the instance of new elasticlunr.Index.\n * @namespace\n * @module\n * @return {elasticlunr.Index}\n *\n */\nvar elasticlunr = function (config) {\n  var idx = new elasticlunr.Index;\n\n  idx.pipeline.add(\n    elasticlunr.trimmer,\n    elasticlunr.stopWordFilter,\n    elasticlunr.stemmer\n  );\n\n  if (config) config.call(idx, idx);\n\n  return idx;\n};\n\nelasticlunr.version = \"0.9.5\";\n\n// only used this to make elasticlunr.js compatible with lunr-languages\n// this is a trick to define a global alias of elasticlunr\nlunr = elasticlunr;\n\n/*!\n * elasticlunr.utils\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A namespace containing utils for the rest of the elasticlunr library\n */\nelasticlunr.utils = {};\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf Utils\n */\nelasticlunr.utils.warn = (function (global) {\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message);\n    }\n  };\n})(this);\n\n/**\n * Convert an object to string.\n *\n * In the case of `null` and `undefined` the function returns\n * an empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {object} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf Utils\n */\nelasticlunr.utils.toString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\";\n  }\n\n  return obj.toString();\n};\n/*!\n * elasticlunr.EventEmitter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n * It manages adding and removing event handlers and triggering events and their handlers.\n *\n * Each event could has multiple corresponding functions,\n * these functions will be called as the sequence that they are added into the event.\n * \n * @constructor\n */\nelasticlunr.EventEmitter = function () {\n  this.events = {};\n};\n\n/**\n * Binds a handler function to a specific event(s).\n *\n * Can bind a single function to many different events in one call.\n *\n * @param {String} [eventName] The name(s) of events to bind this function to.\n * @param {Function} fn The function to call when an event is fired.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.addListener = function () {\n  var args = Array.prototype.slice.call(arguments),\n      fn = args.pop(),\n      names = args;\n\n  if (typeof fn !== \"function\") throw new TypeError (\"last argument must be a function\");\n\n  names.forEach(function (name) {\n    if (!this.hasHandler(name)) this.events[name] = [];\n    this.events[name].push(fn);\n  }, this);\n};\n\n/**\n * Removes a handler function from a specific event.\n *\n * @param {String} eventName The name of the event to remove this function from.\n * @param {Function} fn The function to remove from an event.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n  if (!this.hasHandler(name)) return;\n\n  var fnIndex = this.events[name].indexOf(fn);\n  if (fnIndex === -1) return;\n\n  this.events[name].splice(fnIndex, 1);\n\n  if (this.events[name].length == 0) delete this.events[name];\n};\n\n/**\n * Call all functions that bounded to the given event.\n *\n * Additional data can be passed to the event handler as arguments to `emit`\n * after the event name.\n *\n * @param {String} eventName The name of the event to emit.\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.emit = function (name) {\n  if (!this.hasHandler(name)) return;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  this.events[name].forEach(function (fn) {\n    fn.apply(undefined, args);\n  }, this);\n};\n\n/**\n * Checks whether a handler has ever been stored against an event.\n *\n * @param {String} eventName The name of the event to check.\n * @private\n * @memberOf EventEmitter\n */\nelasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n  return name in this.events;\n};\n/*!\n * elasticlunr.tokenizer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * A function for splitting a string into tokens.\n * Currently English is supported as default.\n * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n * the value of this property to set how you want strings are split into tokens.\n * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n * text process, then you'd better not change it.\n *\n * @module\n * @param {String} str The string that you want to tokenize.\n * @see elasticlunr.tokenizer.seperator\n * @return {Array}\n */\nelasticlunr.tokenizer = function (str) {\n  if (!arguments.length || str === null || str === undefined) return [];\n  if (Array.isArray(str)) {\n    var arr = str.filter(function(token) {\n      if (token === null || token === undefined) {\n        return false;\n      }\n\n      return true;\n    });\n\n    arr = arr.map(function (t) {\n      return elasticlunr.utils.toString(t).toLowerCase();\n    });\n\n    var out = [];\n    arr.forEach(function(item) {\n      var tokens = item.split(elasticlunr.tokenizer.seperator);\n      out = out.concat(tokens);\n    }, this);\n\n    return out;\n  }\n\n  return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n};\n\n/**\n * Default string seperator.\n */\nelasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n\n/**\n * The sperator used to split a string into tokens. Override this property to change the behaviour of\n * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see elasticlunr.tokenizer\n */\nelasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n\n/**\n * Set up customized string seperator\n *\n * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n */\nelasticlunr.tokenizer.setSeperator = function(sep) {\n    if (sep !== null && sep !== undefined && typeof(sep) === 'object') {\n        elasticlunr.tokenizer.seperator = sep;\n    }\n}\n\n/**\n * Reset string seperator\n *\n */\nelasticlunr.tokenizer.resetSeperator = function() {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n}\n\n/**\n * Get string seperator\n *\n */\nelasticlunr.tokenizer.getSeperator = function() {\n    return elasticlunr.tokenizer.seperator;\n}\n/*!\n * elasticlunr.Pipeline\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n * both documents tokens and query tokens.\n *\n * An instance of elasticlunr.Index will contain a pipeline\n * with a trimmer, a stop word filter, an English stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline, it will call each function in turn.\n *\n * The output of the functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nelasticlunr.Pipeline = function () {\n  this._queue = [];\n};\n\nelasticlunr.Pipeline.registeredFunctions = {};\n\n/**\n * Register a function in the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {Function} fn The function to register.\n * @param {String} label The label to register this function with\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in elasticlunr.Pipeline.registeredFunctions) {\n    elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n  }\n\n  fn.label = label;\n  elasticlunr.Pipeline.registeredFunctions[label] = fn;\n};\n\n/**\n * Get a registered function in the pipeline.\n *\n * @param {String} label The label of registered function.\n * @return {Function}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.getRegisteredFunction = function (label) {\n  if ((label in elasticlunr.Pipeline.registeredFunctions) !== true) {\n    return null;\n  }\n\n  return elasticlunr.Pipeline.registeredFunctions[label];\n};\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {Function} fn The function to check for.\n * @private\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions);\n\n  if (!isRegistered) {\n    elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n  }\n};\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised The serialised pipeline to load.\n * @return {elasticlunr.Pipeline}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.load = function (serialised) {\n  var pipeline = new elasticlunr.Pipeline;\n\n  serialised.forEach(function (fnName) {\n    var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n    if (fn) {\n      pipeline.add(fn);\n    } else {\n      throw new Error('Cannot load un-registered function: ' + fnName);\n    }\n  });\n\n  return pipeline;\n};\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {Function} functions Any number of functions to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments);\n\n  fns.forEach(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    this._queue.push(fn);\n  }, this);\n};\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos + 1, 0, newFn);\n};\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n * If existingFn is not found, throw an Exception.\n *\n * @param {Function} existingFn A function that already exists in the pipeline.\n * @param {Function} newFn The new function to add to the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n  var pos = this._queue.indexOf(existingFn);\n  if (pos === -1) {\n    throw new Error('Cannot find existingFn');\n  }\n\n  this._queue.splice(pos, 0, newFn);\n};\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {Function} fn The function to remove from the pipeline.\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._queue.indexOf(fn);\n  if (pos === -1) {\n    return;\n  }\n\n  this._queue.splice(pos, 1);\n};\n\n/**\n * Runs the current list of functions that registered in the pipeline against the\n * input tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.run = function (tokens) {\n  var out = [],\n      tokenLength = tokens.length,\n      pipelineLength = this._queue.length;\n\n  for (var i = 0; i < tokenLength; i++) {\n    var token = tokens[i];\n\n    for (var j = 0; j < pipelineLength; j++) {\n      token = this._queue[j](token, i, tokens);\n      if (token === void 0 || token === null) break;\n    };\n\n    if (token !== void 0 && token !== null) out.push(token);\n  };\n\n  return out;\n};\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.reset = function () {\n  this._queue = [];\n};\n\n /**\n  * Get the pipeline if user want to check the pipeline.\n  *\n  * @memberOf Pipeline\n  */\n elasticlunr.Pipeline.prototype.get = function () {\n   return this._queue;\n };\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n * Only serialize pipeline function's name. Not storing function, so when\n * loading the archived JSON index file, corresponding pipeline function is \n * added by registered function of elasticlunr.Pipeline.registeredFunctions\n *\n * Logs a warning if the function has not been registered.\n *\n * @return {Array}\n * @memberOf Pipeline\n */\nelasticlunr.Pipeline.prototype.toJSON = function () {\n  return this._queue.map(function (fn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n    return fn.label;\n  });\n};\n/*!\n * elasticlunr.Index\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.Index is object that manages a search index.  It contains the indexes\n * and stores all the tokens and document lookups.  It also provides the main\n * user facing API for the library.\n *\n * @constructor\n */\nelasticlunr.Index = function () {\n  this._fields = [];\n  this._ref = 'id';\n  this.pipeline = new elasticlunr.Pipeline;\n  this.documentStore = new elasticlunr.DocumentStore;\n  this.index = {};\n  this.eventEmitter = new elasticlunr.EventEmitter;\n  this._idfCache = {};\n\n  this.on('add', 'remove', 'update', (function () {\n    this._idfCache = {};\n  }).bind(this));\n};\n\n/**\n * Bind a handler to events being emitted by the index.\n *\n * The handler can be bound to many events at the same time.\n *\n * @param {String} [eventName] The name(s) of events to bind the function to.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.on = function () {\n  var args = Array.prototype.slice.call(arguments);\n  return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n};\n\n/**\n * Removes a handler from an event being emitted by the index.\n *\n * @param {String} eventName The name of events to remove the function from.\n * @param {Function} fn The serialised set to load.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.off = function (name, fn) {\n  return this.eventEmitter.removeListener(name, fn);\n};\n\n/**\n * Loads a previously serialised index.\n *\n * Issues a warning if the index being imported was serialised\n * by a different version of elasticlunr.\n *\n * @param {Object} serialisedData The serialised set to load.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.load = function (serialisedData) {\n  if (serialisedData.version !== elasticlunr.version) {\n    elasticlunr.utils.warn('version mismatch: current '\n                    + elasticlunr.version + ' importing ' + serialisedData.version);\n  }\n\n  var idx = new this;\n\n  idx._fields = serialisedData.fields;\n  idx._ref = serialisedData.ref;\n  idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n  idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n  idx.index = {};\n  for (var field in serialisedData.index) {\n    idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n  }\n\n  return idx;\n};\n\n/**\n * Adds a field to the list of fields that will be searchable within documents in the index.\n *\n * Remember that inner index is build based on field, which means each field has one inverted index.\n *\n * Fields should be added before any documents are added to the index, fields\n * that are added after documents are added to the index will only apply to new\n * documents added to the index.\n *\n * @param {String} fieldName The name of the field within the document that should be indexed\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addField = function (fieldName) {\n  this._fields.push(fieldName);\n  this.index[fieldName] = new elasticlunr.InvertedIndex;\n  return this;\n};\n\n/**\n * Sets the property used to uniquely identify documents added to the index,\n * by default this property is 'id'.\n *\n * This should only be changed before adding documents to the index, changing\n * the ref property without resetting the index can lead to unexpected results.\n *\n * @param {String} refName The property to use to uniquely identify the\n * documents in the index.\n * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.setRef = function (refName) {\n  this._ref = refName;\n  return this;\n};\n\n/**\n *\n * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n *\n * Defaultly save all the original JSON documents.\n *\n * @param {Boolean} save Whether to save the original JSON documents.\n * @return {elasticlunr.Index}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.saveDocument = function (save) {\n  this.documentStore = new elasticlunr.DocumentStore(save);\n  return this;\n};\n\n/**\n * Add a JSON format document to the index.\n *\n * This is the way new documents enter the index, this function will run the\n * fields from the document through the index's pipeline and then add it to\n * the index, it will then show up in search results.\n *\n * An 'add' event is emitted with the document that has been added and the index\n * the document has been added to. This event can be silenced by passing false\n * as the second argument to add.\n *\n * @param {Object} doc The JSON format document to add to the index.\n * @param {Boolean} emitEvent Whether or not to emit events, default true.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n  if (!doc) return;\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n\n  this.documentStore.addDoc(docRef, doc);\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n\n    var tokenCount = {};\n    fieldTokens.forEach(function (token) {\n      if (token in tokenCount) tokenCount[token] += 1;\n      else tokenCount[token] = 1;\n    }, this);\n\n    for (var token in tokenCount) {\n      var termFrequency = tokenCount[token];\n      termFrequency = Math.sqrt(termFrequency);\n      this.index[field].addToken(token, { ref: docRef, tf: termFrequency });\n    }\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('add', doc, this);\n};\n\n/**\n * Removes a document from the index by doc ref.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n *\n * @param {String|Integer} docRef The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n  if (!docRef) return;\n  if (this.documentStore.isDocStored() === false) {\n    return;\n  }\n\n  if (!this.documentStore.hasDoc(docRef)) return;\n  var doc = this.documentStore.getDoc(docRef);\n  this.removeDoc(doc, false);\n};\n\n/**\n * Removes a document from the index.\n * This remove operation could work even the original doc is not store in the DocumentStore.\n *\n * To make sure documents no longer show up in search results they can be\n * removed from the index using this method.\n *\n * A 'remove' event is emitted with the document that has been removed and the index\n * the document has been removed from. This event can be silenced by passing false\n * as the second argument to remove.\n *\n *\n * @param {Object} doc The document ref to remove from the index.\n * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n * @memberOf Index\n */\nelasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n  if (!doc) return;\n\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  var docRef = doc[this._ref];\n  if (!this.documentStore.hasDoc(docRef)) return;\n\n  this.documentStore.removeDoc(docRef);\n\n  this._fields.forEach(function (field) {\n    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n    fieldTokens.forEach(function (token) {\n      this.index[field].removeToken(token, docRef);\n    }, this);\n  }, this);\n\n  if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n};\n\n/**\n * Updates a document in the index.\n *\n * When a document contained within the index gets updated, fields changed,\n * added or removed, to make sure it correctly matched against search queries,\n * it should be updated in the index.\n *\n * This method is just a wrapper around `remove` and `add`\n *\n * An 'update' event is emitted with the document that has been updated and the index.\n * This event can be silenced by passing false as the second argument to update. Only\n * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n * are silenced.\n *\n * @param {Object} doc The document to update in the index.\n * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n * @see Index.prototype.remove\n * @see Index.prototype.add\n * @memberOf Index\n */\nelasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n  var emitEvent = emitEvent === undefined ? true : emitEvent;\n\n  this.removeDocByRef(doc[this._ref], false);\n  this.addDoc(doc, false);\n\n  if (emitEvent) this.eventEmitter.emit('update', doc, this);\n};\n\n/**\n * Calculates the inverse document frequency for a token within the index of a field.\n *\n * @param {String} token The token to calculate the idf of.\n * @param {String} field The field to compute idf.\n * @see Index.prototype.idf\n * @private\n * @memberOf Index\n */\nelasticlunr.Index.prototype.idf = function (term, field) {\n  var cacheKey = \"@\" + field + '/' + term;\n  if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n\n  var df = this.index[field].getDocFreq(term);\n  var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n  this._idfCache[cacheKey] = idf;\n\n  return idf;\n};\n\n/**\n * get fields of current index instance\n *\n * @return {Array}\n */\nelasticlunr.Index.prototype.getFields = function () {\n  return this._fields.slice();\n};\n\n/**\n * Searches the index using the passed query.\n * Queries should be a string, multiple words are allowed.\n *\n * If config is null, will search all fields defaultly, and lead to OR based query.\n * If config is specified, will search specified with query time boosting.\n *\n * All query tokens are passed through the same pipeline that document tokens\n * are passed through, so any language processing involved will be run on every\n * query term.\n *\n * Each query term is expanded, so that the term 'he' might be expanded to\n * 'hello' and 'help' if those terms were already included in the index.\n *\n * Matching documents are returned as an array of objects, each object contains\n * the matching document ref, as set for this index, and the similarity score\n * for this document against the query.\n *\n * @param {String} query The query to search the index with.\n * @param {JSON} userConfig The user query config, JSON format.\n * @return {Object}\n * @see Index.prototype.idf\n * @see Index.prototype.documentVector\n * @memberOf Index\n */\nelasticlunr.Index.prototype.search = function (query, userConfig) {\n  if (!query) return [];\n\n  var configStr = null;\n  if (userConfig != null) {\n    configStr = JSON.stringify(userConfig);\n  }\n\n  var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n\n  var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n\n  var queryResults = {};\n\n  for (var field in config) {\n    var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n    var fieldBoost = config[field].boost;\n\n    for (var docRef in fieldSearchResults) {\n      fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n    }\n\n    for (var docRef in fieldSearchResults) {\n      if (docRef in queryResults) {\n        queryResults[docRef] += fieldSearchResults[docRef];\n      } else {\n        queryResults[docRef] = fieldSearchResults[docRef];\n      }\n    }\n  }\n\n  var results = [];\n  for (var docRef in queryResults) {\n    results.push({ref: docRef, score: queryResults[docRef]});\n  }\n\n  results.sort(function (a, b) { return b.score - a.score; });\n  return results;\n};\n\n/**\n * search queryTokens in specified field.\n *\n * @param {Array} queryTokens The query tokens to query in this field.\n * @param {String} field Field to query in.\n * @param {elasticlunr.Configuration} config The user query config, JSON format.\n * @return {Object}\n */\nelasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n  var booleanType = config[fieldName].bool;\n  var expand = config[fieldName].expand;\n  var boost = config[fieldName].boost;\n  var scores = null;\n  var docTokens = {};\n\n  // Do nothing if the boost is 0\n  if (boost === 0) {\n    return;\n  }\n\n  queryTokens.forEach(function (token) {\n    var tokens = [token];\n    if (expand == true) {\n      tokens = this.index[fieldName].expandToken(token);\n    }\n    // Consider every query token in turn. If expanded, each query token\n    // corresponds to a set of tokens, which is all tokens in the \n    // index matching the pattern queryToken* .\n    // For the set of tokens corresponding to a query token, find and score\n    // all matching documents. Store those scores in queryTokenScores, \n    // keyed by docRef.\n    // Then, depending on the value of booleanType, combine the scores\n    // for this query token with previous scores.  If booleanType is OR,\n    // then merge the scores by summing into the accumulated total, adding\n    // new document scores are required (effectively a union operator). \n    // If booleanType is AND, accumulate scores only if the document \n    // has previously been scored by another query token (an intersection\n    // operation0. \n    // Furthermore, since when booleanType is AND, additional \n    // query tokens can't add new documents to the result set, use the\n    // current document set to limit the processing of each new query \n    // token for efficiency (i.e., incremental intersection).\n    \n    var queryTokenScores = {};\n    tokens.forEach(function (key) {\n      var docs = this.index[fieldName].getDocs(key);\n      var idf = this.idf(key, fieldName);\n      \n      if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n          for (var docRef in scores) {\n              if (docRef in docs) {\n                  filteredDocs[docRef] = docs[docRef];\n              }\n          }\n          docs = filteredDocs;\n      }\n      // only record appeared token for retrieved documents for the\n      // original token, not for expaned token.\n      // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n      // query token appear in that document.\n      // so expanded token should not be added into docTokens, if added, this will pollute the\n      // coordNorm\n      if (key == token) {\n        this.fieldSearchStats(docTokens, key, docs);\n      }\n\n      for (var docRef in docs) {\n        var tf = this.index[fieldName].getTermFrequency(key, docRef);\n        var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n        var fieldLengthNorm = 1;\n        if (fieldLength != 0) {\n          fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n        }\n\n        var penality = 1;\n        if (key != token) {\n          // currently I'm not sure if this penality is enough,\n          // need to do verification\n          penality = (1 - (key.length - token.length) / key.length) * 0.15;\n        }\n\n        var score = tf * idf * fieldLengthNorm * penality;\n\n        if (docRef in queryTokenScores) {\n          queryTokenScores[docRef] += score;\n        } else {\n          queryTokenScores[docRef] = score;\n        }\n      }\n    }, this);\n    \n    scores = this.mergeScores(scores, queryTokenScores, booleanType);\n  }, this);\n\n  scores = this.coordNorm(scores, docTokens, queryTokens.length);\n  return scores;\n};\n\n/**\n * Merge the scores from one set of tokens into an accumulated score table.\n * Exact operation depends on the op parameter. If op is 'AND', then only the\n * intersection of the two score lists is retained. Otherwise, the union of\n * the two score lists is returned. For internal use only.\n *\n * @param {Object} bool accumulated scores. Should be null on first call.\n * @param {String} scores new scores to merge into accumScores.\n * @param {Object} op merge operation (should be 'AND' or 'OR').\n *\n */\n\nelasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n        return scores; \n    }\n    if (op == 'AND') {\n        var intersection = {};\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                intersection[docRef] = accumScores[docRef] + scores[docRef];\n            }\n        }\n        return intersection;\n    } else {\n        for (var docRef in scores) {\n            if (docRef in accumScores) {\n                accumScores[docRef] += scores[docRef];\n            } else {\n                accumScores[docRef] = scores[docRef];\n            }\n        }\n        return accumScores;\n    }\n};\n\n\n/**\n * Record the occuring query token of retrieved doc specified by doc field.\n * Only for inner user.\n *\n * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n * @param {String} token query token\n * @param {Object} docs the retrieved documents of the query token\n *\n */\nelasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n  for (var doc in docs) {\n    if (doc in docTokens) {\n      docTokens[doc].push(token);\n    } else {\n      docTokens[doc] = [token];\n    }\n  }\n};\n\n/**\n * coord norm the score of a doc.\n * if a doc contain more query tokens, then the score will larger than the doc\n * contains less query tokens.\n *\n * only for inner use.\n *\n * @param {Object} results first results\n * @param {Object} docs field search results of a token\n * @param {Integer} n query token number\n * @return {Object}\n */\nelasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n  for (var doc in scores) {\n    if (!(doc in docTokens)) continue;\n    var tokens = docTokens[doc].length;\n    scores[doc] = scores[doc] * tokens / n;\n  }\n\n  return scores;\n};\n\n/**\n * Returns a representation of the index ready for serialisation.\n *\n * @return {Object}\n * @memberOf Index\n */\nelasticlunr.Index.prototype.toJSON = function () {\n  var indexJson = {};\n  this._fields.forEach(function (field) {\n    indexJson[field] = this.index[field].toJSON();\n  }, this);\n\n  return {\n    version: elasticlunr.version,\n    fields: this._fields,\n    ref: this._ref,\n    documentStore: this.documentStore.toJSON(),\n    index: indexJson,\n    pipeline: this.pipeline.toJSON()\n  };\n};\n\n/**\n * Applies a plugin to the current index.\n *\n * A plugin is a function that is called with the index as its context.\n * Plugins can be used to customise or extend the behaviour the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied to the index.\n *\n * The plugin function will be called with the index as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index as its context.\n *\n * Example:\n *\n *     var myPlugin = function (idx, arg1, arg2) {\n *       // `this` is the index to be extended\n *       // apply any extensions etc here.\n *     }\n *\n *     var idx = elasticlunr(function () {\n *       this.use(myPlugin, 'arg1', 'arg2')\n *     })\n *\n * @param {Function} plugin The plugin to apply.\n * @memberOf Index\n */\nelasticlunr.Index.prototype.use = function (plugin) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  args.unshift(this);\n  plugin.apply(this, args);\n};\n/*!\n * elasticlunr.DocumentStore\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n * documents stored in index.\n *\n * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n *\n * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n * could not use JSON document to generate snippets of search results.\n *\n * @param {Boolean} save If the original JSON document should be stored.\n * @constructor\n * @module\n */\nelasticlunr.DocumentStore = function (save) {\n  if (save === null || save === undefined) {\n    this._save = true;\n  } else {\n    this._save = save;\n  }\n\n  this.docs = {};\n  this.docInfo = {};\n  this.length = 0;\n};\n\n/**\n * Loads a previously serialised document store\n *\n * @param {Object} serialisedData The serialised document store to load.\n * @return {elasticlunr.DocumentStore}\n */\nelasticlunr.DocumentStore.load = function (serialisedData) {\n  var store = new this;\n\n  store.length = serialisedData.length;\n  store.docs = serialisedData.docs;\n  store.docInfo = serialisedData.docInfo;\n  store._save = serialisedData.save;\n\n  return store;\n};\n\n/**\n * check if current instance store the original doc\n *\n * @return {Boolean}\n */\nelasticlunr.DocumentStore.prototype.isDocStored = function () {\n  return this._save;\n};\n\n/**\n * Stores the given doc in the document store against the given id.\n * If docRef already exist, then update doc.\n *\n * Document is store by original JSON format, then you could use original document to generate search snippets.\n *\n * @param {Integer|String} docRef The key used to store the JSON format doc.\n * @param {Object} doc The JSON format doc.\n */\nelasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n  if (!this.hasDoc(docRef)) this.length++;\n\n  if (this._save === true) {\n    this.docs[docRef] = clone(doc);\n  } else {\n    this.docs[docRef] = null;\n  }\n};\n\n/**\n * Retrieves the JSON doc from the document store for a given key.\n *\n * If docRef not found, return null.\n * If user set not storing the documents, return null.\n *\n * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n * @return {Object}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n  if (this.hasDoc(docRef) === false) return null;\n  return this.docs[docRef];\n};\n\n/**\n * Checks whether the document store contains a key (docRef).\n *\n * @param {Integer|String} docRef The id to look up in the document store.\n * @return {Boolean}\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n  return docRef in this.docs;\n};\n\n/**\n * Removes the value for a key in the document store.\n *\n * @param {Integer|String} docRef The id to remove from the document store.\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n  if (!this.hasDoc(docRef)) return;\n\n  delete this.docs[docRef];\n  delete this.docInfo[docRef];\n  this.length--;\n};\n\n/**\n * Add field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n  this.docInfo[docRef][fieldName] = length;\n};\n\n/**\n * Update field length of a document's field tokens from pipeline results.\n * The field length of a document is used to do field length normalization even without the original JSON document stored.\n *\n * @param {Integer|String} docRef document's id or reference\n * @param {String} fieldName field name\n * @param {Integer} length field length\n */\nelasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n  if (docRef === null || docRef === undefined) return;\n  if (this.hasDoc(docRef) == false) return;\n\n  this.addFieldLength(docRef, fieldName, length);\n};\n\n/**\n * get field length of a document by docRef\n *\n * @param {Integer|String} docRef document id or reference\n * @param {String} fieldName field name\n * @return {Integer} field length\n */\nelasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n  if (docRef === null || docRef === undefined) return 0;\n\n  if (!(docRef in this.docs)) return 0;\n  if (!(fieldName in this.docInfo[docRef])) return 0;\n  return this.docInfo[docRef][fieldName];\n};\n\n/**\n * Returns a JSON representation of the document store used for serialisation.\n *\n * @return {Object} JSON format\n * @memberOf DocumentStore\n */\nelasticlunr.DocumentStore.prototype.toJSON = function () {\n  return {\n    docs: this.docs,\n    docInfo: this.docInfo,\n    length: this.length,\n    save: this._save\n  };\n};\n\n/**\n * Cloning object\n *\n * @param {Object} object in JSON format\n * @return {Object} copied object\n */\nfunction clone(obj) {\n  if (null === obj || \"object\" !== typeof obj) return obj;\n\n  var copy = obj.constructor();\n\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n\n  return copy;\n}\n/*!\n * elasticlunr.stemmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @module\n * @param {String} str The string to stem\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var   stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) {  w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return porterStemmer;\n})();\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n/*!\n * elasticlunr.stopWordFilter\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.stopWordFilter is an English language stop words filter, any words\n * contained in the stop word list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.stopWordFilter = function (token) {\n  if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n    return token;\n  }\n};\n\n/**\n * Remove predefined stop words\n * if user want to use customized stop words, user could use this function to delete\n * all predefined stopwords.\n *\n * @return {null}\n */\nelasticlunr.clearStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = {};\n};\n\n/**\n * Add customized stop words\n * user could use this function to add customized stop words\n * \n * @params {Array} words customized stop words\n * @return {null}\n */\nelasticlunr.addStopWords = function (words) {\n  if (words == null || Array.isArray(words) === false) return;\n\n  words.forEach(function (word) {\n    elasticlunr.stopWordFilter.stopWords[word] = true;\n  }, this);\n};\n\n/**\n * Reset to default stop words\n * user could use this function to restore default stop words\n *\n * @return {null}\n */\nelasticlunr.resetStopWords = function () {\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n};\n\nelasticlunr.defaultStopWords = {\n  \"\": true,\n  \"a\": true,\n  \"able\": true,\n  \"about\": true,\n  \"across\": true,\n  \"after\": true,\n  \"all\": true,\n  \"almost\": true,\n  \"also\": true,\n  \"am\": true,\n  \"among\": true,\n  \"an\": true,\n  \"and\": true,\n  \"any\": true,\n  \"are\": true,\n  \"as\": true,\n  \"at\": true,\n  \"be\": true,\n  \"because\": true,\n  \"been\": true,\n  \"but\": true,\n  \"by\": true,\n  \"can\": true,\n  \"cannot\": true,\n  \"could\": true,\n  \"dear\": true,\n  \"did\": true,\n  \"do\": true,\n  \"does\": true,\n  \"either\": true,\n  \"else\": true,\n  \"ever\": true,\n  \"every\": true,\n  \"for\": true,\n  \"from\": true,\n  \"get\": true,\n  \"got\": true,\n  \"had\": true,\n  \"has\": true,\n  \"have\": true,\n  \"he\": true,\n  \"her\": true,\n  \"hers\": true,\n  \"him\": true,\n  \"his\": true,\n  \"how\": true,\n  \"however\": true,\n  \"i\": true,\n  \"if\": true,\n  \"in\": true,\n  \"into\": true,\n  \"is\": true,\n  \"it\": true,\n  \"its\": true,\n  \"just\": true,\n  \"least\": true,\n  \"let\": true,\n  \"like\": true,\n  \"likely\": true,\n  \"may\": true,\n  \"me\": true,\n  \"might\": true,\n  \"most\": true,\n  \"must\": true,\n  \"my\": true,\n  \"neither\": true,\n  \"no\": true,\n  \"nor\": true,\n  \"not\": true,\n  \"of\": true,\n  \"off\": true,\n  \"often\": true,\n  \"on\": true,\n  \"only\": true,\n  \"or\": true,\n  \"other\": true,\n  \"our\": true,\n  \"own\": true,\n  \"rather\": true,\n  \"said\": true,\n  \"say\": true,\n  \"says\": true,\n  \"she\": true,\n  \"should\": true,\n  \"since\": true,\n  \"so\": true,\n  \"some\": true,\n  \"than\": true,\n  \"that\": true,\n  \"the\": true,\n  \"their\": true,\n  \"them\": true,\n  \"then\": true,\n  \"there\": true,\n  \"these\": true,\n  \"they\": true,\n  \"this\": true,\n  \"tis\": true,\n  \"to\": true,\n  \"too\": true,\n  \"twas\": true,\n  \"us\": true,\n  \"wants\": true,\n  \"was\": true,\n  \"we\": true,\n  \"were\": true,\n  \"what\": true,\n  \"when\": true,\n  \"where\": true,\n  \"which\": true,\n  \"while\": true,\n  \"who\": true,\n  \"whom\": true,\n  \"why\": true,\n  \"will\": true,\n  \"with\": true,\n  \"would\": true,\n  \"yet\": true,\n  \"you\": true,\n  \"your\": true\n};\n\nelasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n/*!\n * elasticlunr.trimmer\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n */\n\n/**\n * elasticlunr.trimmer is a pipeline function for trimming non word\n * characters from the begining and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @module\n * @param {String} token The token to pass through the filter\n * @return {String}\n * @see elasticlunr.Pipeline\n */\nelasticlunr.trimmer = function (token) {\n  if (token === null || token === undefined) {\n    throw new Error('token should not be undefined');\n  }\n\n  return token\n    .replace(/^\\W+/, '')\n    .replace(/\\W+$/, '');\n};\n\nelasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n/*!\n * elasticlunr.InvertedIndex\n * Copyright (C) 2016 Wei Song\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * elasticlunr.InvertedIndex is used for efficiently storing and\n * lookup of documents that contain a given token.\n *\n * @constructor\n */\nelasticlunr.InvertedIndex = function () {\n  this.root = { docs: {}, df: 0 };\n};\n\n/**\n * Loads a previously serialised inverted index.\n *\n * @param {Object} serialisedData The serialised inverted index to load.\n * @return {elasticlunr.InvertedIndex}\n */\nelasticlunr.InvertedIndex.load = function (serialisedData) {\n  var idx = new this;\n  idx.root = serialisedData.root;\n\n  return idx;\n};\n\n/**\n * Adds a {token: tokenInfo} pair to the inverted index.\n * If the token already exist, then update the tokenInfo.\n *\n * tokenInfo format: { ref: 1, tf: 2}\n * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n * the document.\n *\n * By default this function starts at the root of the current inverted index, however\n * it can start at any node of the inverted index if required.\n *\n * @param {String} token \n * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n * @param {Object} root An optional node at which to start looking for the\n * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n * is used.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n  var root = root || this.root,\n      idx = 0;\n\n  while (idx <= token.length - 1) {\n    var key = token[idx];\n\n    if (!(key in root)) root[key] = {docs: {}, df: 0};\n    idx += 1;\n    root = root[key];\n  }\n\n  var docRef = tokenInfo.ref;\n  if (!root.docs[docRef]) {\n    // if this doc not exist, then add this doc\n    root.docs[docRef] = {tf: tokenInfo.tf};\n    root.df += 1;\n  } else {\n    // if this doc already exist, then update tokenInfo\n    root.docs[docRef] = {tf: tokenInfo.tf};\n  }\n};\n\n/**\n * Checks whether a token is in this elasticlunr.InvertedIndex.\n * \n *\n * @param {String} token The token to be checked\n * @return {Boolean}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n  if (!token) return false;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return false;\n    node = node[token[i]];\n  }\n\n  return true;\n};\n\n/**\n * Retrieve a node from the inverted index for a given token.\n * If token not found in this InvertedIndex, return null.\n * \n *\n * @param {String} token The token to get the node for.\n * @return {Object}\n * @see InvertedIndex.prototype.get\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getNode = function (token) {\n  if (!token) return null;\n\n  var node = this.root;\n\n  for (var i = 0; i < token.length; i++) {\n    if (!node[token[i]]) return null;\n    node = node[token[i]];\n  }\n\n  return node;\n};\n\n/**\n * Retrieve the documents of a given token.\n * If token not found, return {}.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n  var node = this.getNode(token);\n  if (node == null) {\n    return {};\n  }\n\n  return node.docs;\n};\n\n/**\n * Retrieve term frequency of given token in given docRef.\n * If token or docRef not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @param {String|Integer} docRef\n * @return {Integer}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  if (!(docRef in node.docs)) {\n    return 0;\n  }\n\n  return node.docs[docRef].tf;\n};\n\n/**\n * Retrieve the document frequency of given token.\n * If token not found, return 0.\n *\n *\n * @param {String} token The token to get the documents for.\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n  var node = this.getNode(token);\n\n  if (node == null) {\n    return 0;\n  }\n\n  return node.df;\n};\n\n/**\n * Remove the document identified by document's ref from the token in the inverted index.\n *\n *\n * @param {String} token Remove the document from which token.\n * @param {String} ref The ref of the document to remove from given token.\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n  if (!token) return;\n  var node = this.getNode(token);\n\n  if (node == null) return;\n\n  if (ref in node.docs) {\n    delete node.docs[ref];\n    node.df -= 1;\n  }\n};\n\n/**\n * Find all the possible suffixes of given token using tokens currently in the inverted index.\n * If token not found, return empty Array.\n *\n * @param {String} token The token to expand.\n * @return {Array}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n  if (token == null || token == '') return [];\n  var memo = memo || [];\n\n  if (root == void 0) {\n    root = this.getNode(token);\n    if (root == null) return memo;\n  }\n\n  if (root.df > 0) memo.push(token);\n\n  for (var key in root) {\n    if (key === 'docs') continue;\n    if (key === 'df') continue;\n    this.expandToken(token + key, memo, root[key]);\n  }\n\n  return memo;\n};\n\n/**\n * Returns a representation of the inverted index ready for serialisation.\n *\n * @return {Object}\n * @memberOf InvertedIndex\n */\nelasticlunr.InvertedIndex.prototype.toJSON = function () {\n  return {\n    root: this.root\n  };\n};\n\n/*!\n * elasticlunr.Configuration\n * Copyright (C) 2016 Wei Song\n */\n \n /** \n  * elasticlunr.Configuration is used to analyze the user search configuration.\n  * \n  * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n  * \n  * Currently configuration supports:\n  * 1. query-time boosting, user could set how to boost each field.\n  * 2. boolean model chosing, user could choose which boolean model to use for each field.\n  * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n  * \n  * Query time boosting must be configured by field category, \"boolean\" model could be configured \n  * by both field category or globally as the following example. Field configuration for \"boolean\"\n  * will overwrite global configuration.\n  * Token expand could be configured both by field category or golbally. Local field configuration will\n  * overwrite global configuration.\n  * \n  * configuration example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"bool\" field configuation overwrite global configuation example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * \"expand\" example:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\"},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\",\n  *   expand: true\n  * }\n  * \n  * \"expand\" example for field category:\n  * {\n  *   fields:{ \n  *     title: {boost: 2, bool: \"AND\", expand: true},\n  *     body: {boost: 1}\n  *   },\n  *   bool: \"OR\"\n  * }\n  * \n  * setting the boost to 0 ignores the field (this will only search the title):\n  * {\n  *   fields:{\n  *     title: {boost: 1},\n  *     body: {boost: 0}\n  *   }\n  * }\n  *\n  * then, user could search with configuration to do query-time boosting.\n  * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n  * \n  * \n  * @constructor\n  * \n  * @param {String} config user configuration\n  * @param {Array} fields fields of index instance\n  * @module\n  */\nelasticlunr.Configuration = function (config, fields) {\n  var config = config || '';\n\n  if (fields == undefined || fields == null) {\n    throw new Error('fields should not be null');\n  }\n\n  this.config = {};\n\n  var userConfig;\n  try {\n    userConfig = JSON.parse(config);\n    this.buildUserConfig(userConfig, fields);\n  } catch (error) {\n    elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n    this.buildDefaultConfig(fields);\n  }\n};\n\n/**\n * Build default search configuration.\n * \n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n  this.reset();\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: \"OR\",\n      expand: false\n    };\n  }, this);\n};\n\n/**\n * Build user configuration.\n * \n * @param {JSON} config User JSON configuratoin\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n  var global_bool = \"OR\";\n  var global_expand = false;\n\n  this.reset();\n  if ('bool' in config) {\n    global_bool = config['bool'] || global_bool;\n  }\n\n  if ('expand' in config) {\n    global_expand = config['expand'] || global_expand;\n  }\n\n  if ('fields' in config) {\n    for (var field in config['fields']) {\n      if (fields.indexOf(field) > -1) {\n        var field_config = config['fields'][field];\n        var field_expand = global_expand;\n        if (field_config.expand != undefined) {\n          field_expand = field_config.expand;\n        }\n\n        this.config[field] = {\n          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,\n          bool: field_config.bool || global_bool,\n          expand: field_expand\n        };\n      } else {\n        elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n      }\n    }\n  } else {\n    this.addAllFields2UserConfig(global_bool, global_expand, fields);\n  }\n};\n\n/**\n * Add all fields to user search configuration.\n * \n * @param {String} bool Boolean model\n * @param {String} expand Expand model\n * @param {Array} fields fields of index instance\n */\nelasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n  fields.forEach(function (field) {\n    this.config[field] = {\n      boost: 1,\n      bool: bool,\n      expand: expand\n    };\n  }, this);\n};\n\n/**\n * get current user configuration\n */\nelasticlunr.Configuration.prototype.get = function () {\n  return this.config;\n};\n\n/**\n * reset user search configuration.\n */\nelasticlunr.Configuration.prototype.reset = function () {\n  this.config = {};\n};\n/**\n * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n * much bigger that not good for browser usage.\n *\n */\n\n\n/*!\n * lunr.SortedSet\n * Copyright (C) 2016 Oliver Nightingale\n */\n\n/**\n * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n * order.\n *\n * @constructor\n */\nlunr.SortedSet = function () {\n  this.length = 0\n  this.elements = []\n}\n\n/**\n * Loads a previously serialised sorted set.\n *\n * @param {Array} serialisedData The serialised set to load.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.load = function (serialisedData) {\n  var set = new this\n\n  set.elements = serialisedData\n  set.length = serialisedData.length\n\n  return set\n}\n\n/**\n * Inserts new items into the set in the correct position to maintain the\n * order.\n *\n * @param {Object} The objects to add to this set.\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.add = function () {\n  var i, element\n\n  for (i = 0; i < arguments.length; i++) {\n    element = arguments[i]\n    if (~this.indexOf(element)) continue\n    this.elements.splice(this.locationFor(element), 0, element)\n  }\n\n  this.length = this.elements.length\n}\n\n/**\n * Converts this sorted set into an array.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toArray = function () {\n  return this.elements.slice()\n}\n\n/**\n * Creates a new array with the results of calling a provided function on every\n * element in this sorted set.\n *\n * Delegates to Array.prototype.map and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * for the function fn.\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.map = function (fn, ctx) {\n  return this.elements.map(fn, ctx)\n}\n\n/**\n * Executes a provided function once per sorted set element.\n *\n * Delegates to Array.prototype.forEach and has the same signature.\n *\n * @param {Function} fn The function that is called on each element of the\n * set.\n * @param {Object} ctx An optional object that can be used as the context\n * @memberOf SortedSet\n * for the function fn.\n */\nlunr.SortedSet.prototype.forEach = function (fn, ctx) {\n  return this.elements.forEach(fn, ctx)\n}\n\n/**\n * Returns the index at which a given element can be found in the\n * sorted set, or -1 if it is not present.\n *\n * @param {Object} elem The object to locate in the sorted set.\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.indexOf = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem === elem) return pivot\n\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem === elem) return pivot\n\n  return -1\n}\n\n/**\n * Returns the position within the sorted set that an element should be\n * inserted at to maintain the current order of the set.\n *\n * This function assumes that the element to search for does not already exist\n * in the sorted set.\n *\n * @param {Object} elem The elem to find the position for in the set\n * @returns {Number}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.locationFor = function (elem) {\n  var start = 0,\n      end = this.elements.length,\n      sectionLength = end - start,\n      pivot = start + Math.floor(sectionLength / 2),\n      pivotElem = this.elements[pivot]\n\n  while (sectionLength > 1) {\n    if (pivotElem < elem) start = pivot\n    if (pivotElem > elem) end = pivot\n\n    sectionLength = end - start\n    pivot = start + Math.floor(sectionLength / 2)\n    pivotElem = this.elements[pivot]\n  }\n\n  if (pivotElem > elem) return pivot\n  if (pivotElem < elem) return pivot + 1\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the intersection\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.intersect = function (otherSet) {\n  var intersectSet = new lunr.SortedSet,\n      i = 0, j = 0,\n      a_len = this.length, b_len = otherSet.length,\n      a = this.elements, b = otherSet.elements\n\n  while (true) {\n    if (i > a_len - 1 || j > b_len - 1) break\n\n    if (a[i] === b[j]) {\n      intersectSet.add(a[i])\n      i++, j++\n      continue\n    }\n\n    if (a[i] < b[j]) {\n      i++\n      continue\n    }\n\n    if (a[i] > b[j]) {\n      j++\n      continue\n    }\n  };\n\n  return intersectSet\n}\n\n/**\n * Makes a copy of this set\n *\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.clone = function () {\n  var clone = new lunr.SortedSet\n\n  clone.elements = this.toArray()\n  clone.length = clone.elements.length\n\n  return clone\n}\n\n/**\n * Creates a new lunr.SortedSet that contains the elements in the union\n * of this set and the passed set.\n *\n * @param {lunr.SortedSet} otherSet The set to union with this set.\n * @returns {lunr.SortedSet}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.union = function (otherSet) {\n  var longSet, shortSet, unionSet\n\n  if (this.length >= otherSet.length) {\n    longSet = this, shortSet = otherSet\n  } else {\n    longSet = otherSet, shortSet = this\n  }\n\n  unionSet = longSet.clone()\n\n  for(var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++){\n    unionSet.add(shortSetElements[i])\n  }\n\n  return unionSet\n}\n\n/**\n * Returns a representation of the sorted set ready for serialisation.\n *\n * @returns {Array}\n * @memberOf SortedSet\n */\nlunr.SortedSet.prototype.toJSON = function () {\n  return this.toArray()\n}\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr\n  }))\n})();\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _invoke(_this.ref, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRef\", function (c) {\n      return _this.ref = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          ref: this.handleRef,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        ref: this.handleRef,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content);\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf(_toConsumableArray(SUI.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, handleRef, partitionHTMLProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../../elements/Button';\nimport Icon from '../../elements/Icon';\nimport Label from '../../elements/Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeIcon\", function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _this.inputRef.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"select\", function () {\n      return _this.inputRef.select();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChildOverrides\", function (child, defaultProps) {\n      return _objectSpread({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n\n          _this.handleInputRef(c);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleInputRef\", function (c) {\n      return _this.inputRef = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"partitionProps\", function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_objectSpread({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.handleInputRef\n      }), rest];\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          actionPosition = _this$props4.actionPosition,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          error = _this$props4.error,\n          fluid = _this$props4.fluid,\n          focus = _this$props4.focus,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          input = _this$props4.input,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          size = _this$props4.size,\n          transparent = _this$props4.transparent,\n          type = _this$props4.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _this$partitionProps = this.partitionProps(),\n          _this$partitionProps2 = _slicedToArray(_this$partitionProps, 2),\n          htmlInputProps = _this$partitionProps2[0],\n          rest = _this$partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action, {\n        autoGenerateKey: false\n      });\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        },\n        autoGenerateKey: false\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps,\n        autoGenerateKey: false\n      }), Icon.create(this.computeIcon(), {\n        autoGenerateKey: false\n      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\n_defineProperty(Input, \"defaultProps\", {\n  type: 'text'\n});\n\n_defineProperty(Input, \"handledProps\", [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"]);\n\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;"],"sourceRoot":""}