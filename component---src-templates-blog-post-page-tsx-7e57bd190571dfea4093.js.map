{"version":3,"sources":["webpack:///./src/components/blog/main-post-page.tsx","webpack:///./src/templates/blog-post-page.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["main_post_page","_ref","data","prevPost","nextPost","node","frontmatter","html","fields","title","date","category","tags","react","container","Header","as","dividing","Subheader","href","slug","target","linked_span","inverted","children","name","formatReadableDate","Segment","vertical","padded","basic","dangerouslySetInnerHTML","__html","style","fontSize","fontWeight","fontStyle","Label","Group","display","map","tag","key","content","Grid","columns","stackable","Column","textAlign","__webpack_require__","d","__webpack_exports__","query","pageContext","layout","formatPagePath","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment","format","index","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","_this$props$inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","Layout","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","$export","aFunction","toObject","fails","$sort","sort","test","P","F","undefined","comparefn","call","Categories","items","List","link","bulleted","_ref2","count","Item","sub_categories","categories","_243471705","totalCount","group","concat","_ref3","fieldValue","sub_categories_Categories","BlogTags","sub_tags","_ref3$limit","limit","_84730814","sub_tags_BlogTags","_ref4","_ref5","a","slice","_ref6","sub_recent_posts","posts","_3672802271","edges","Menu","secondary","pointing","fixed","Container","header","lineHeight","position","paddingTop","centered","width","float","footer","module","exports","method","arg","GridColumn","className","computer","floated","largeScreen","mobile","only","stretched","tablet","verticalAlign","widescreen","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","divided","reversed","Grid_GridRow","celled","doubling","relaxed","Row"],"mappings":"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","file":"component---src-templates-blog-post-page-tsx-7e57bd190571dfea4093.js","sourcesContent":["import * as React from \"react\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\nimport { Label, Header, Segment, Grid } from \"semantic-ui-react\"\nimport BlogContainer from './container'\nimport { formatReadableDate } from '../../utils'\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ( { data, prevPost, nextPost } : Props) => {\n  const { node } = data\n  const { frontmatter, html, fields } = node\n  const { title, date } = frontmatter\n  const { category, tags } = fields\n\n  return (\n    <BlogContainer>\n      <Header as={'h1'} dividing>\n        <Header.Subheader>\n          Category: <a href={category.slug} target={'_blank'}>\n            <LinkedSpan inverted={false} children={category.name}/>\n          </a>\n        </Header.Subheader>\n        {title}\n        <Header.Subheader>\n          { formatReadableDate(date) }\n        </Header.Subheader>\n      </Header>\n      <Segment vertical padded basic>\n        <div dangerouslySetInnerHTML={{__html: html}}/>\n      </Segment>\n      { tags &&\n      <Segment vertical padded={'very'}>\n        <span style={{fontSize: '16px', fontWeight: 'bold', fontStyle: 'italic'}}>Tagged with </span>\n        <Label.Group style={{display: 'inline'}}>\n          { tags.map(tag => <Label key={tag.name} href={tag.slug} content={tag.name}/>) }\n        </Label.Group>\n      </Segment>\n      }\n      <Grid columns={2} as={Segment} vertical stackable>\n        <Grid.Column textAlign={'left'}>\n          { prevPost &&\n            <Header as={'h3'}>\n              Previous post\n              <Header.Subheader style={{fontSize: '16px'}}>\n                <a href={prevPost.slug}>\n                  <LinkedSpan inverted={false} children={prevPost.title}/>\n                </a>\n              </Header.Subheader>\n            </Header>\n          }\n        </Grid.Column>\n        <Grid.Column textAlign={'right'}>\n            { nextPost &&\n              <Header as={'h3'}>\n                Next post\n                <Header.Subheader style={{fontSize: '16px'}}>\n                  <a href={nextPost.slug}>\n                    <LinkedSpan inverted={false} children={nextPost.title}/>\n                  </a>\n                </Header.Subheader>\n              </Header>\n            }\n        </Grid.Column>\n      </Grid>\n    </BlogContainer>\n  )\n}\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  prevPost?: {\n    title?: string\n    slug?: string\n  }\n  nextPost?: {\n    title?: string\n    slug?: string\n  }\n}","import * as React from 'react'\nimport Layout from \"../components/common/layout\"\nimport BlogContent from '../components/blog/main-post-page'\nimport { MarkdownRemarkNodeType } from \"../types\"\nimport { graphql } from \"gatsby\"\n\nexport default ({ data, pageContext } : Props) => {\n  const { nextPost, prevPost } = pageContext\n  return (\n    <Layout>\n      <BlogContent data={data} nextPost={nextPost} prevPost={prevPost}/>\n    </Layout>\n  )\n}\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  pageContext: {\n    nextPost?: {\n      title?: string\n      slug?: string\n    }\n    prevPost?: {\n      title?: string\n      slug?: string\n    }\n  }\n}\n\nexport const query = graphql`\n  query getPosts($slug: String!) {\n    node: markdownRemark(fields: {\n      slug: {\n        eq: $slug\n      }\n    }) {\n      html\n      frontmatter {\n        title\n        date\n      }\n      fields {\n        category {\n          name\n          slug\n        }\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }`","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}