{"version":3,"sources":["webpack:///./src/components/main/about.tsx","webpack:///./src/components/main/publications.tsx","webpack:///./src/components/main/academic-services.tsx","webpack:///./src/components/main/affiliations.tsx","webpack:///./src/components/common/carousel.tsx","webpack:///./src/components/main/research-preview.tsx","webpack:///./src/components/main/awards.tsx","webpack:///./src/components/main/blog-preview.tsx","webpack:///./src/components/main/container.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./src/images/about.jpg"],"names":["About","_ref","content","contacts","imagePath","react","Item","Group","Image","size","src","Content","verticalAlign","Description","style","color","fontSize","lineHeight","Extra","Label","marginTop","map","contact","key","id","as","name","icon","href","url","target","about","props","_1532043391","data","about_About","Object","assign","edges","_ref2","node","Publications","items","divided","item","publications_PublicationItem","PublicationItem","type","title","authors","publisher","abbrev","year","volume","issue","pages","doi","bibtexFile","paperFile","posterFile","slideFile","videoFile","appendixFile","videoLink","github","extra","links","publicURL","push","link","margin","fontWeight","Header","Meta","linked_span","children","inverted","_ref3","reduce","acc","cur","concat","main_publications","publications","_1804689281","publications_Publications","_ref4","AcademicServices","List","bulleted","service","organization","academic_services","academicServices","_1934711510","academic_services_AcademicServices","Affiliations","position","main_affiliations","affiliations","_2926807820","affiliations_Affiliations","carousel","lib_default","a","slidesToShow","nextArrow","Button","circular","prevArrow","className","dots","infinite","responsive","breakpoint","Responsive","onlyTablet","maxWidth","settings","arrows","onlyMobile","ResearchPreviewItem","frontmatter","fields","description","preview","slug","Card","width","childImageSharp","resize","marginBottom","Placeholder","rectangular","research_preview","research","_1656064391","research_preview_ResearchPreviewItem","Awards","awards_AwardItem","AwardItem","award","main_awards","awards","_993364624","awards_Awards","BlogSeeMoreItem","state","isHover","onMouseEnter","_this","setState","onMouseExit","render","this","backgroundColor","onMouseLeave","textAlign","React","BlogPreviewItem","excerpt","date","formatReadableDate","blog_preview","posts","_1138968303","blog_preview_BlogPreviewItem","blog_preview_BlogSeeMoreItem","getWidth","window","onlyComputer","minWidth","innerWidth","DesktopContainer","activeItem","menuItems","isSidebarOpened","handleActive","_this2","_this$props","Menu","secondary","pointing","fixed","Container","header","index","Link","undefined","active","to","spy","smooth","duration","offset","onSetActive","paddingTop","MobileContainer","_this3","handleHide","handleToggle","handleClick","_this4","_this$state","_this$props2","onClick","Sidebar","Pushable","animation","vertical","onHide","visible","zIndex","delay","Pusher","dimmed","container","container_DesktopContainer","container_MobileContainer","footer","paramCase","__webpack_exports__","layout","Segment","Element","basic","require","padded","minHeight","__webpack_require__","d","formatPagePath","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment","format","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","isMouseOn","handleMouseEnter","handleMouseLeave","_this$props$inverted","lineColor","react__WEBPACK_IMPORTED_MODULE_1__","boxShadow","react__WEBPACK_IMPORTED_MODULE_0__","Layout","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","module","exports","p"],"mappings":"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","file":"component---src-pages-index-tsx-fd2a49ea6cc0b7e69989.js","sourcesContent":["import * as React from 'react'\r\nimport { Grid, Image, Item, Label } from \"semantic-ui-react\"\r\nimport { ContactType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst About: React.FunctionComponent<Props> = ({\r\n  content, contacts, imagePath\r\n}) => {\r\n  return (\r\n    <Item.Group>\r\n      <Item>\r\n        <Item.Image size={'medium'} src={imagePath}/>\r\n        <Item.Content verticalAlign={'middle'}>\r\n          <Item.Description style={{color: 'white', fontSize: '1.1em', lineHeight: '2.0em'}}>\r\n            {content}\r\n          </Item.Description>\r\n          <Item.Extra>\r\n            <Label.Group style={{marginTop: '15px'}}>\r\n              {contacts.map(contact =>\r\n                <Label key={contact.id} as={'a'} content={contact.name} icon={contact.icon} href={contact.url} target={'_blank'}/>\r\n              )}\r\n            </Label.Group>\r\n          </Item.Extra>\r\n        </Item.Content>\r\n      </Item>\r\n    </Item.Group>\r\n  )\r\n}\r\n\r\ninterface DefaultProps {\r\n  content: React.ReactNode\r\n  imagePath?: string\r\n}\r\n\r\ninterface Props extends DefaultProps{\r\n  contacts: Array<ContactType>\r\n}\r\n\r\ninterface QueryResult {\r\n  contacts: {\r\n    edges: Array<{\r\n      node: ContactType\r\n    }>\r\n  }\r\n\r\n}\r\n\r\nexport default (props: DefaultProps) => {\r\n  const { contacts } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      contacts: allAchievementXlsxContacts {\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            url\r\n            icon\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <About contacts={contacts.edges.map(({ node }) => node)} {...props}/>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { Item } from \"semantic-ui-react\"\r\nimport { PublicationType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { ReactNode } from \"react\"\r\nimport LinkedSpan from \"../common/linked-span\"\r\n\r\nconst Publications: React.FunctionComponent<Props> = ({\r\n  items\r\n}) => {\r\n  return (\r\n    <Item.Group divided>\r\n      {\r\n        items.map(item => <PublicationItem data={item} key={item.id}/>)\r\n      }\r\n    </Item.Group>\r\n  )\r\n}\r\n\r\nconst PublicationItem: React.FunctionComponent<ItemProps> = ({\r\n  data\r\n}) => {\r\n  const {\r\n    id, type, title, authors, publisher, abbrev, year, volume, issue, pages, doi,\r\n    bibtexFile, paperFile, posterFile, slideFile, videoFile, appendixFile, videoLink, github } = data\r\n  let extra = ''\r\n  if (volume) extra += `, ${volume}`\r\n  if (issue) extra += ` (No. ${issue})`\r\n  if (pages) extra += `, ${pages}`\r\n\r\n  const links = []\r\n\r\n  if (bibtexFile && bibtexFile.name !== 'dummy' && bibtexFile.publicURL) links.push({name: 'BIBTEX', link: bibtexFile.publicURL})\r\n  if (paperFile && paperFile.name !== 'dummy' && paperFile.publicURL) links.push({name: 'PAPER', link: paperFile.publicURL})\r\n  if (posterFile && posterFile.name !== 'dummy' && posterFile.publicURL) links.push({name: 'POSTER', link: posterFile.publicURL})\r\n  if (appendixFile && appendixFile.name !== 'dummy' && appendixFile.publicURL) links.push({name: 'APPENDIX', link: appendixFile.publicURL})\r\n  if (slideFile && slideFile.name !== 'dummy' && slideFile.publicURL) links.push({name: 'SLIDES', link: slideFile.publicURL})\r\n  if (videoFile && videoFile.name !== 'dummy' && videoFile.publicURL) links.push({name: 'VIDEO', link: videoFile.publicURL})\r\n  if (videoLink) links.push({name: 'VIDEO', link: videoLink})\r\n  if (github) links.push({name: 'GITHUB', link: github})\r\n\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Extra style={{\r\n          margin: '0 0 .3em',\r\n          color: 'rgba(0,0,0,.6)',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {type}\r\n        </Item.Extra>\r\n        <Item.Header>\r\n          {title}\r\n        </Item.Header>\r\n        <Item.Meta>\r\n          {year}. {publisher} {abbrev && `(${abbrev})`}{extra}\r\n        </Item.Meta>\r\n        <Item.Description>\r\n          {authors}\r\n        </Item.Description>\r\n        <Item.Extra>\r\n          {doi && <p>DOI: <a href={`https://doi.org/${doi}`} target={'_blank'}><LinkedSpan children={doi} inverted={false}/></a></p>}\r\n          <p>\r\n            {\r\n              links.map( ({name, link}) => <a key={link} href={link} target={'_blank'}><LinkedSpan inverted={false} children={name}/></a>).reduce((acc: Array<ReactNode>, cur: ReactNode) => {\r\n                return acc === null ? [cur] : [...acc, \" | \" , cur]\r\n              }, null)\r\n            }\r\n          </p>\r\n        </Item.Extra>\r\n      </Item.Content>\r\n    </Item>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  items: Array<PublicationType>\r\n}\r\n\r\ninterface ItemProps {\r\n  data: PublicationType\r\n}\r\n\r\ninterface QueryResult {\r\n  publications: {\r\n    edges: Array<{\r\n      node: PublicationType\r\n    }>\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const { publications } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      publications: allAchievementXlsxPublications (\r\n        sort: {\r\n          fields: date\r\n          order: DESC\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            type\r\n            title\r\n            authors\r\n            publisher\r\n            abbrev\r\n            year\r\n            volume\r\n            issue\r\n            pages\r\n            doi\r\n            paperFile {\r\n              name\r\n              publicURL\r\n            }\r\n            posterFile {\r\n              name\r\n              publicURL\r\n            }\r\n            slideFile {\r\n              name\r\n              publicURL\r\n            }\r\n            videoFile {\r\n              name\r\n              publicURL\r\n            }\r\n            appendixFile {\r\n              name\r\n              publicURL\r\n            }\r\n            videoLink\r\n            bibtexFile {\r\n              name\r\n              publicURL\r\n            }\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <Publications items={publications.edges.map(({ node }) => node)}/>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\nimport { AcademicServiceType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst AcademicServices: React.FunctionComponent<Props> = ({\r\n  items\r\n}) => {\r\n  return (\r\n    <List bulleted>\r\n      {items.map(\r\n        item =>\r\n          <List.Item key={item.id}>\r\n            <List.Content>\r\n              <List.Header>\r\n                {item.year}. {item.service}\r\n              </List.Header>\r\n              <List.Description>\r\n                {item.organization}\r\n              </List.Description>\r\n            </List.Content>\r\n          </List.Item>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  items: Array<AcademicServiceType>\r\n}\r\n\r\ninterface QueryResult {\r\n  academicServices: {\r\n    edges: Array<{\r\n      node: AcademicServiceType\r\n    }>\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const { academicServices } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      academicServices: allAchievementXlsxAcademicServices (\r\n        sort: {\r\n          fields: date\r\n          order: DESC\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            year\r\n            organization\r\n            service\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <AcademicServices items={academicServices.edges.map(({ node }) => node)}/>\r\n  )\r\n}","import * as React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\nimport { AffiliationType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst Affiliations: React.FunctionComponent<Props> = ({\r\n  items\r\n}) => {\r\n  return (\r\n    <List bulleted>\r\n      {items.map(\r\n        item =>\r\n          <List.Item key={item.id}>\r\n            <List.Content>\r\n              <List.Header>\r\n                {item.year}. {item.position}\r\n              </List.Header>\r\n              <List.Description>\r\n                {item.organization}\r\n              </List.Description>\r\n            </List.Content>\r\n          </List.Item>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  items: Array<AffiliationType>\r\n}\r\n\r\ninterface QueryResult {\r\n  affiliations: {\r\n    edges: Array<{\r\n      node: AffiliationType\r\n    }>\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const { affiliations } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      affiliations: allAchievementXlsxAffiliations (\r\n        sort: {\r\n          fields: date\r\n          order: DESC\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            year\r\n            organization\r\n            position\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <Affiliations items={affiliations.edges.map(({ node }) => node)}/>\r\n  )\r\n}","import * as React from \"react\"\nimport Slider from 'react-slick'\nimport { Button, Responsive } from \"semantic-ui-react\"\n\nexport default ({ items } : Props) => (\n  <Slider\n    slidesToShow={3}\n    nextArrow={<div><Button icon={'angle right'} circular/></div>}\n    prevArrow={<div><Button icon={'angle left'} circular/></div>}\n    className={'slide'}\n    dots={true}\n    infinite={false}\n    responsive={\n      [\n        {\n          breakpoint: Responsive.onlyTablet.maxWidth as number,\n          settings: {\n            slidesToShow: 2,\n            arrows: false,\n            dots: false\n          }\n        },\n        {\n          breakpoint: Responsive.onlyMobile.maxWidth as number,\n          settings: {\n            arrows: false,\n            slidesToShow: 1,\n            dots: false\n          }\n        }\n      ]\n    }>\n    {\n      items.map(item => (\n        <div className={'slide'}>\n          {item}\n        </div>\n        )\n      )\n    }\n  </Slider>\n)\n\ninterface Props {\n  items: Array<React.ReactNode>\n}","import * as React from \"react\"\r\nimport { Card, Image, Label, Placeholder } from \"semantic-ui-react\"\r\nimport { MarkdownRemarkNodeType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Carousel from \"../common/carousel\"\r\n\r\nconst ResearchPreviewItem: React.FunctionComponent<ItemProps> = ({data}) => {\r\n  const { node } = data\r\n  const { id, frontmatter, fields} = node\r\n  const { title, description, preview } = frontmatter\r\n  const { slug } = fields\r\n\r\n  return (\r\n    <Card key={id} style={{width: '100%'}} as={'a'} href={slug}>\r\n      {preview ? <Image src={preview.childImageSharp.resize.src} style={{marginBottom: 0}}/> :\r\n        <Placeholder>\r\n          <Placeholder.Image rectangular/>\r\n        </Placeholder>\r\n      }\r\n      <Card.Content>\r\n        <Card.Header>{title}</Card.Header>\r\n        { description &&\r\n        <Card.Description>\r\n          {description}\r\n        </Card.Description>\r\n        }\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\ninterface ItemProps {\r\n  data: MarkdownRemarkNodeType\r\n}\r\n\r\ninterface QueryResult {\r\n  research: {\r\n    edges: Array<MarkdownRemarkNodeType>\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const { research } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      research: allMarkdownRemark(\r\n        sort: {\r\n          fields: frontmatter___date\r\n          order: DESC\r\n        }\r\n        filter: {\r\n          frontmatter: {\r\n            category: {\r\n              in: [\"research\", \"Research\"]\r\n            }\r\n          }\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              title\r\n              description\r\n              preview {\r\n                childImageSharp {\r\n                  resize(height: 300, width: 400, cropFocus: CENTER) {\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            fields {\r\n              slug\r\n              category {\r\n                name\r\n                slug\r\n              }\r\n              tags {\r\n                name\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <Carousel\r\n      items={research.edges.map(item => <ResearchPreviewItem data={item}/>)}\r\n    />\r\n  )\r\n}","import * as React from \"react\"\r\nimport { Item } from \"semantic-ui-react\"\r\nimport { AwardType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport LinkedSpan from \"../common/linked-span\"\r\n\r\nconst Awards: React.FunctionComponent<Props> = ({\r\n  items\r\n}) => {\r\n  return (\r\n    <Item.Group divided>\r\n      {\r\n        items.map(item => <AwardItem data={item} key={item.id}/>)\r\n      }\r\n    </Item.Group>\r\n  )\r\n}\r\n\r\nconst AwardItem: React.FunctionComponent<ItemProps> = ({\r\n   data\r\n}) => {\r\n  const { year, organization, award, description, url } = data\r\n\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Header>\r\n          {award}\r\n        </Item.Header>\r\n        <Item.Meta>\r\n          {year}. {organization}\r\n        </Item.Meta>\r\n        <Item.Description>\r\n          <p>\r\n            {description}\r\n          </p>\r\n          <p>\r\n            { url && <a href={url} target={'_blank'}><LinkedSpan inverted={false} children={'LINK'}/></a>}\r\n          </p>\r\n        </Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n  )\r\n}\r\n\r\ninterface ItemProps {\r\n  data: AwardType\r\n}\r\n\r\ninterface Props {\r\n  items: Array<AwardType>\r\n}\r\n\r\ninterface QueryResult {\r\n  awards: {\r\n    edges: Array<{\r\n      node: AwardType\r\n    }>\r\n  }\r\n\r\n}\r\nexport default () => {\r\n  const { awards } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      awards: allAchievementXlsxAwards (\r\n        sort: {\r\n          fields: date\r\n          order: DESC\r\n        }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            year\r\n            organization\r\n            award\r\n            description\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <Awards items={awards.edges.map(({ node }) => node)}/>\r\n  )\r\n}","import * as React from \"react\"\r\nimport { Card, Item } from \"semantic-ui-react\"\r\nimport { MarkdownRemarkNodeType } from \"../../types\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { formatReadableDate } from '../../utils'\r\n\r\nclass BlogSeeMoreItem extends React.Component<{}, SeeMoreState> {\r\n  state: SeeMoreState = {\r\n    isHover: false\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({isHover: true})\r\n  }\r\n\r\n  onMouseExit = () => {\r\n    this.setState({isHover: false})\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const { isHover } = this.state\r\n    const backgroundColor = isHover ? 'rgba(27, 28, 29, 1)' : '#fff'\r\n    const color = isHover ? 'rgba(255,255,255,.9)' : 'rgba(0,0,0,.85)'\r\n    return (\r\n      <Card key={'see-more'}\r\n            href={'./blog'}\r\n            style={{width: '100%', backgroundColor}}\r\n            onMouseEnter ={this.onMouseEnter}\r\n            onMouseLeave={this.onMouseExit}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'} style={{color}}>\r\n            Read all posts\r\n          </Card.Header>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass BlogPreviewItem extends React.Component<ItemProps> {\r\n\r\n  render(): React.ReactNode {\r\n    const { data } = this.props\r\n    const { node } = data\r\n    const { id, frontmatter, fields, excerpt } = node\r\n    const { title, date, preview } = frontmatter\r\n    const { slug } = fields\r\n\r\n    return (\r\n      <Card key={id} as={'a'} style={{width: '100%'}} href={slug}>\r\n        <Card.Content>\r\n          <Item.Group>\r\n          <Item>\r\n            {\r\n              preview && <Item.Image size={'small'} src={preview.childImageSharp.resize.src}/>\r\n            }\r\n            <Item.Content>\r\n              <Item.Header>{title}</Item.Header>\r\n              <Item.Meta>{formatReadableDate(date)}</Item.Meta>\r\n              <Item.Description>{excerpt}</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n          </Item.Group>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface SeeMoreState {\r\n  isHover: boolean\r\n}\r\n\r\ninterface ItemProps {\r\n  data: MarkdownRemarkNodeType\r\n}\r\n\r\ninterface QueryResult {\r\n  posts: {\r\n    edges: Array<MarkdownRemarkNodeType>\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const { posts } : QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      posts: allMarkdownRemark(\r\n        sort: {\r\n          fields: frontmatter___date\r\n          order: DESC\r\n        }\r\n        filter: {\r\n          frontmatter: {\r\n            category: {\r\n              nin: [\"research\", \"Research\"]\r\n            }\r\n          }\r\n        }\r\n        limit: 5\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              title\r\n              date\r\n              preview {\r\n                childImageSharp {\r\n                  resize(height: 150, width: 150, cropFocus: CENTER) {\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            excerpt(pruneLength: 750)\r\n            fields {\r\n              slug\r\n              category {\r\n                name\r\n                slug\r\n              }\r\n              tags {\r\n                name\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <Card.Group>\r\n      {\r\n        [...posts.edges.map(item => <BlogPreviewItem data={item}/>), <BlogSeeMoreItem/>]\r\n      }\r\n    </Card.Group>\r\n  )\r\n}","import * as React from \"react\"\nimport { Responsive, Menu, Sidebar, Container } from \"semantic-ui-react\"\nimport { Link } from \"react-scroll\"\nimport Footer from '../common/footer'\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyComputer.minWidth as number : window.innerWidth\n}\n\nclass DesktopContainer extends React.Component<Props, State> {\n  state: State = {\n    activeItem: this.props.menuItems[0].key,\n    isSidebarOpened: false,\n  }\n\n  handleActive = (activeItem: string) => this.setState({ activeItem })\n\n  render(): React.ReactNode {\n    const { activeItem } = this.state\n    const { menuItems, children } = this.props\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyComputer.minWidth}>\n        <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n          <Container>\n            <Menu.Item header content={\"CHOI, WOOHYEOK\"} style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n            {menuItems.map(({ name, key }, index) =>\n              <Menu.Item\n                key={key}\n                as={Link}\n                name={key}\n                position={index === 0 ? \"right\" : undefined}\n                active={activeItem === key}\n                content={name}\n                to={key}\n                spy={true}\n                smooth={true}\n                duration={500}\n                offset={index === 0 ? -50 : -20}\n                onSetActive={this.handleActive}\n              />)}\n          </Container>\n        </Menu>\n        <div style={{ paddingTop: \"3.0em\" }}>\n          {children}\n        </div>\n      </Responsive>\n    )\n  }\n}\n\nclass MobileContainer extends React.Component<Props, State> {\n  state: State = {\n    activeItem: this.props.menuItems[0].key,\n    isSidebarOpened: false,\n  }\n\n  handleActive = (activeItem: string) => this.setState({ activeItem } )\n\n  handleHide = () => this.setState({ isSidebarOpened: false })\n\n  handleToggle = () => this.setState({ isSidebarOpened: true })\n\n  handleClick = () => this.setState({ isSidebarOpened: false })\n\n  render(): React.ReactNode {\n    const { activeItem, isSidebarOpened } = this.state\n    const { menuItems, children } = this.props\n\n    return (\n      <Responsive getWidth={getWidth} maxWidth={Responsive.onlyTablet.maxWidth}>\n        <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n          <Container>\n            <Menu.Item key={\"sidebar\"} onClick={this.handleToggle} icon={\"sidebar\"}/>\n            <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK\"} position={\"right\"}\n                       style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n          </Container>\n        </Menu>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n\n            animation={\"push\"}\n            inverted\n            vertical\n            fixed={\"left\"}\n            onHide={this.handleHide}\n            visible={isSidebarOpened}\n            style={{ paddingTop: \"3.0em\", zIndex: 50 }}\n          >\n            {menuItems.map(({ name, key }, index) =>\n              <Menu.Item\n                key={key}\n                as={Link}\n                onClick={this.handleClick}\n                name={key}\n                active={activeItem === key}\n                content={name}\n                to={key}\n                delay={250}\n                spy={true}\n                smooth={true}\n                duration={500}\n                offset={index === 0 ? -50 : -20}\n                onSetActive={this.handleActive}\n              />)}\n          </Sidebar>\n          <Sidebar.Pusher dimmed={isSidebarOpened}>\n            <div style={{ paddingTop: \"3.0em\" }}>\n              {children}\n            </div>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Responsive>\n    )\n  }\n}\n\nexport default ({ children, menuItems } : Props) => (\n  <div>\n    <DesktopContainer menuItems={menuItems} children={children}/>\n    <MobileContainer menuItems={menuItems} children={children}/>\n    <Footer/>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n  menuItems: Array<{\n    name: string\n    key: string\n  }>\n}\n\ninterface State {\n  activeItem?: string\n  isSidebarOpened?: boolean\n}","import * as React from \"react\"\r\nimport { Container, Header, Segment } from \"semantic-ui-react\"\r\nimport { Element } from \"react-scroll\"\r\nimport About from \"../components/main/about\"\r\nimport Publications from \"../components/main/publications\"\r\nimport AcademicServices from \"../components/main/academic-services\"\r\nimport Affiliations from \"../components/main/affiliations\"\r\nimport ResearchPreview from \"../components/main/research-preview\"\r\nimport Awards from \"../components/main/awards\"\r\nimport BlogPreview from \"../components/main/blog-preview\"\r\nimport Layout from \"../components/common/layout\"\r\nimport { paramCase } from \"change-case\"\r\nimport ResponsiveContainer from \"../components/main/container\"\r\nimport LinkedSpan from \"../components/common/linked-span\"\r\n\r\nconst menuItems = [\"About\", \"Research\", \"Publications\", \"Awards & Honours\", \"Academic Services\", \"Affiliations\", \"Posts\"].map(item => ({\r\n  name: item,\r\n  key: paramCase(item),\r\n}))\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <ResponsiveContainer menuItems={menuItems}>\r\n      <Segment inverted vertical as={Element} name={paramCase(\"About\")} basic>\r\n        <Container>\r\n          <About\r\n            content={\r\n              <div>\r\n                <p>\r\n                  Choi, Woohyeok is a 5th-year Ph.d student in the <a href={\"https://iclab.kaist.ac.kr\"}\r\n                                                                      target={\"_blank\"}><LinkedSpan inverted={true}\r\n                                                                                                    children={\"Interactive Computing Lab (ICLab)\"}/></a> at <a\r\n                  href={\"https://www.kaist.ac.kr\"} target={\"_blank\"}><LinkedSpan inverted={true}\r\n                                                                                 children={\"Korea Advanced Institute of Science and Technology (KAIST)\"}/></a>.\r\n                  His research interest focuses on building interactive\r\n                  applications that promote physical health, including exertion-based games, physical activity\r\n                  promotion at work, and mobile-based health intervention. Throughout his studies, he has had a\r\n                  variety of expertise: front-/back-end development, hardware prototyping, machine learning, and\r\n                  statistical analysis.\r\n                </p>\r\n                <p>\r\n                  If you're interested in working with him, please contact:\r\n                </p>\r\n              </div>\r\n            }\r\n            imagePath={require(\"../images/about.jpg\")}\r\n          />\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} as={Element} name={paramCase(\"Research\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} content={\"RESEARCH PROJECTS\"} textAlign={\"left\"}/>\r\n          <ResearchPreview/>\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} as={Element} name={paramCase(\"Publications\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} content={\"PUBLICATIONS\"} textAlign={\"left\"}/>\r\n          <Publications/>\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} as={Element} name={paramCase(\"Awards & Honours\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} content={\"AWARDS & HONOURS\"} textAlign={\"left\"}/>\r\n          <Awards/>\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} as={Element} name={paramCase(\"Academic Services\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} content={\"ACADEMIC SERVICES\"} textAlign={\"left\"}/>\r\n          <AcademicServices/>\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} as={Element} name={paramCase(\"Affiliations\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} content={\"AFFILIATIONS\"} textAlign={\"left\"}/>\r\n          <Affiliations/>\r\n        </Container>\r\n      </Segment>\r\n\r\n      <Segment vertical padded={\"very\"} style={{ minHeight: 1000 }} as={Element} name={paramCase(\"Posts\")} basic>\r\n        <Container>\r\n          <Header as={\"h1\"} textAlign={\"left\"} content={\"RECENT POSTS\"}/>\r\n          <BlogPreview/>\r\n        </Container>\r\n      </Segment>\r\n    </ResponsiveContainer>\r\n  </Layout>\r\n)\r\n\r\n","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","module.exports = __webpack_public_path__ + \"static/about-560c736e901f2cbbf4da1892c8309939.jpg\";"],"sourceRoot":""}