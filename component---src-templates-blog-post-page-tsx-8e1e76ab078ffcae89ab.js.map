{"version":3,"sources":["webpack:///./src/components/blog/post-content.tsx","webpack:///./src/templates/blog-post-page.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/common/seo.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./src/components/common/with-screen-size.tsx","webpack:///./src/components/blog/sub/categories.tsx","webpack:///./src/components/blog/sub/tags.tsx","webpack:///./src/components/blog/sub/recent-posts.tsx","webpack:///./src/components/blog/container.tsx"],"names":["Content","_ref","data","prevPost","nextPost","address","node","id","frontmatter","html","fields","title","date","category","tags","site","_1497630466","react","Header","as","dividing","Subheader","href","slug","linked_span","inverted","children","name","formatReadableDate","Segment","vertical","padded","basic","dangerouslySetInnerHTML","__html","style","fontSize","fontWeight","fontStyle","Label","Group","display","map","_ref2","key","content","siteMetadata","disqusShortname","lib","shortname","config","identifier","url","Grid","columns","stackable","Column","textAlign","withScreenSize","_ref3","screenSize","post_content_Content","container","__webpack_exports__","pageContext","location","excerpt","lang","layout","seo","keywords","concat","description","post_content","query","__webpack_require__","d","formatPagePath","moment__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","moment","format","index","paramType","param","basePath","paramPath","kebabCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","_this$props$inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","_ref$lang","_ref$keywords","_ref$description","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","defaultMetadata","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttribute","link","rel","titleTemplate","meta","length","join","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","target","WrappedComponent","options","defaultOptions","_React$Component","_temp","call","onResize","newSize","getSize","window","innerWidth","_","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_proto","prototype","componentDidMount","addEventListener","componentWillUnmount","cancel","removeEventListener","react__WEBPACK_IMPORTED_MODULE_2__","Object","assign","mobile","tablet","width","option","_option","Categories","items","List","bulleted","count","Item","sub_categories","categories","_243471705","totalCount","group","fieldValue","categories_Categories","BlogTags","tag","sub_tags","_ref3$limit","limit","_84730814","tags_BlogTags","sort","_ref4","_ref5","slice","_ref6","recent_posts","posts","_3672802271","edges","container_DesktopContainer","container_MobileContainer","centered","float","DesktopContainer","Menu","secondary","pointing","fixed","Container","header","lineHeight","position","paddingTop","container_Content","footer","MobileContainer","icon"],"mappings":"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","file":"component---src-templates-blog-post-page-tsx-8e1e76ab078ffcae89ab.js","sourcesContent":["import * as React from \"react\"\r\nimport { MarkdownRemarkNodeType } from \"../../types\"\r\nimport { Label, Header, Segment, Grid } from \"semantic-ui-react\"\r\nimport { MobileContainer, DesktopContainer } from \"./container\"\r\nimport { formatReadableDate } from \"../../utils\"\r\nimport LinkedSpan from \"../common/linked-span\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { ScreenSize, withScreenSize } from \"../common/with-screen-size\"\r\nimport { DiscussionEmbed } from \"disqus-react\"\r\n\r\nconst Content: React.FunctionComponent<DefaultProps> = ({ data, prevPost, nextPost, address }: DefaultProps) => {\r\n  const { node } = data\r\n  const { id, frontmatter, html, fields } = node\r\n  const { title, date } = frontmatter\r\n  const { category, tags } = fields\r\n  const { site }: QueryResult = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          disqusShortname\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div>\r\n      <Header as={\"h1\"} dividing>\r\n        <Header.Subheader>\r\n          Category: <a href={category.slug}>\r\n          <LinkedSpan inverted={false} children={category.name}/>\r\n        </a>\r\n        </Header.Subheader>\r\n        {title}\r\n        <Header.Subheader>\r\n          {formatReadableDate(date)}\r\n        </Header.Subheader>\r\n      </Header>\r\n      <Segment vertical padded basic>\r\n        <div dangerouslySetInnerHTML={{ __html: html }}/>\r\n      </Segment>\r\n      {tags &&\r\n      <Segment vertical padded={\"very\"}>\r\n        <span style={{ fontSize: \"16px\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Tagged with </span>\r\n        <Label.Group style={{ display: \"inline\" }}>\r\n          {tags.map(({ name, slug }) => <Label key={name} href={slug} content={name}/>)}\r\n        </Label.Group>\r\n      </Segment>\r\n      }\r\n      {\r\n        site.siteMetadata.disqusShortname &&\r\n        <Segment vertical padded={\"very\"}>\r\n          <DiscussionEmbed\r\n            shortname={site.siteMetadata.disqusShortname}\r\n            config={{\r\n              title: title,\r\n              identifier: id,\r\n              url: address,\r\n            }}\r\n          />\r\n        </Segment>\r\n      }\r\n      <Grid columns={2} as={Segment} vertical stackable padded>\r\n        <Grid.Column textAlign={\"left\"}>\r\n          {prevPost &&\r\n          <Header as={\"h3\"}>\r\n            Previous post\r\n            <Header.Subheader style={{ fontSize: \"16px\" }}>\r\n              <a href={prevPost.slug}>\r\n                <LinkedSpan inverted={false} children={prevPost.title}/>\r\n              </a>\r\n            </Header.Subheader>\r\n          </Header>\r\n          }\r\n        </Grid.Column>\r\n        <Grid.Column textAlign={\"right\"}>\r\n          {nextPost &&\r\n          <Header as={\"h3\"}>\r\n            Next post\r\n            <Header.Subheader style={{ fontSize: \"16px\" }}>\r\n              <a href={nextPost.slug}>\r\n                <LinkedSpan inverted={false} children={nextPost.title}/>\r\n              </a>\r\n            </Header.Subheader>\r\n          </Header>\r\n          }\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ResponsiveContent: React.FunctionComponent<Props> = ({ data, prevPost, nextPost, address, screenSize }: Props) => {\r\n  const content = <Content data={data} address={address} prevPost={prevPost} nextPost={nextPost}/>\r\n\r\n  return (\r\n    screenSize === \"mobile\" ?\r\n      <MobileContainer children={content}/> :\r\n      <DesktopContainer children={content}/>\r\n  )\r\n}\r\n\r\nexport default withScreenSize(ResponsiveContent)\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      disqusShortname?: string\r\n    }\r\n  }\r\n}\r\n\r\ninterface DefaultProps {\r\n  data: MarkdownRemarkNodeType\r\n  address: string\r\n  prevPost?: {\r\n    title?: string\r\n    slug?: string\r\n  }\r\n  nextPost?: {\r\n    title?: string\r\n    slug?: string\r\n  }\r\n}\r\n\r\ninterface Props extends DefaultProps {\r\n  screenSize?: ScreenSize\r\n}","import * as React from 'react'\nimport Layout from \"../components/layout\"\nimport BlogContent from '../components/blog/post-content'\nimport { MarkdownRemarkNodeType } from \"../types\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/common/seo\"\n\nexport default ( { data, pageContext, location } : Props) => {\n  const { node } = data\n  const { frontmatter, fields, excerpt } = node\n  const { title, lang } = frontmatter\n  const { category, tags } = fields\n  const { nextPost, prevPost } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={ title }\n           lang={ lang }\n           keywords={[category.name, ...tags.map(({name}) => name)]}\n           description={ excerpt }/>\n      <BlogContent data={data} nextPost={nextPost} prevPost={prevPost} address={location.href}/>\n    </Layout>\n  )\n}\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  location?: {\n    href: string\n  }\n  pageContext: {\n    nextPost?: {\n      title?: string\n      slug?: string\n    }\n    prevPost?: {\n      title?: string\n      slug?: string\n    }\n  }\n}\n\nexport const query = graphql`\n  query getPosts($slug: String!) {\n    node: markdownRemark(fields: {\n      slug: {\n        eq: $slug\n      }\n    }) {\n      id\n      html\n      excerpt(pruneLength: 140)\n      frontmatter {\n        title\n        date\n        lang\n      }\n      fields {\n        slug\n        category {\n          name\n          slug\n        }\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }`","import * as moment from \"moment\"\nimport { kebabCase } from 'lodash'\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${kebabCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${kebabCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? kebabCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${kebabCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? kebabCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\"\r\nimport '../layout.css'\r\n\r\nexport default ({children}: Props) => {\r\n  return (\r\n    <div>\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n}","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult = useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      link={[\r\n        {\r\n          rel: 'stylesheet',\r\n          href: 'https://cdn.rawgit.com/jpswalsh/academicons/master/css/academicons.min.css'\r\n        }\r\n      ]}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>; sources are available at <a href={'https://github.com/woohyeok-choi/woohyeok-choi.github.io'} target={'_blank'}><LinkedSpan inverted={true} children={'this repo.'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","import * as React from \"react\"\nimport * as _ from \"lodash\"\n\nexport const withScreenSize = <T extends object>(WrappedComponent: React.ComponentType<T>, options: ScreenSizeOption = defaultOptions) =>\n  class extends React.Component<T, State> {\n    constructor(props) {\n      super(props)\n\n      this.state = {\n        screenSize: \"computer\"\n      }\n\n      this.onResize = _.throttle(this.onResize, 100)\n    }\n\n    componentDidMount() {\n      this.setState({\n        screenSize: getSize(window.innerWidth, options),\n      })\n      window.addEventListener(\"resize\", this.onResize)\n    }\n\n    componentWillUnmount() {\n      this.onResize.cancel()\n      window.removeEventListener(\"resize\", this.onResize)\n    }\n\n    onResize: any = () => {\n      const newSize = getSize(window.innerWidth, options)\n      const { screenSize } = this.state\n\n      if (newSize !== screenSize) {\n        this.setState({\n          screenSize: newSize,\n        })\n      }\n    }\n\n    render(): React.ReactNode {\n      return (\n        <WrappedComponent {...this.props} screenSize={this.state.screenSize}/>\n      )\n    }\n  }\n\nexport type ScreenSize = \"mobile\" | \"tablet\" | \"computer\"\n\ninterface State {\n  screenSize: ScreenSize\n}\n\nexport interface ScreenSizeOption {\n  mobile?: number\n  tablet?: number\n}\n\nconst defaultOptions: ScreenSizeOption = {\n  mobile: 767,\n  tablet: 991\n}\n\nconst getSize = (width: number, option: ScreenSizeOption = defaultOptions): ScreenSize => {\n  const { mobile, tablet } = option\n\n  if (width < mobile) {\n    return \"mobile\"\n  } else if (width < tablet) {\n    return \"tablet\"\n  } else {\n    return \"computer\"\n  }\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\r\nimport { Label } from \"semantic-ui-react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { formatPagePath } from \"../../../utils\"\r\n\r\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\r\n  return (\r\n    <Label.Group>\r\n      {\r\n        items.map(({ tag, link, count }) =>\r\n          <Label key={tag} as={\"a\"} href={link}>\r\n            {tag} ({count})\r\n          </Label>\r\n        )\r\n      }\r\n    </Label.Group>\r\n  )\r\n}\r\n\r\nexport default ({ limit = 10 }: DefaultProps) => {\r\n  const { tags }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      tags: allMarkdownRemark {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }`,\r\n  )\r\n\r\n  const { group } = tags\r\n\r\n  return (\r\n    <BlogTags items={\r\n      group\r\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\r\n        .slice(0, limit)\r\n        .map(({ fieldValue, totalCount }) => ({\r\n          tag: fieldValue,\r\n          count: totalCount,\r\n          link: formatPagePath(0, \"tag\", fieldValue),\r\n        }))\r\n    }/>\r\n  )\r\n}\r\n\r\n\r\ninterface QueryResult {\r\n  tags: {\r\n    group: Array<{\r\n      fieldValue: string\r\n      totalCount: number\r\n    }>\r\n  }\r\n}\r\n\r\ninterface DefaultProps {\r\n  limit?: number\r\n}\r\n\r\ninterface Props extends DefaultProps {\r\n  items: Array<{\r\n    tag: string\r\n    count: number\r\n    link?: string\r\n  }>\r\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub/categories\"\nimport BlogTags from \"./sub/tags\"\nimport BlogRecentPosts from \"./sub/recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nconst Content: React.FunctionComponent<Props> = ({ children }: Props) => (\n  <Grid centered container stackable>\n    <Grid.Column width={12}>\n      {children}\n    </Grid.Column>\n    <Grid.Column width={4}>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"} content={\"Categories\"}/>\n        <BlogCategories/>\n      </Segment>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"}>\n          Tags\n          <Header.Subheader style={{ display: \"inline\", float: \"right\" }} as={\"a\"} href={\"/blog/tags\"}>\n            <LinkedSpan inverted={false} children={\"View all tags...\"}/>\n          </Header.Subheader>\n        </Header>\n        <BlogTags limit={10}/>\n      </Segment>\n      <Segment color={\"grey\"} vertical padded>\n        <Header as={\"h4\"} content={\"Recent Posts\"}/>\n        <BlogRecentPosts/>\n      </Segment>\n    </Grid.Column>\n  </Grid>\n)\n\nconst DesktopContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\n  (\n    <div>\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n        <Container>\n          <Menu.Item header\n                     key={\"header\"}\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\n                     href={\"/blog\"}\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}\n          />\n          <Menu.Item key={\"main\"}\n                     content={\"Go to main page\"}\n                     position={\"right\"}\n                     href={\"/\"}/>\n        </Container>\n      </Menu>\n      <div style={{ paddingTop: \"7.0em\" }}>\n        <Content children={children}/>\n        <Footer/>\n      </div>\n    </div>\n  )\n\n\nconst MobileContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\n  (\n    <div>\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n        <Container>\n          <Menu.Item key={\"home\"}\n                     href={\"/\"}\n                     icon={\"home\"}/>\n          <Menu.Item key={\"header\"}\n                     header\n                     href={\"/blog\"}\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\n                     position={\"right\"}\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        </Container>\n      </Menu>\n      <div style={{ paddingTop: \"7.0em\" }}>\n        <Content children={children}/>\n        <Footer/>\n      </div>\n    </div>\n  )\n\nexport {\n  DesktopContainer, MobileContainer\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n\n"],"sourceRoot":""}