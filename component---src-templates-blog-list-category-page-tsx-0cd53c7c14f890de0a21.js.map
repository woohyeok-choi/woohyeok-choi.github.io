{"version":3,"sources":["webpack:///./src/templates/blog-list-category-page.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/blog/main-post-list.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_common_layout__WEBPACK_IMPORTED_MODULE_2__","_components_blog_main_post_list__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_ref","data","pageContext","param","currentPage","totalPage","totalCount","items","posts","edges","header","undefined","style","fontStyle","onPageChange","page","navigate","formatPagePath","formatReadableDate","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","date","moment","format","index","paramType","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","children","_this$props$inverted","inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","Layout","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","padded","vertical","textAlign","href","target","m","module","exports","require","default","Categories","react","List","link","bulleted","map","_ref2","category","count","Item","key","sub_categories","categories","_243471705","group","concat","_ref3","fieldValue","sub_categories_Categories","BlogTags","Label","Group","tag","as","sub_tags","_ref3$limit","limit","_84730814","tags","sub_tags_BlogTags","sort","_ref4","_ref5","a","slice","_ref6","sub_recent_posts","_3672802271","node","fields","slug","content","frontmatter","title","Menu","secondary","pointing","fixed","Container","fontSize","lineHeight","position","paddingTop","Grid","centered","container","stackable","Column","width","Segment","Header","Subheader","display","float","linked_span","footer","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","createContext","createElement","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","BlogListItem","excerpt","preview","react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","Image","size","src","childImageSharp","resize","Extra","marginBottom","name","Meta","Description","extra","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","_container__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","dividing","item","id","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","totalPages","activePage","ellipsisItem","boundaryRange","siblingRange","prevItem","nextItem","_onPageChange","_x","_x2","apply","arguments","toString","_"],"mappings":"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","file":"component---src-templates-blog-list-category-page-tsx-0cd53c7c14f890de0a21.js","sourcesContent":["import * as React from 'react'\r\nimport { graphql, navigate } from \"gatsby\"\r\nimport Layout from \"../components/common/layout\"\r\nimport BlogList from \"../components/blog/main-post-list\"\r\nimport { formatPagePath } from \"../utils\"\r\nimport { MarkdownRemarkNodeType } from \"../types\"\r\n\r\nexport default ({ data, pageContext } : Props) => {\r\n  const { param, currentPage, totalPage, totalCount } = pageContext\r\n  return (\r\n    <Layout>\r\n      <BlogList items={data.posts.edges}\r\n                header={param === '*' ? undefined:\r\n                  <div>\r\n                    {`${totalCount} posts categorized as `}\r\n                    <span style={{fontStyle: 'italic'}}>\r\n                      {`\"${param}\"`}\r\n                    </span>\r\n                  </div>\r\n                }\r\n                currentPage={currentPage}\r\n                onPageChange={ page => navigate(formatPagePath(page - 1, 'category', param === '*' ? undefined : param))}\r\n                totalPage={totalPage}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query listBlogPostsByCategory($skip: Int!, $limit: Int!, $param: String!) {\r\n    posts: allMarkdownRemark(\r\n      sort: {\r\n        fields: frontmatter___date,\r\n        order: DESC\r\n      }\r\n      limit: $limit\r\n      skip: $skip\r\n      filter: {\r\n        frontmatter: {\r\n          category: {\r\n            glob: $param\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 360)\r\n          frontmatter {\r\n            title\r\n            date\r\n            preview {\r\n              childImageSharp {\r\n                resize(height: 150, width: 150, cropFocus: CENTER) {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n            category {\r\n              name\r\n              slug\r\n            }\r\n            tags {\r\n              name\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n\r\ninterface PageContext {\r\n  currentPage: number\r\n  totalPage: number\r\n  param: string\r\n  totalCount?: number\r\n}\r\n\r\ninterface QueryResult {\r\n  posts: {\r\n    edges: Array<MarkdownRemarkNodeType>\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  data: QueryResult\r\n  pageContext: PageContext\r\n}","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\"\r\nimport { MarkdownRemarkNodeType } from \"../../types\"\r\nimport { Label, Item, Header, Segment, Card, Pagination } from \"semantic-ui-react\"\r\nimport { formatReadableDate } from \"../../utils\"\r\nimport BlogContainer from './container'\r\n\r\nconst BlogListItem: React.FunctionComponent<ItemProps> = ({ data }) => {\r\n  const { node } = data\r\n  const { frontmatter, fields, excerpt } = node\r\n  const { title, date, preview } = frontmatter\r\n  const { slug, category, tags } = fields\r\n\r\n  return (\r\n   <Card style={{width: '100%'}} href={slug}>\r\n     <Card.Content>\r\n       <Item.Group>\r\n         <Item>\r\n           {\r\n             preview && <Item.Image size={'small'} src={preview.childImageSharp.resize.src}/>\r\n           }\r\n           <Item.Content>\r\n             <Item.Extra style={{marginBottom: '5px'}}>\r\n               { category.name }\r\n             </Item.Extra>\r\n             <Item.Header>{title}</Item.Header>\r\n             <Item.Meta>{formatReadableDate(date)}</Item.Meta>\r\n             <Item.Description>{excerpt}</Item.Description>\r\n           </Item.Content>\r\n         </Item>\r\n       </Item.Group>\r\n     </Card.Content>\r\n     { tags &&\r\n     <Card.Content extra>\r\n       <Label.Group>\r\n         { tags.map(({name}) => <Label key={name} content={name} size={'mini'}/>) }\r\n       </Label.Group>\r\n     </Card.Content>\r\n     }\r\n   </Card>\r\n  )\r\n}\r\n\r\n\r\nexport default ({header, items, currentPage, totalPage, onPageChange }: Props) => {\r\n  return (\r\n    <BlogContainer>\r\n      { header && <Header as={'h1'} dividing>{ header }</Header> }\r\n      { items ?\r\n        items.map(item => <BlogListItem key={item.node.id} data={item}/>) :\r\n        <Header as={'h1'} content={'No post'}/>\r\n      }\r\n      <Segment vertical padded textAlign={'center'}>\r\n        <Pagination\r\n          totalPages={totalPage}\r\n          activePage={currentPage}\r\n          ellipsisItem={undefined}\r\n          boundaryRange={0}\r\n          siblingRange={2}\r\n          prevItem={undefined}\r\n          nextItem={undefined}\r\n          onPageChange={ (_, { activePage }) => {\r\n            onPageChange(activePage)\r\n          }}\r\n        />\r\n      </Segment>\r\n    </BlogContainer>\r\n  )\r\n}\r\n\r\ninterface Props {\r\n  header?: React.ReactNode\r\n  onPageChange?: (number) => void\r\n  currentPage?: number\r\n  totalPage?: number\r\n  items: Array<MarkdownRemarkNodeType>\r\n}\r\n\r\ninterface ItemProps {\r\n  data: MarkdownRemarkNodeType\r\n}"],"sourceRoot":""}