{"version":3,"sources":["webpack:///./src/components/blog/main-post-page.tsx","webpack:///./src/templates/blog-post-page.jsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/seo.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx"],"names":["main_post_page","_ref","data","prevPost","nextPost","node","frontmatter","html","fields","title","date","category","tags","react","container","Header","as","dividing","Subheader","href","slug","target","linked_span","inverted","children","name","formatReadableDate","Segment","vertical","padded","basic","dangerouslySetInnerHTML","__html","style","fontSize","fontWeight","fontStyle","Label","Group","display","map","tag","key","content","Grid","columns","stackable","Column","textAlign","__webpack_exports__","pageContext","id","excerpt","lang","layout","seo","keywords","concat","_ref2","description","lib","shortname","config","url","identifier","query","__webpack_require__","d","formatPagePath","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment","format","index","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","_this$props$inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","Layout","_ref$lang","_ref$keywords","_ref$description","siteMetadata","_public_static_d_2695700021_json__WEBPACK_IMPORTED_MODULE_0__","site","metaDescription","defaultMetadata","property","author","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttribute","titleTemplate","meta","length","join","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","Categories","items","List","link","bulleted","count","Item","sub_categories","categories","_243471705","totalCount","group","_ref3","fieldValue","sub_categories_Categories","BlogTags","sub_tags","_ref3$limit","limit","_84730814","sub_tags_BlogTags","sort","_ref4","_ref5","slice","_ref6","sub_recent_posts","posts","_3672802271","edges","Menu","secondary","pointing","fixed","Container","header","lineHeight","position","paddingTop","centered","width","float","footer"],"mappings":"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","file":"component---src-templates-blog-post-page-jsx-ba7394b5877d95ff8d7c.js","sourcesContent":["import * as React from \"react\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\nimport { Label, Header, Segment, Grid } from \"semantic-ui-react\"\nimport BlogContainer from './container'\nimport { formatReadableDate } from '../../utils'\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ( { data, prevPost, nextPost } : Props) => {\n  const { node } = data\n  const { frontmatter, html, fields } = node\n  const { title, date } = frontmatter\n  const { category, tags } = fields\n\n  return (\n    <BlogContainer>\n      <Header as={'h1'} dividing>\n        <Header.Subheader>\n          Category: <a href={category.slug} target={'_blank'}>\n            <LinkedSpan inverted={false} children={category.name}/>\n          </a>\n        </Header.Subheader>\n        {title}\n        <Header.Subheader>\n          { formatReadableDate(date) }\n        </Header.Subheader>\n      </Header>\n      <Segment vertical padded basic>\n        <div dangerouslySetInnerHTML={{__html: html}}/>\n      </Segment>\n      { tags &&\n      <Segment vertical padded={'very'}>\n        <span style={{fontSize: '16px', fontWeight: 'bold', fontStyle: 'italic'}}>Tagged with </span>\n        <Label.Group style={{display: 'inline'}}>\n          { tags.map(tag => <Label key={tag.name} href={tag.slug} content={tag.name}/>) }\n        </Label.Group>\n      </Segment>\n      }\n      <Grid columns={2} as={Segment} vertical stackable>\n        <Grid.Column textAlign={'left'}>\n          { prevPost &&\n            <Header as={'h3'}>\n              Previous post\n              <Header.Subheader style={{fontSize: '16px'}}>\n                <a href={prevPost.slug}>\n                  <LinkedSpan inverted={false} children={prevPost.title}/>\n                </a>\n              </Header.Subheader>\n            </Header>\n          }\n        </Grid.Column>\n        <Grid.Column textAlign={'right'}>\n            { nextPost &&\n              <Header as={'h3'}>\n                Next post\n                <Header.Subheader style={{fontSize: '16px'}}>\n                  <a href={nextPost.slug}>\n                    <LinkedSpan inverted={false} children={nextPost.title}/>\n                  </a>\n                </Header.Subheader>\n              </Header>\n            }\n        </Grid.Column>\n      </Grid>\n    </BlogContainer>\n  )\n}\n\ninterface Props {\n  data: MarkdownRemarkNodeType\n  prevPost?: {\n    title?: string\n    slug?: string\n  }\n  nextPost?: {\n    title?: string\n    slug?: string\n  }\n}","import * as React from 'react'\nimport Layout from \"../components/common/layout\"\nimport BlogContent from '../components/blog/main-post-page'\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/common/seo\"\nimport { CommentEmbed, DiscussionEmbed, CommentCount } from 'disqus-react'\n\nexport default ({ data, pageContext }) => {\n  const { node } = data\n  const { id, frontmatter, fields, excerpt } = node\n  const { title, lang } = frontmatter\n  const { category, tags, slug } = fields\n  const { nextPost, prevPost } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={ title }\n           lang={ lang }\n           keywords={[category.name, ...tags.map(({name}) => name)]}\n           description={ excerpt }/>\n      <BlogContent data={data} nextPost={nextPost} prevPost={prevPost}/>\n      <CommentCount shortname={'choi-woohyeok'} config={{\n        url: slug,\n        identifier: slug,\n        title: title\n      }}/>\n      <DiscussionEmbed shortname={'choi-woohyeok'} config={{\n        url: slug,\n        identifier: slug,\n        title: title\n      }}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query getPostsJs($slug: String!) {\n    node: markdownRemark(fields: {\n      slug: {\n        eq: $slug\n      }\n    }) {\n      id\n      html\n      excerpt(pruneLength: 140)\n      frontmatter {\n        title\n        date\n        lang\n      }\n      fields {\n        slug\n        category {\n          name\n          slug\n        }\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }`","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\ninterface Props {\r\n  description?: string\r\n  lang?: string\r\n  keywords?: Array<string>\r\n  title: string\r\n}\r\n\r\ninterface QueryResult {\r\n  site: {\r\n    siteMetadata: {\r\n      title?: string\r\n      description?: string\r\n      author?: string\r\n    }\r\n  }\r\n}\r\n\r\nexport default ({ lang = 'en', keywords = [], title, description = ''}: Props) => {\r\n  const { site } : QueryResult= useStaticQuery(graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }`)\r\n  const { siteMetadata } = site\r\n\r\n  const metaDescription = description || siteMetadata.description\r\n  const defaultMetadata = [\r\n    {\r\n      name: `description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      property: `og:site_name`,\r\n      content: siteMetadata.title\r\n    },\r\n    {\r\n      property: `og:description`,\r\n      content: metaDescription,\r\n    },\r\n    {\r\n      property: `og:type`,\r\n      content: `website`,\r\n    },\r\n    {\r\n      name: `twitter:card`,\r\n      content: `summary`,\r\n    },\r\n    {\r\n      name: `twitter:creator`,\r\n      content: siteMetadata.author,\r\n    },\r\n    {\r\n      name: `twitter:title`,\r\n      content: title,\r\n    },\r\n    {\r\n      name: `twitter:description`,\r\n      content: metaDescription,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttribute={{\r\n        lang\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${siteMetadata.title}`}\r\n      meta={\r\n        defaultMetadata.concat(keywords.length ? { name: 'keywords', content: keywords.join(', ') } : [])\r\n      }\r\n    />\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>; sources are available at <a href={'https://github.com/woohyeok-choi/woohyeok-choi.github.io'} target={'_blank'}><LinkedSpan inverted={true} children={'this repo.'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}"],"sourceRoot":""}