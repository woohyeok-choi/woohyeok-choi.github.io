{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./src/components/blog/sub/categories.tsx","webpack:///./src/components/blog/sub/tags.tsx","webpack:///./src/components/blog/sub/recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./src/components/blog/post-tags.tsx","webpack:///./src/pages/blog/tags.tsx"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","Categories","items","List","link","bulleted","map","category","count","Item","key","href","categories","useStaticQuery","totalCount","group","formatPagePath","fieldValue","BlogTags","Label","Group","tag","as","limit","tags","sort","a","slice","posts","edges","node","fields","slug","content","frontmatter","title","Content","Segment","vertical","Header","Subheader","style","display","float","DesktopContainer","Menu","secondary","pointing","fixed","backgroundColor","Container","header","fontSize","lineHeight","position","paddingTop","MobileContainer","icon","alphabet","split","AlphabeticalTagItem","basic","b","localeCompare","dividing","value","filter","toLowerCase","startsWith","length","toUpperCase","withScreenSize","screenSize","description"],"mappings":"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","file":"component---src-pages-blog-tags-tsx-cd44fde891d6190889d6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","import * as React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { formatPagePath } from \"../../../utils\"\r\n\r\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\r\n  return (\r\n    <List link bulleted>\r\n      {\r\n        items.map(({ category, link, count }) =>\r\n          <List.Item key={category}\r\n                     href={link}>\r\n            {category} ({count})\r\n          </List.Item>\r\n        )\r\n      }\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default () => {\r\n  const { categories }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      categories: allMarkdownRemark {\r\n        group(field: frontmatter___category) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n        totalCount\r\n      }\r\n    }`,\r\n  )\r\n  const { totalCount, group } = categories\r\n  const items = [\r\n    {\r\n      category: \"All\",\r\n      count: totalCount,\r\n      link: formatPagePath(0, \"category\"),\r\n    },\r\n    ...group.map(({ fieldValue, totalCount }) => ({\r\n      category: fieldValue,\r\n      count: totalCount,\r\n      link: formatPagePath(0, \"category\", fieldValue),\r\n    })),\r\n  ]\r\n\r\n  return (\r\n    <Categories items={items} />\r\n  )\r\n}\r\n\r\ninterface QueryResult {\r\n  categories: {\r\n    group: Array<{\r\n      fieldValue\r\n      totalCount\r\n    }>\r\n    totalCount: number\r\n  }\r\n}\r\n\r\n\r\ninterface Props {\r\n  items: Array<{\r\n    category: string\r\n    count?: number\r\n    link?: string\r\n  }>\r\n}","import * as React from \"react\"\r\nimport { Label } from \"semantic-ui-react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { formatPagePath } from \"../../../utils\"\r\n\r\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\r\n  return (\r\n    <Label.Group>\r\n      {\r\n        items.map(({ tag, link, count }) =>\r\n          <Label key={tag} as={\"a\"} href={link}>\r\n            {tag} ({count})\r\n          </Label>\r\n        )\r\n      }\r\n    </Label.Group>\r\n  )\r\n}\r\n\r\nexport default ({ limit = 10 }: DefaultProps) => {\r\n  const { tags }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      tags: allMarkdownRemark {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }`,\r\n  )\r\n\r\n  const { group } = tags\r\n\r\n  return (\r\n    <BlogTags items={\r\n      group\r\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\r\n        .slice(0, limit)\r\n        .map(({ fieldValue, totalCount }) => ({\r\n          tag: fieldValue,\r\n          count: totalCount,\r\n          link: formatPagePath(0, \"tag\", fieldValue),\r\n        }))\r\n    }/>\r\n  )\r\n}\r\n\r\n\r\ninterface QueryResult {\r\n  tags: {\r\n    group: Array<{\r\n      fieldValue: string\r\n      totalCount: number\r\n    }>\r\n  }\r\n}\r\n\r\ninterface DefaultProps {\r\n  limit?: number\r\n}\r\n\r\ninterface Props extends DefaultProps {\r\n  items: Array<{\r\n    tag: string\r\n    count: number\r\n    link?: string\r\n  }>\r\n}","import * as React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { MarkdownRemarkNodeType } from \"../../../types\"\r\n\r\nexport default () => {\r\n  const { posts }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n            }\r\n            htmlAst\r\n            fields {\r\n              slug \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }`\r\n  )\r\n  return (\r\n    <List link bulleted>\r\n      {\r\n        posts.edges.map(({ node }) =>\r\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\r\n        )\r\n      }\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\ninterface QueryResult {\r\n  posts: {\r\n    edges: Array<MarkdownRemarkNodeType>\r\n  }\r\n}\r\n","import * as React from \"react\"\r\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\r\nimport BlogCategories from \"./sub/categories\"\r\nimport BlogTags from \"./sub/tags\"\r\nimport BlogRecentPosts from \"./sub/recent-posts\"\r\nimport Footer from \"../common/footer\"\r\nimport LinkedSpan from \"../common/linked-span\"\r\n\r\nconst Content: React.FunctionComponent<Props> = ({ children }: Props) => (\r\n  <Grid centered container stackable>\r\n    <Grid.Column width={12}>\r\n      {children}\r\n    </Grid.Column>\r\n    <Grid.Column width={4}>\r\n      <Segment color={\"grey\"} vertical padded>\r\n        <Header as={\"h4\"} content={\"Categories\"}/>\r\n        <BlogCategories/>\r\n      </Segment>\r\n      <Segment color={\"grey\"} vertical padded>\r\n        <Header as={\"h4\"}>\r\n          Tags\r\n          <Header.Subheader style={{ display: \"inline\", float: \"right\" }} as={\"a\"} href={\"/blog/tags\"}>\r\n            <LinkedSpan inverted={false} children={\"View all tags...\"}/>\r\n          </Header.Subheader>\r\n        </Header>\r\n        <BlogTags limit={10}/>\r\n      </Segment>\r\n      <Segment color={\"grey\"} vertical padded>\r\n        <Header as={\"h4\"} content={\"Recent Posts\"}/>\r\n        <BlogRecentPosts/>\r\n      </Segment>\r\n    </Grid.Column>\r\n  </Grid>\r\n)\r\n\r\nconst DesktopContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\r\n  (\r\n    <div>\r\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\r\n        <Container>\r\n          <Menu.Item header\r\n                     key={\"header\"}\r\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\r\n                     href={\"/blog\"}\r\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}\r\n          />\r\n          <Menu.Item key={\"main\"}\r\n                     content={\"Go to main page\"}\r\n                     position={\"right\"}\r\n                     href={\"/\"}/>\r\n        </Container>\r\n      </Menu>\r\n      <div style={{ paddingTop: \"7.0em\" }}>\r\n        <Content children={children}/>\r\n        <Footer/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\nconst MobileContainer: React.FunctionComponent<Props> = ({ children }: Props) =>\r\n  (\r\n    <div>\r\n      <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\r\n        <Container>\r\n          <Menu.Item key={\"home\"}\r\n                     href={\"/\"}\r\n                     icon={\"home\"}/>\r\n          <Menu.Item key={\"header\"}\r\n                     header\r\n                     href={\"/blog\"}\r\n                     content={\"CHOI, WOOHYEOK's BLOG\"}\r\n                     position={\"right\"}\r\n                     style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\r\n        </Container>\r\n      </Menu>\r\n      <div style={{ paddingTop: \"7.0em\" }}>\r\n        <Content children={children}/>\r\n        <Footer/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\nexport {\r\n  DesktopContainer, MobileContainer\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\n\r\n","import * as React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Header, Label, Segment } from \"semantic-ui-react\"\r\nimport { formatPagePath } from \"../../utils\"\r\nimport { DesktopContainer, MobileContainer } from \"./container\"\r\nimport { ScreenSize, withScreenSize } from \"../common/with-screen-size\"\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\r\n\r\nconst AlphabeticalTagItem: React.FunctionComponent<ItemProps> = ({ items, alphabet }: ItemProps) => (\r\n  <Segment padded={\"very\"} vertical basic>\r\n    <Header as={\"h3\"} content={alphabet}/>\r\n    <Label.Group>\r\n      {\r\n        items.sort(({ tag: a }, { tag: b }) =>\r\n          (\"\" + a).localeCompare(b),\r\n        ).map(({ tag, count, link }) =>\r\n          <Label key={tag} href={link}>\r\n            {tag} ({count})\r\n          </Label>,\r\n        )\r\n      }\r\n    </Label.Group>\r\n  </Segment>\r\n)\r\n\r\nconst Content: React.FunctionComponent<{}> = () => {\r\n  const { tags }: QueryResult = useStaticQuery(graphql`\r\n    query {\r\n      tags: allMarkdownRemark {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }`,\r\n  )\r\n  const { group } = tags\r\n\r\n  return (\r\n    <div>\r\n      <Header as={\"h1\"} dividing>Tags</Header>\r\n      {\r\n        alphabet.map((value) => {\r\n          const tags = group.filter(({ fieldValue }) =>\r\n            fieldValue.toLowerCase().startsWith(value),\r\n          ).map(({ fieldValue, totalCount }) => ({\r\n            tag: fieldValue,\r\n            count: totalCount,\r\n            link: formatPagePath(0, \"tag\", fieldValue),\r\n          }))\r\n          if (tags && tags.length)\r\n            return (\r\n              <AlphabeticalTagItem key={value} items={tags} alphabet={value.toUpperCase()}/>\r\n            )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst ResponsiveContent: React.FunctionComponent<Props> = ({ screenSize }: Props) => {\r\n  const content = <Content/>\r\n  return (\r\n    screenSize === \"mobile\" ?\r\n      <MobileContainer children={content}/> :\r\n      <DesktopContainer children={content}/>\r\n  )\r\n}\r\n\r\nexport default withScreenSize(ResponsiveContent)\r\n\r\ninterface ItemProps {\r\n  items: Array<{\r\n    tag: string\r\n    count: number\r\n    link?: string\r\n  }>\r\n  alphabet: string\r\n}\r\n\r\ninterface Props {\r\n  screenSize?: ScreenSize\r\n}\r\n\r\ninterface QueryResult {\r\n  tags: {\r\n    group: Array<{\r\n      fieldValue: string\r\n      totalCount: number\r\n    }>\r\n  }\r\n}\r\n","import Layout from \"../../components/layout\"\r\nimport BlogAllTags from \"../../components/blog/post-tags\"\r\nimport * as React from \"react\"\r\nimport SEO from \"../../components/common/seo\"\r\n\r\nexport default () => {\r\n  return (\r\n    <Layout>\r\n      <SEO title={'All tags'}\r\n           description={`List of tags used in Choi, Woohyeok's personal blog`}/>\r\n      <BlogAllTags/>\r\n    </Layout>\r\n  )\r\n}"],"sourceRoot":""}