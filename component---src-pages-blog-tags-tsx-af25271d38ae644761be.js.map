{"version":3,"sources":["webpack:///./src/components/blog/main-tags.tsx","webpack:///./src/pages/blog/tags.tsx","webpack:///./src/utils.ts","webpack:///./src/components/common/linked-span.tsx","webpack:///./src/components/common/layout.tsx","webpack:///./src/components/common/footer.tsx","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/blog/sub-categories.tsx","webpack:///./src/components/blog/sub-tags.tsx","webpack:///./src/components/blog/sub-recent-posts.tsx","webpack:///./src/components/blog/container.tsx","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["alphabet","split","AlphabeticalTagItem","_ref","items","react","Segment","padded","vertical","basic","Header","as","content","Label","Group","sort","_ref2","_ref3","a","tag","b","localeCompare","map","_ref4","count","link","key","href","main_tags","group","_84730814","data","tags","container","dividing","value","filter","_ref5","fieldValue","toLowerCase","startsWith","_ref6","totalCount","formatPagePath","length","main_tags_AlphabeticalTagItem","toUpperCase","__webpack_exports__","layout","__webpack_require__","d","formatReadableDate","change_case__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","date","moment","format","index","paramType","param","basePath","paramPath","changeCase","hoverColor","boxColor","textColor","defaultColor","invertedHoverColor","invertedDefaultColor","LinkedSpan","state","isMouseOn","handleMouseEnter","_this","setState","handleMouseLeave","render","_this$props","this","props","children","_this$props$inverted","inverted","lineColor","color","react__WEBPACK_IMPORTED_MODULE_1__","style","backgroundColor","boxShadow","onMouseEnter","onMouseLeave","React","react__WEBPACK_IMPORTED_MODULE_0__","Layout","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_linked_span__WEBPACK_IMPORTED_MODULE_3__","textAlign","target","$export","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","call","Categories","List","bulleted","category","Item","sub_categories","categories","_243471705","concat","sub_categories_Categories","BlogTags","sub_tags","_ref3$limit","limit","sub_tags_BlogTags","slice","sub_recent_posts","posts","_3672802271","edges","node","fields","slug","frontmatter","title","Menu","secondary","pointing","fixed","Container","header","fontSize","lineHeight","position","paddingTop","Grid","centered","stackable","Column","width","Subheader","display","float","linked_span","footer","module","exports","method","arg","GridColumn","className","computer","floated","largeScreen","mobile","only","stretched","tablet","verticalAlign","widescreen","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","columns","divided","reversed","Grid_GridRow","celled","doubling","relaxed","Row","toLength","context","$startsWith","searchString","that","Math","min","arguments","search","String"],"mappings":"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","file":"component---src-pages-blog-tags-tsx-af25271d38ae644761be.js","sourcesContent":["import * as React from \"react\"\nimport BlogContainer from './container'\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Header, Label, Segment } from \"semantic-ui-react\"\nimport { formatPagePath } from \"../../utils\"\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nconst AlphabeticalTagItem: React.FunctionComponent<ItemProps> = ({ items, alphabet} : ItemProps) => (\n  <Segment padded={'very'} vertical basic>\n    <Header as={'h3'} content={alphabet}/>\n    <Label.Group>\n      {\n        items.sort(({tag: a}, {tag: b}) =>\n          ('' + a).localeCompare(b)\n        ).map(({ tag, count, link }) =>\n          <Label key={tag} href={link}>\n            {tag} ({count})\n          </Label>\n        )\n      }\n    </Label.Group>\n  </Segment>\n)\n\nexport default () => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n  const { group } = tags\n  return (\n    <BlogContainer>\n      <Header as={'h1'} dividing>Tags</Header>\n      {\n        alphabet.map( (value) => {\n          const tags = group.filter( ({ fieldValue }) =>\n            fieldValue.toLowerCase().startsWith(value)\n          ).map(({fieldValue, totalCount}) => ({\n            tag: fieldValue,\n            count: totalCount,\n            link: formatPagePath(0, \"tag\", fieldValue)\n          }))\n          if (tags && tags.length)\n            return (\n              <AlphabeticalTagItem key={value} items={tags} alphabet={value.toUpperCase()}/>\n            )\n        })\n      }\n    </BlogContainer>\n  )\n}\n\ninterface ItemProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n  alphabet: string\n}\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n","import Layout from \"../../components/common/layout\"\nimport BlogAllTags from \"../../components/blog/main-tags\"\nimport * as React from \"react\"\n\nexport default () => {\n  return (\n    <Layout>\n      <BlogAllTags/>\n    </Layout>\n  )\n}","import * as changeCase from \"change-case\"\nimport * as moment from \"moment\"\n\ntype ParamType = \"category\" | \"tag\" | \"none\"\n\nexport const formatBlogCategoryPath = (name: string) : string  => `/blog/categories/${changeCase.paramCase(name)}`\n\nexport const formatBlogTagPath = (name: string) : string => `/blog/tags/${changeCase.paramCase(name)}`\n\nexport const formatReadableDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"MMMM Do, YYYY HH:mm\")\n\nexport const formatUrlDate = (date: string) : string => moment(`${date}`, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD-HH-mm\")\n\nexport const formatPostPath = (date: string, title: string, paramType: ParamType | string, param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramType === \"category\") {\n    basePath = `/blog/categories/${paramPath}`\n  } else if (paramType === \"tag\") {\n    basePath = `/blog/tags/${paramPath}`\n  }\n\n  return `${basePath}/posts/${formatUrlDate(date)}-${changeCase.paramCase(title)}`\n}\n\nexport const formatPagePath = (index: number = 0, paramType: 'category' | 'tag', param?: string | null) : string => {\n  let basePath = \"/blog\"\n  const paramPath = param ? changeCase.paramCase(param) : \"\"\n\n  if (paramPath) {\n    if (paramType === \"category\") {\n      basePath = `/blog/categories/${paramPath}`\n    } else if (paramType === \"tag\") {\n      basePath = `/blog/tags/${paramPath}`\n    }\n  }\n\n  if (index !== 0) {\n    basePath = `${basePath}/pages/${index + 1}`\n  }\n\n  return basePath\n}\n\n\n\n\n","import * as React from 'react'\n\nconst hoverColor = {\n  boxColor: 'rgba(0, 0, 0, .87)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst defaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(0, 0, 0, .6)'\n}\n\nconst invertedHoverColor = {\n  boxColor: 'rgba(255, 255, 255, .9)',\n  textColor: 'rgba(0, 0, 0, .85)'\n}\n\nconst invertedDefaultColor = {\n  boxColor: 'rgba(255, 255, 255, 0)',\n  textColor: 'rgba(255, 255, 255, .9)'\n}\n\nconst shadowColor = 'rgba(0, 0, 0, .13)'\n\nconst invertedShadowColor = 'rgba(255, 255, 255, .9)'\n\nexport default class LinkedSpan extends React.Component<Props, State> {\n  state: State = {\n    isMouseOn: false\n  }\n\n  handleMouseEnter = () => this.setState({isMouseOn: true})\n\n  handleMouseLeave = () => this.setState({isMouseOn: false})\n\n  render(): React.ReactNode {\n    const { children, inverted = false } = this.props\n    const { isMouseOn } = this.state\n\n    const lineColor = inverted ? invertedShadowColor : shadowColor\n\n    const color = inverted ? (\n      isMouseOn ? invertedHoverColor : invertedDefaultColor\n    ) : (\n      isMouseOn ? hoverColor : defaultColor\n    )\n\n    return(\n      <span style={{backgroundColor: color.boxColor, boxShadow: `inset 0 -2px 0px 0px ${lineColor}`, color: color.textColor }} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        { children }\n      </span>\n    )\n  }\n\n}\n\ninterface Props {\n  children: React.ReactNode\n  inverted?: boolean\n}\n\ninterface State {\n  isMouseOn: boolean\n}","import * as React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport '../../layout.css'\n\nconst Layout: React.FunctionComponent<Props> = ({\n  children\n}) => {\n  return (\n    <div>\n      { children }\n    </div>\n  )\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport default Layout","import * as React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport LinkedSpan from \"./linked-span\"\n\nexport default () => (\n  <Segment inverted padded vertical textAlign={\"center\"}>\n    <Container>\n      <p>\n        Made by Choi, Woohyeok (woohyeok.choi (at) kaist.ac.kr) &copy; 2019; built with <a\n        href=\"https://www.gatsbyjs.org\" target={\"_blank\"}><LinkedSpan inverted={true} children={'Gatsby'}/></a>\n      </p>\n    </Container>\n  </Segment>\n)","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst Categories: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <List link bulleted>\n      {\n        items.map(({ category, link, count }) =>\n          <List.Item key={category}\n                     href={link}>\n            {category} ({count})\n          </List.Item>\n        )\n      }\n    </List>\n  )\n}\n\nexport default () => {\n  const { categories }: QueryResult = useStaticQuery(graphql`\n    query {\n      categories: allMarkdownRemark {\n        group(field: frontmatter___category) {\n          fieldValue\n          totalCount\n        }\n        totalCount\n      }\n    }`,\n  )\n  const { totalCount, group } = categories\n  const items = [\n    {\n      category: \"All\",\n      count: totalCount,\n      link: formatPagePath(0, \"category\"),\n    },\n    ...group.map(({ fieldValue, totalCount }) => ({\n      category: fieldValue,\n      count: totalCount,\n      link: formatPagePath(0, \"category\", fieldValue),\n    })),\n  ]\n\n  return (\n    <Categories items={items} />\n  )\n}\n\ninterface QueryResult {\n  categories: {\n    group: Array<{\n      fieldValue\n      totalCount\n    }>\n    totalCount: number\n  }\n}\n\n\ninterface Props {\n  items: Array<{\n    category: string\n    count?: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { Label } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { formatPagePath } from \"../../utils\"\n\nconst BlogTags: React.FunctionComponent<Props> = ({ items }) => {\n  return (\n    <Label.Group>\n      {\n        items.map(({ tag, link, count }) =>\n          <Label key={tag} as={\"a\"} href={link}>\n            {tag} ({count})\n          </Label>,\n        )\n      }\n    </Label.Group>\n  )\n}\n\nexport default ({ limit = 10 }: DefaultProps) => {\n  const { tags }: QueryResult = useStaticQuery(graphql`\n    query {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }`,\n  )\n\n  const { group } = tags\n\n  return (\n    <BlogTags items={\n      group\n        .sort(({totalCount: a}, {totalCount: b}) => b - a)\n        .slice(0, limit)\n        .map(({ fieldValue, totalCount }) => ({\n          tag: fieldValue,\n          count: totalCount,\n          link: formatPagePath(0, \"tag\", fieldValue),\n        }))\n    }/>\n  )\n}\n\n\ninterface QueryResult {\n  tags: {\n    group: Array<{\n      fieldValue: string\n      totalCount: number\n    }>\n  }\n}\n\ninterface DefaultProps {\n  limit?: number\n}\n\ninterface Props extends DefaultProps {\n  items: Array<{\n    tag: string\n    count: number\n    link?: string\n  }>\n}","import * as React from \"react\"\nimport { List } from \"semantic-ui-react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { MarkdownRemarkNodeType } from \"../../types\"\n\nexport default () => {\n  const { posts }: QueryResult = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 10) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            htmlAst\n            fields {\n              slug \n            }\n          }\n        }\n      }\n    }`\n  )\n  return (\n    <List link bulleted>\n      {\n        posts.edges.map(({ node }) =>\n          <List.Item key={node.fields.slug} as={\"a\"} href={node.fields.slug} content={node.frontmatter.title}/>,\n        )\n      }\n    </List>\n  )\n}\n\n\ninterface QueryResult {\n  posts: {\n    edges: Array<MarkdownRemarkNodeType>\n  }\n}\n","import * as React from \"react\"\nimport { Container, Grid, Header, Menu, Segment } from \"semantic-ui-react\"\nimport BlogCategories from \"./sub-categories\"\nimport BlogTags from \"./sub-tags\"\nimport BlogRecentPosts from \"./sub-recent-posts\"\nimport Footer from \"../common/footer\"\nimport LinkedSpan from \"../common/linked-span\"\n\nexport default ({ children } : Props) => (\n  <div>\n    <Menu secondary pointing fixed={\"top\"} inverted style={{ backgroundColor: \"#1b1c1d\" }}>\n      <Container>\n        <Menu.Item key={\"header\"} header content={\"CHOI, WOOHYEOK's BLOG\"}\n                   style={{ fontSize: \"1.5em\", lineHeight: \"0.1em\" }}/>\n        <Menu.Item key={\"main\"} content={\"Go to main page\"} position={\"right\"} href={\"/\"}/>\n      </Container>\n    </Menu>\n    <div style={{ paddingTop: \"7.0em\" }}>\n      <Grid centered container stackable>\n        <Grid.Column width={12}>\n          { children }\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Categories\"}/>\n            <BlogCategories />\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"}>\n              Tags\n              <Header.Subheader style={{display: 'inline', float: 'right'}} as={'a'} href={'/blog/tags'}>\n                <LinkedSpan inverted={false} children={'View all tags...'}/>\n              </Header.Subheader>\n            </Header>\n            <BlogTags limit={10}/>\n          </Segment>\n          <Segment color={\"grey\"} vertical padded>\n            <Header as={\"h4\"} content={\"Recent Posts\"}/>\n            <BlogRecentPosts/>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Footer/>\n    </div>\n  </div>\n)\n\ninterface Props {\n  children?: React.ReactNode\n}","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}